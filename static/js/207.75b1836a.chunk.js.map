{"version":3,"file":"static/js/207.75b1836a.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/AddTask.js","../node_modules/@mui/icons-material/Close.js","../node_modules/@mui/icons-material/DeleteSweep.js","../node_modules/@mui/icons-material/Done.js","../node_modules/@mui/icons-material/DoneOutline.js","../node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js","../node_modules/@mui/material/FormControlLabel/FormControlLabel.js","../node_modules/@mui/material/internal/svg-icons/KeyboardArrowLeft.js","../node_modules/@mui/material/internal/svg-icons/KeyboardArrowRight.js","../node_modules/@mui/x-data-grid/node_modules/clsx/dist/clsx.m.js","../node_modules/@mui/x-data-grid/constants/gridClasses.js","../node_modules/@mui/x-data-grid/components/containers/GridRootStyles.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","../node_modules/@mui/x-data-grid/utils/warning.js","../node_modules/@mui/x-data-grid/utils/createSelector.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsSelector.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js","../node_modules/@mui/x-data-grid/components/GridApiContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiContext.js","../node_modules/@mui/x-data-grid/context/GridRootPropsContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridRootProps.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsSelector.js","../node_modules/@mui/x-data-grid/hooks/features/density/densitySelector.js","../node_modules/@mui/x-data-grid/components/containers/GridRoot.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridLogger.js","../node_modules/@mui/x-data-grid/components/containers/GridMainContainer.js","../node_modules/@mui/x-data-grid/components/ErrorBoundary.js","../node_modules/@mui/x-data-grid/components/base/GridErrorHandler.js","../node_modules/@mui/x-data-grid/components/base/GridHeaderPlaceholder.js","../node_modules/@mui/x-data-grid/lib/createDetectElementResize/index.js","../node_modules/@mui/x-data-grid/components/GridAutoSizer.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingSelector.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterSelector.js","../node_modules/@mui/x-data-grid/components/base/GridOverlays.js","../node_modules/@mui/x-data-grid/components/base/GridBody.js","../node_modules/@mui/x-data-grid/components/base/GridFooterPlaceholder.js","../node_modules/@mui/x-data-grid/context/GridContextProvider.js","../node_modules/@mui/x-data-grid/utils/utils.js","../node_modules/@mui/x-data-grid/hooks/core/useGridLoggerFactory.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiMethod.js","../node_modules/@mui/x-data-grid/utils/cleanupTracking/TimerBasedCleanupTracking.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiEventHandler.js","../node_modules/@mui/x-data-grid/utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js","../node_modules/@mui/x-data-grid/utils/EventManager.js","../node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/useGridLocaleText.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridPipeProcessing.js","../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridStrategyProcessing.js","../node_modules/@mui/x-data-grid/hooks/core/useGridStateInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/useGridInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/useGridErrorHandler.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridInitializeState.js","../node_modules/@mui/x-data-grid/hooks/features/clipboard/useGridClipboard.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/columnMenuSelector.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenu.js","../node_modules/@mui/x-data-grid/hooks/utils/useFirstRender.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeProcessor.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeApplier.js","../node_modules/@mui/x-data-grid/components/icons/index.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/filterPanelUtils.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputValue.js","../node_modules/@mui/x-data-grid/components/cell/GridEditInputCell.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingUtils.js","../node_modules/@mui/base/AutocompleteUnstyled/useAutocomplete.js","../node_modules/@mui/material/Autocomplete/autocompleteClasses.js","../node_modules/@mui/material/Autocomplete/Autocomplete.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleValue.js","../node_modules/@mui/x-data-grid/colDef/gridStringOperators.js","../node_modules/@mui/x-data-grid/colDef/gridStringColDef.js","../node_modules/@mui/x-data-grid/colDef/gridNumericOperators.js","../node_modules/@mui/x-data-grid/colDef/gridNumericColDef.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputDate.js","../node_modules/@mui/x-data-grid/colDef/gridDateOperators.js","../node_modules/@mui/x-data-grid/components/cell/GridEditDateCell.js","../node_modules/@mui/x-data-grid/colDef/gridDateColDef.js","../node_modules/@mui/x-data-grid/components/cell/GridBooleanCell.js","../node_modules/@mui/x-data-grid/components/cell/GridEditBooleanCell.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputBoolean.js","../node_modules/@mui/x-data-grid/colDef/gridBooleanColDef.js","../node_modules/@mui/x-data-grid/models/gridEditRowModel.js","../node_modules/@mui/x-data-grid/colDef/gridBooleanOperators.js","../node_modules/@mui/x-data-grid/utils/keyboardUtils.js","../node_modules/@mui/x-data-grid/components/cell/GridEditSingleSelectCell.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputSingleSelect.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js","../node_modules/@mui/x-data-grid/colDef/gridSingleSelectOperators.js","../node_modules/@mui/x-data-grid/colDef/gridSingleSelectColDef.js","../node_modules/@mui/base/ClickAwayListener/ClickAwayListener.js","../node_modules/@mui/x-data-grid/components/menu/GridMenu.js","../node_modules/@mui/x-data-grid/components/cell/GridActionsCell.js","../node_modules/@mui/x-data-grid/colDef/gridActionsColDef.js","../node_modules/@mui/x-data-grid/colDef/gridDefaultColumnTypes.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsUtils.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelsValue.js","../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumns.js","../node_modules/@mui/x-data-grid/models/gridDensity.js","../node_modules/@mui/x-data-grid/hooks/features/density/useGridDensity.js","../node_modules/@mui/x-data-grid/components/columnSelection/GridCellCheckboxRenderer.js","../node_modules/@mui/x-data-grid/hooks/features/focus/gridFocusStateSelector.js","../node_modules/@mui/x-data-grid/hooks/features/selection/gridSelectionSelector.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationSelector.js","../node_modules/@mui/x-data-grid/components/columnSelection/GridHeaderCheckbox.js","../node_modules/@mui/x-data-grid/colDef/gridCheckboxSelectionColDef.js","../node_modules/@mui/x-data-grid/hooks/features/export/serializers/csvSerializer.js","../node_modules/@mui/x-data-grid/hooks/features/export/utils.js","../node_modules/@mui/x-data-grid/models/gridFilterItem.js","../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExport.js","../node_modules/@mui/x-data-grid/hooks/features/export/useGridCsvExport.js","../node_modules/@mui/x-data-grid/utils/exportAs.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsMetaSelector.js","../node_modules/@mui/x-data-grid/models/gridFeatureMode.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterState.js","../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridRegisterStrategyProcessor.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterUtils.js","../node_modules/@mui/x-data-grid/hooks/features/filter/useGridFilter.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridVisibleRows.js","../node_modules/@mui/x-data-grid/hooks/features/focus/useGridFocus.js","../node_modules/@mui/x-data-grid/constants/gridDetailPanelToggleField.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPageSize.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPage.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelSelector.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/useGridPreferencesPanel.js","../node_modules/@mui/x-data-grid/hooks/features/editRows/gridEditRowsSelector.js","../node_modules/@mui/x-data-grid/hooks/features/editRows/useGridCellEditing.old.js","../node_modules/@mui/x-data-grid/models/params/gridEditCellParams.js","../node_modules/@mui/x-data-grid/hooks/features/editRows/useGridEditing.old.js","../node_modules/@mui/x-data-grid/hooks/features/editRows/useGridRowEditing.old.js","../node_modules/@mui/x-data-grid/hooks/features/editRows/useGridCellEditing.new.js","../node_modules/@mui/x-data-grid/models/params/gridRowParams.js","../node_modules/@mui/x-data-grid/hooks/features/editRows/useGridRowEditing.new.js","../node_modules/@mui/x-data-grid/hooks/features/editRows/useGridEditing.new.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsUtils.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRows.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsPreProcessors.js","../node_modules/@mui/x-data-grid/utils/domUtils.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridParamsApi.js","../node_modules/@mui/x-data-grid/hooks/features/selection/useGridSelection.js","../node_modules/@mui/x-data-grid/hooks/features/selection/useGridSelectionPreProcessors.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/useGridSorting.js","../node_modules/@mui/x-data-grid/hooks/features/scroll/useGridScroll.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsMeta.js","../node_modules/@mui/x-data-grid/components/cell/GridCell.js","../node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js","../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/useGridKeyboardNavigation.js","../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumnSpanning.js","../node_modules/@mui/x-data-grid/hooks/features/export/useGridPrintExport.js","../node_modules/@mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js","../node_modules/@mui/x-data-grid/hooks/features/events/useGridEvents.js","../node_modules/@mui/x-data-grid/hooks/features/statePersistence/useGridStatePersistence.js","../node_modules/@mui/x-data-grid/constants/localeTextConstants.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridIconButtonContainer.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenuContainer.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnsMenuItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridFilterMenuItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/HideGridColMenuItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/SortGridMenuItems.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenu.js","../node_modules/@mui/x-data-grid/components/GridRowCount.js","../node_modules/@mui/x-data-grid/components/GridSelectedRowCount.js","../node_modules/@mui/x-data-grid/components/containers/GridFooterContainer.js","../node_modules/@mui/x-data-grid/components/GridFooter.js","../node_modules/@mui/x-data-grid/components/GridHeader.js","../node_modules/@mui/x-data-grid/components/panel/GridPreferencesPanel.js","../node_modules/@mui/x-data-grid/components/containers/GridOverlay.js","../node_modules/@mui/x-data-grid/components/GridLoadingOverlay.js","../node_modules/@mui/x-data-grid/components/GridNoRowsOverlay.js","../node_modules/@mui/x-data-grid/components/GridPagination.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelContent.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelFooter.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelWrapper.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterForm.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterPanel.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelHeader.js","../node_modules/@mui/x-data-grid/constants/envConstants.js","../node_modules/@mui/x-data-grid/components/panel/GridColumnsPanel.js","../node_modules/@mui/x-data-grid/components/panel/GridPanel.js","../node_modules/@mui/x-data-grid/components/GridRow.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnUnsortedIcon.js","../node_modules/@mui/x-data-grid/components/ErrorOverlay.js","../node_modules/@mui/x-data-grid/components/GridNoResultsOverlay.js","../node_modules/@mui/x-data-grid/constants/defaultGridSlotsComponents.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderFilterIconButton.js","../node_modules/@mui/x-data-grid/DataGrid/useDataGridProps.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScroller.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerContent.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerRenderZone.js","../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualScroller.js","../node_modules/@mui/x-data-grid/components/DataGridVirtualScroller.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSortIcon.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderTitle.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSeparator.js","../node_modules/@mui/x-data-grid/components/columnHeaders/ColumnHeaderMenuIcon.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnHeaderMenu.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderItem.js","../node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js","../node_modules/@mui/x-data-grid/components/GridScrollArea.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaders.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeadersInner.js","../node_modules/@mui/x-data-grid/components/DataGridColumnHeaders.js","../node_modules/@mui/x-data-grid/DataGrid/DataGrid.js","../node_modules/@mui/utils/esm/chainPropTypes.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M22 5.18 10.59 16.6l-4.24-4.24 1.41-1.41 2.83 2.83 10-10L22 5.18zM12 20c-4.41 0-8-3.59-8-8s3.59-8 8-8c1.57 0 3.04.46 4.28 1.25l1.45-1.45C16.1 2.67 14.13 2 12 2 6.48 2 2 6.48 2 12s4.48 10 10 10c1.73 0 3.36-.44 4.78-1.22l-1.5-1.5c-1 .46-2.11.72-3.28.72zm7-5h-3v2h3v3h2v-3h3v-2h-3v-3h-2v3z\"\n}), 'AddTask');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15 16h4v2h-4zm0-8h7v2h-7zm0 4h6v2h-6zM3 18c0 1.1.9 2 2 2h6c1.1 0 2-.9 2-2V8H3v10zM14 5h-3l-1-1H6L5 5H2v2h12z\"\n}), 'DeleteSweep');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.2 4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n}), 'Done');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m19.77 5.03 1.4 1.4L8.43 19.17l-5.6-5.6 1.4-1.4 4.2 4.2L19.77 5.03m0-2.83L8.43 13.54l-4.2-4.2L0 13.57 8.43 22 24 6.43 19.77 2.2z\"\n}), 'DoneOutline');\n\nexports.default = _default;","import { generateUtilityClasses, generateUtilityClass } from '@mui/base';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label', 'error']);\nexport default formControlLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"className\", \"componentsProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useFormControl } from '../FormControl';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error'],\n    label: ['label', disabled && 'disabled']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\n\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, ownerState.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, ownerState.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, ownerState.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  }\n}));\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n\n  const {\n    className,\n    componentsProps = {},\n    control,\n    disabled: disabledProp,\n    disableTypography,\n    label: labelProp,\n    labelPlacement = 'end'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl();\n  let disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  const controlProps = {\n    disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    labelPlacement,\n    error: fcs.error\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let label = labelProp;\n\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(Typography, _extends({\n      component: \"span\",\n      className: classes.label\n    }, componentsProps.typography, {\n      children: label\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), label]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import { generateUtilityClasses, generateUtilityClass } from '@mui/material';\nexport function getDataGridUtilityClass(slot) {\n  return generateUtilityClass('MuiDataGrid', slot);\n}\nexport const gridClasses = generateUtilityClasses('MuiDataGrid', ['actionsCell', 'autoHeight', 'booleanCell', 'cell--editable', 'cell--editing', 'cell--textCenter', 'cell--textLeft', 'cell--textRight', 'cell--withRenderer', 'cell', 'cellContent', 'cellCheckbox', 'checkboxInput', 'columnHeader--alignCenter', 'columnHeader--alignLeft', 'columnHeader--alignRight', 'columnHeader--dragging', 'columnHeader--moving', 'columnHeader--numeric', 'columnHeader--sortable', 'columnHeader--sorted', 'columnHeader--filtered', 'columnHeader', 'columnHeaderCheckbox', 'columnHeaderDraggableContainer', 'columnHeaderDropZone', 'columnHeaderTitle', 'columnHeaderTitleContainer', 'columnHeaderTitleContainerContent', 'columnHeaders', 'columnHeadersInner', 'columnHeadersInner--scrollable', 'columnSeparator--resizable', 'columnSeparator--resizing', 'columnSeparator--sideLeft', 'columnSeparator--sideRight', 'columnSeparator', 'columnsPanel', 'columnsPanelRow', 'detailPanel', 'detailPanels', 'detailPanelToggleCell', 'detailPanelToggleCell--expanded', 'panel', 'panelHeader', 'panelWrapper', 'panelContent', 'panelFooter', 'paper', 'editBooleanCell', 'editInputCell', 'filterForm', 'filterFormDeleteIcon', 'filterFormLinkOperatorInput', 'filterFormColumnInput', 'filterFormOperatorInput', 'filterFormValueInput', 'filterIcon', 'footerContainer', 'iconButtonContainer', 'iconSeparator', 'main', 'menu', 'menuIcon', 'menuIconButton', 'menuOpen', 'menuList', 'overlay', 'root', 'root--densityStandard', 'root--densityComfortable', 'root--densityCompact', 'row', 'row--editable', 'row--editing', 'row--lastVisible', 'row--dragging', 'row--dynamicHeight', 'rowReorderCellPlaceholder', 'rowCount', 'rowReorderCellContainer', 'rowReorderCell', 'rowReorderCell--draggable', 'scrollArea--left', 'scrollArea--right', 'scrollArea', 'selectedRowCount', 'sortIcon', 'toolbarContainer', 'toolbarFilterList', 'virtualScroller', 'virtualScrollerContent', 'virtualScrollerContent--overflowed', 'virtualScrollerRenderZone', 'pinnedColumns', 'pinnedColumns--left', 'pinnedColumns--right', 'pinnedColumnHeaders', 'pinnedColumnHeaders--left', 'pinnedColumnHeaders--right', 'withBorder', 'treeDataGroupingCell', 'treeDataGroupingCellToggle', 'groupingCriteriaCell', 'groupingCriteriaCellToggle']);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { darken, lighten, alpha, styled } from '@mui/material/styles';\nimport { gridClasses } from '../../constants/gridClasses';\nexport const GridRootStyles = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses.autoHeight}`]: styles.autoHeight\n  }, {\n    [`& .${gridClasses.editBooleanCell}`]: styles.editBooleanCell\n  }, {\n    [`& .${gridClasses['cell--editing']}`]: styles['cell--editing']\n  }, {\n    [`& .${gridClasses['cell--textCenter']}`]: styles['cell--textCenter']\n  }, {\n    [`& .${gridClasses['cell--textLeft']}`]: styles['cell--textLeft']\n  }, {\n    [`& .${gridClasses['cell--textRight']}`]: styles['cell--textRight']\n  }, // TODO v6: Remove\n  {\n    [`& .${gridClasses['cell--withRenderer']}`]: styles['cell--withRenderer']\n  }, {\n    [`& .${gridClasses.cell}`]: styles.cell\n  }, {\n    [`& .${gridClasses.cellContent}`]: styles.cellContent\n  }, {\n    [`& .${gridClasses.cellCheckbox}`]: styles.cellCheckbox\n  }, {\n    [`& .${gridClasses.checkboxInput}`]: styles.checkboxInput\n  }, {\n    [`& .${gridClasses['columnHeader--alignCenter']}`]: styles['columnHeader--alignCenter']\n  }, {\n    [`& .${gridClasses['columnHeader--alignLeft']}`]: styles['columnHeader--alignLeft']\n  }, {\n    [`& .${gridClasses['columnHeader--alignRight']}`]: styles['columnHeader--alignRight']\n  }, {\n    [`& .${gridClasses['columnHeader--dragging']}`]: styles['columnHeader--dragging']\n  }, {\n    [`& .${gridClasses['columnHeader--moving']}`]: styles['columnHeader--moving']\n  }, {\n    [`& .${gridClasses['columnHeader--numeric']}`]: styles['columnHeader--numeric']\n  }, {\n    [`& .${gridClasses['columnHeader--sortable']}`]: styles['columnHeader--sortable']\n  }, {\n    [`& .${gridClasses['columnHeader--sorted']}`]: styles['columnHeader--sorted']\n  }, {\n    [`& .${gridClasses.columnHeader}`]: styles.columnHeader\n  }, {\n    [`& .${gridClasses.columnHeaderCheckbox}`]: styles.columnHeaderCheckbox\n  }, {\n    [`& .${gridClasses.columnHeaderDraggableContainer}`]: styles.columnHeaderDraggableContainer\n  }, {\n    [`& .${gridClasses.columnHeaderTitleContainer}`]: styles.columnHeaderTitleContainer\n  }, {\n    [`& .${gridClasses['columnSeparator--resizable']}`]: styles['columnSeparator--resizable']\n  }, {\n    [`& .${gridClasses['columnSeparator--resizing']}`]: styles['columnSeparator--resizing']\n  }, {\n    [`& .${gridClasses.columnSeparator}`]: styles.columnSeparator\n  }, {\n    [`& .${gridClasses.filterIcon}`]: styles.filterIcon\n  }, {\n    [`& .${gridClasses.iconSeparator}`]: styles.iconSeparator\n  }, {\n    [`& .${gridClasses.menuIcon}`]: styles.menuIcon\n  }, {\n    [`& .${gridClasses.menuIconButton}`]: styles.menuIconButton\n  }, {\n    [`& .${gridClasses.menuOpen}`]: styles.menuOpen\n  }, {\n    [`& .${gridClasses.menuList}`]: styles.menuList\n  }, {\n    [`& .${gridClasses['row--editable']}`]: styles['row--editable']\n  }, {\n    [`& .${gridClasses['row--editing']}`]: styles['row--editing']\n  }, {\n    [`& .${gridClasses['row--dragging']}`]: styles['row--dragging']\n  }, {\n    [`& .${gridClasses.row}`]: styles.row\n  }, {\n    [`& .${gridClasses.rowReorderCellPlaceholder}`]: styles.rowReorderCellPlaceholder\n  }, {\n    [`& .${gridClasses.rowReorderCell}`]: styles.rowReorderCell\n  }, {\n    [`& .${gridClasses['rowReorderCell--draggable']}`]: styles['rowReorderCell--draggable']\n  }, {\n    [`& .${gridClasses.sortIcon}`]: styles.sortIcon\n  }, {\n    [`& .${gridClasses.withBorder}`]: styles.withBorder\n  }, {\n    [`& .${gridClasses.treeDataGroupingCell}`]: styles.treeDataGroupingCell\n  }, {\n    [`& .${gridClasses.treeDataGroupingCellToggle}`]: styles.treeDataGroupingCellToggle\n  }, {\n    [`& .${gridClasses.detailPanelToggleCell}`]: styles.detailPanelToggleCell\n  }, {\n    [`& .${gridClasses['detailPanelToggleCell--expanded']}`]: styles['detailPanelToggleCell--expanded']\n  }, styles.root]\n})(({\n  theme\n}) => {\n  const borderColor = theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68);\n\n  const gridStyle = _extends({\n    flex: 1,\n    boxSizing: 'border-box',\n    position: 'relative',\n    border: `1px solid ${borderColor}`,\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.text.primary\n  }, theme.typography.body2, {\n    outline: 'none',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    [`&.${gridClasses.autoHeight}`]: {\n      height: 'auto',\n      [`& .${gridClasses['row--lastVisible']} .${gridClasses.cell}`]: {\n        borderBottomColor: 'transparent'\n      }\n    },\n    [`& .${gridClasses['virtualScrollerContent--overflowed']} .${gridClasses['row--lastVisible']} .${gridClasses.cell}`]: {\n      borderBottomColor: 'transparent'\n    },\n    [`& .${gridClasses.columnHeader}, & .${gridClasses.cell}`]: {\n      WebkitTapHighlightColor: 'transparent',\n      lineHeight: null,\n      padding: '0 10px',\n      boxSizing: 'border-box'\n    },\n    [`& .${gridClasses.columnHeader}:focus-within, & .${gridClasses.cell}:focus-within`]: {\n      outline: `solid ${alpha(theme.palette.primary.main, 0.5)} 1px`,\n      outlineWidth: 1,\n      outlineOffset: -1\n    },\n    [`& .${gridClasses.columnHeader}:focus, & .${gridClasses.cell}:focus`]: {\n      outline: `solid ${theme.palette.primary.main} 1px`\n    },\n    [`& .${gridClasses.columnHeaderCheckbox}, & .${gridClasses.cellCheckbox}`]: {\n      padding: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses.columnHeader}`]: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses['columnHeader--sorted']} .${gridClasses.iconButtonContainer}, & .${gridClasses['columnHeader--filtered']} .${gridClasses.iconButtonContainer}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${gridClasses.columnHeader}:not(.${gridClasses['columnHeader--sorted']}) .${gridClasses.sortIcon}`]: {\n      opacity: 0,\n      transition: theme.transitions.create(['opacity'], {\n        duration: theme.transitions.duration.shorter\n      })\n    },\n    [`& .${gridClasses.columnHeader}:not(.${gridClasses['columnHeader--sorted']}):hover .${gridClasses.sortIcon}`]: {\n      opacity: 0.5\n    },\n    [`& .${gridClasses.columnHeaderTitleContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      minWidth: 0,\n      flex: 1,\n      whiteSpace: 'nowrap',\n      overflowX: 'hidden'\n    },\n    [`& .${gridClasses.columnHeaderTitleContainerContent}`]: {\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses.sortIcon}, & .${gridClasses.filterIcon}`]: {\n      fontSize: 'inherit'\n    },\n    [`& .${gridClasses['columnHeader--sortable']}`]: {\n      cursor: 'pointer'\n    },\n    [`& .${gridClasses['columnHeader--alignCenter']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses['columnHeader--alignRight']} .${gridClasses.columnHeaderDraggableContainer}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      flexDirection: 'row-reverse'\n    },\n    [`& .${gridClasses['columnHeader--alignCenter']} .${gridClasses.menuIcon}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -6\n    },\n    [`& .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -10\n    },\n    [`& .${gridClasses['columnHeader--moving']}`]: {\n      backgroundColor: theme.palette.action.hover\n    },\n    [`& .${gridClasses.columnSeparator}`]: {\n      position: 'absolute',\n      zIndex: 100,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      color: borderColor\n    },\n    [`& .${gridClasses['columnSeparator--sideLeft']}`]: {\n      left: -12\n    },\n    [`& .${gridClasses['columnSeparator--sideRight']}`]: {\n      right: -12\n    },\n    [`& .${gridClasses['columnSeparator--resizable']}`]: {\n      cursor: 'col-resize',\n      touchAction: 'none',\n      '&:hover': {\n        color: theme.palette.text.primary,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          color: borderColor\n        }\n      },\n      [`&.${gridClasses['columnSeparator--resizing']}`]: {\n        color: theme.palette.text.primary\n      },\n      '& svg': {\n        pointerEvents: 'none'\n      }\n    },\n    [`& .${gridClasses.iconSeparator}`]: {\n      color: 'inherit'\n    },\n    [`& .${gridClasses.menuIcon}`]: {\n      width: 0,\n      visibility: 'hidden',\n      fontSize: 20,\n      marginRight: -10,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses.columnHeader}:hover`]: {\n      [`& .${gridClasses.iconButtonContainer}`]: {\n        visibility: 'visible',\n        width: 'auto'\n      },\n      [`& .${gridClasses.menuIcon}`]: {\n        width: 'auto',\n        visibility: 'visible'\n      }\n    },\n    [`.${gridClasses.menuOpen}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${gridClasses.row}`]: {\n      display: 'flex',\n      width: 'fit-content',\n      breakInside: 'avoid',\n      // Avoid the row to be broken in two different print pages.\n      '&:hover, &.Mui-hovered': {\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&.Mui-selected': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n        '&:hover, &.Mui-hovered': {\n          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n          }\n        }\n      }\n    },\n    [`& .${gridClasses.cell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      borderBottom: `1px solid ${borderColor}`\n    },\n    [`& .${gridClasses.row}:not(.${gridClasses['row--dynamicHeight']}) > .${gridClasses.cell}`]: {\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    },\n    [`& .${gridClasses.cellContent}`]: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    },\n    [`& .${gridClasses.cell}.${gridClasses['cell--editing']}`]: {\n      padding: 1,\n      display: 'flex',\n      boxShadow: theme.shadows[2],\n      backgroundColor: theme.palette.background.paper,\n      '&:focus-within': {\n        outline: `solid ${theme.palette.primary.main} 1px`,\n        outlineOffset: '-1px'\n      }\n    },\n    [`& .${gridClasses['row--editing']}`]: {\n      boxShadow: theme.shadows[2]\n    },\n    [`& .${gridClasses['row--editing']} .${gridClasses.cell}`]: {\n      boxShadow: theme.shadows[0],\n      backgroundColor: theme.palette.background.paper\n    },\n    [`& .${gridClasses.editBooleanCell}`]: {\n      display: 'flex',\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses.booleanCell}[data-value=\"true\"]`]: {\n      color: theme.palette.text.secondary\n    },\n    [`& .${gridClasses.booleanCell}[data-value=\"false\"]`]: {\n      color: theme.palette.text.disabled\n    },\n    [`& .${gridClasses.actionsCell}`]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gridGap: theme.spacing(1)\n    },\n    [`& .${gridClasses.rowReorderCell}`]: {\n      display: 'inline-flex',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      opacity: theme.palette.action.disabledOpacity\n    },\n    [`& .${gridClasses['rowReorderCell--draggable']}`]: {\n      cursor: 'move',\n      opacity: 1\n    },\n    [`& .${gridClasses.rowReorderCellContainer}`]: {\n      padding: 0,\n      alignItems: 'stretch'\n    },\n    [`& .${gridClasses.withBorder}`]: {\n      borderRight: `1px solid ${borderColor}`\n    },\n    [`& .${gridClasses['cell--textLeft']}`]: {\n      justifyContent: 'flex-start'\n    },\n    [`& .${gridClasses['cell--textRight']}`]: {\n      justifyContent: 'flex-end'\n    },\n    [`& .${gridClasses['cell--textCenter']}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses.columnHeaderDraggableContainer}`]: {\n      display: 'flex',\n      width: '100%'\n    },\n    [`& .${gridClasses.rowReorderCellPlaceholder}`]: {\n      display: 'none'\n    },\n    [`& .${gridClasses['columnHeader--dragging']}, & .${gridClasses['row--dragging']}`]: {\n      background: theme.palette.background.paper,\n      padding: '0 12px',\n      borderRadius: theme.shape.borderRadius,\n      opacity: theme.palette.action.disabledOpacity\n    },\n    [`& .${gridClasses['row--dragging']}`]: {\n      background: theme.palette.background.paper,\n      padding: '0 12px',\n      borderRadius: theme.shape.borderRadius,\n      opacity: theme.palette.action.disabledOpacity,\n      [`& .${gridClasses.rowReorderCellPlaceholder}`]: {\n        display: 'flex'\n      }\n    },\n    [`& .${gridClasses.treeDataGroupingCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${gridClasses.treeDataGroupingCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: theme.spacing(2)\n    },\n    [`& .${gridClasses.groupingCriteriaCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${gridClasses.groupingCriteriaCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: theme.spacing(2)\n    }\n  });\n\n  return gridStyle;\n});","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","export const buildWarning = (message, gravity = 'warning') => {\n  let alreadyWarned = false;\n  const cleanMessage = Array.isArray(message) ? message.join('\\n') : message;\n  return () => {\n    if (!alreadyWarned) {\n      alreadyWarned = true;\n\n      if (gravity === 'error') {\n        console.error(cleanMessage);\n      } else {\n        console.warn(cleanMessage);\n      }\n    }\n  };\n};\nexport const wrapWithWarningOnCall = (method, message) => {\n  if (process.env.NODE_ENV === 'production') {\n    return method;\n  }\n\n  const warning = buildWarning(message);\n  return (...args) => {\n    warning();\n    return method(...args);\n  };\n};","import { createSelector as reselectCreateSelector } from 'reselect';\nimport { buildWarning } from './warning';\nconst cacheContainer = {\n  cache: null\n};\nconst missingInstanceIdWarning = buildWarning(['MUI: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, e.g. `mySelector(apiRef)`, or pass the instance ID explicitly, e.g `mySelector(state, apiRef.current.instanceId)`.']);\nexport const createSelector = (...args) => {\n  if (cacheContainer.cache === null) {\n    cacheContainer.cache = {};\n  }\n\n  const selector = (...selectorArgs) => {\n    const [stateOrApiRef, instanceId] = selectorArgs;\n    const isApiRef = !!stateOrApiRef.current;\n    const cacheKey = isApiRef ? stateOrApiRef.current.instanceId : instanceId != null ? instanceId : 'default';\n    const state = isApiRef ? stateOrApiRef.current.state : stateOrApiRef;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey === 'default') {\n        missingInstanceIdWarning();\n      }\n    }\n\n    if (cacheContainer.cache === null) {\n      cacheContainer.cache = {};\n    }\n\n    const {\n      cache\n    } = cacheContainer;\n\n    if (cache[cacheKey] && cache[cacheKey].get(args)) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cache[cacheKey].get(args)(state, cacheKey);\n    }\n\n    const newSelector = reselectCreateSelector(...args);\n\n    if (!cache[cacheKey]) {\n      cache[cacheKey] = new Map();\n    }\n\n    cache[cacheKey].set(args, newSelector);\n    return newSelector(state, cacheKey);\n  }; // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n\n\n  selector.acceptsApiRef = true;\n  return selector;\n}; // eslint-disable-next-line @typescript-eslint/naming-convention\n\nexport const unstable_resetCreateSelectorCache = () => {\n  cacheContainer.cache = null;\n};","import { createSelector } from '../../../utils/createSelector';\nimport { wrapWithWarningOnCall } from '../../../utils/warning';\n/**\n * @category Columns\n * @deprecated Use the selector returning exactly the value you are looking for.\n * @ignore - do not document.\n * TODO v6: Rename `gridColumnsStateSelector`\n */\n\nexport const gridColumnsSelector = state => state.columns;\n/**\n * Get the field of each column.\n * @category Columns\n */\n\nexport const gridColumnFieldsSelector = createSelector(gridColumnsSelector, columnsState => columnsState.all);\n/**\n * Get the columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\n\nexport const gridColumnLookupSelector = createSelector(gridColumnsSelector, columnsState => columnsState.lookup);\n/**\n * Get the columns as an array.\n * @category Columns\n */\n\nexport const gridColumnDefinitionsSelector = createSelector(gridColumnFieldsSelector, gridColumnLookupSelector, (allFields, lookup) => allFields.map(field => lookup[field]));\n/**\n * Get the column visibility model, containing the visibility status of each column.\n * If a column is not registered in the model, it is visible.\n * @category Visible Columns\n */\n\nexport const gridColumnVisibilityModelSelector = createSelector(gridColumnsSelector, columnsState => columnsState.columnVisibilityModel);\n/**\n * Get the visible columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Visible Columns\n */\n\nexport const gridVisibleColumnDefinitionsSelector = createSelector(gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector, (columns, columnVisibilityModel) => columns.filter(column => columnVisibilityModel[column.field] !== false));\n/**\n * Get the field of each visible column.\n * @category Visible Columns\n */\n\nexport const gridVisibleColumnFieldsSelector = createSelector(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.map(column => column.field));\n/**\n * Get the left position in pixel of each visible columns relative to the left of the first column.\n * @category Visible Columns\n */\n\nexport const gridColumnPositionsSelector = createSelector(gridVisibleColumnDefinitionsSelector, visibleColumns => {\n  const positions = [];\n  let currentPosition = 0;\n\n  for (let i = 0; i < visibleColumns.length; i += 1) {\n    positions.push(currentPosition);\n    currentPosition += visibleColumns[i].computedWidth;\n  }\n\n  return positions;\n});\n/**\n * Get the summed width of all the visible columns.\n * @category Visible Columns\n */\n\nexport const gridColumnsTotalWidthSelector = createSelector(gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n\n  if (colCount === 0) {\n    return 0;\n  }\n\n  return positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth;\n});\n/**\n * Get the filterable columns as an array.\n * @category Columns\n */\n\nexport const gridFilterableColumnDefinitionsSelector = createSelector(gridColumnDefinitionsSelector, columns => columns.filter(col => col.filterable));\n/**\n * Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\n\nexport const gridFilterableColumnLookupSelector = createSelector(gridColumnDefinitionsSelector, columns => columns.reduce((acc, col) => {\n  if (col.filterable) {\n    acc[col.field] = col;\n  }\n\n  return acc;\n}, {}));\n/**\n * @category Columns\n * @deprecated Use `gridColumnFieldsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const allGridColumnsFieldsSelector = wrapWithWarningOnCall(gridColumnFieldsSelector, ['MUI: The method allGridColumnsFieldsSelector is deprecated and will be removed in the next major version.', 'Use gridColumnFieldsSelector instead']);\n/**\n * @category Columns\n * @deprecated Use `gridColumnDefinitionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const allGridColumnsSelector = wrapWithWarningOnCall(gridColumnDefinitionsSelector, ['MUI: The method allGridColumnsSelector is deprecated and will be removed in the next major version.', 'Use gridColumnDefinitionsSelector instead']);\n/**\n * @category Visible Columns\n * @deprecated Use `gridVisibleColumnDefinitionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const visibleGridColumnsSelector = wrapWithWarningOnCall(gridVisibleColumnDefinitionsSelector, ['MUI: The method visibleGridColumnsSelector is deprecated and will be removed in the next major version.', 'Use gridVisibleColumnDefinitionsSelector instead']);\n/**\n * @category Columns\n * @deprecated Use `gridFilterableColumnDefinitionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const filterableGridColumnsSelector = wrapWithWarningOnCall(gridFilterableColumnDefinitionsSelector, ['MUI: The method filterableGridColumnsSelector is deprecated and will be removed in the next major version.', 'Use gridFilterableColumnDefinitionsSelector instead']);\n/**\n * @category Columns\n * @deprecated Use `gridFilterableColumnLookupSelector` instead (not the same return format).\n * @ignore - do not document.\n */\n\nexport const filterableGridColumnsIdsSelector = wrapWithWarningOnCall(createSelector(gridFilterableColumnDefinitionsSelector, columns => columns.map(col => col.field)), ['MUI: The method filterableGridColumnsIdsSelector is deprecated and will be removed in the next major version.', 'Use gridFilterableColumnDefinitionsSelector instead.', 'The return format is now a lookup, if you want to get the same output as before, use the following code:', '', 'const lookup = gridFilterableColumnLookupSelector(apiRef);', 'const fields = gridColumnFieldsSelector(apiRef).filter(field => lookup[field]);']);\n/**\n * Get the amount of visible columns.\n * @category Visible Columns\n * @deprecated Use the length of the array returned by `gridVisibleColumnDefinitionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const visibleGridColumnsLengthSelector = wrapWithWarningOnCall(createSelector(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.length), ['MUI: The method visibleGridColumnsLengthSelector is deprecated and will be removed in the next major version.', 'Use the length of the array returned by gridVisibleColumnDefinitionsSelector instead.']);\n/**\n * @category Visible Columns\n * @deprecated Use `gridColumnsTotalWidthSelector` or `gridColumnPositionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const gridColumnsMetaSelector = wrapWithWarningOnCall(createSelector(gridColumnPositionsSelector, gridColumnsTotalWidthSelector, (positions, totalWidth) => ({\n  totalWidth,\n  positions\n})), ['MUI: The method gridColumnsMetaSelector is deprecated and will be removed in the next major version.', 'Use gridColumnsTotalWidthSelector or gridColumnPositionsSelector instead']);","import { buildWarning } from '../../utils/warning';\n\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\n\nconst stateNotInitializedWarning = buildWarning(['MUI: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\nexport const useGridSelector = (apiRef, selector) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      stateNotInitializedWarning();\n    }\n  }\n\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n\n  return selector(apiRef.current.state);\n};","import * as React from 'react';\nexport const GridApiContext = /*#__PURE__*/React.createContext(undefined);\n\nif (process.env.NODE_ENV !== 'production') {\n  GridApiContext.displayName = 'GridApiContext';\n}","import * as React from 'react';\nimport { GridApiContext } from '../../components/GridApiContext';\nexport function useGridApiContext() {\n  const apiRef = React.useContext(GridApiContext);\n\n  if (apiRef === undefined) {\n    throw new Error(['MUI: Could not find the data grid context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the data grid.'].join('\\n'));\n  }\n\n  return apiRef;\n}","import * as React from 'react';\nconst GridRootPropsContext = /*#__PURE__*/React.createContext(undefined);\n\nif (process.env.NODE_ENV !== 'production') {\n  GridRootPropsContext.displayName = 'GridRootPropsContext';\n}\n\nexport { GridRootPropsContext };","import * as React from 'react';\nimport { GridRootPropsContext } from '../../context/GridRootPropsContext';\nexport const useGridRootProps = () => {\n  const contextValue = React.useContext(GridRootPropsContext);\n\n  if (!contextValue) {\n    throw new Error('MUI: useGridRootProps should only be used inside the DataGrid, DataGridPro or DataGridPremium component.');\n  }\n\n  return contextValue;\n};","import { createSelector } from '../../../utils/createSelector';\nexport const gridRowsStateSelector = state => state.rows;\nexport const gridRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalRowCount);\nexport const gridRowsLoadingSelector = createSelector(gridRowsStateSelector, rows => rows.loading);\nexport const gridTopLevelRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalTopLevelRowCount);\nexport const gridRowsLookupSelector = createSelector(gridRowsStateSelector, rows => rows.idRowsLookup);\nexport const gridRowsIdToIdLookupSelector = createSelector(gridRowsStateSelector, rows => rows.idToIdLookup);\nexport const gridRowTreeSelector = createSelector(gridRowsStateSelector, rows => rows.tree);\nexport const gridRowGroupingNameSelector = createSelector(gridRowsStateSelector, rows => rows.groupingName);\nexport const gridRowTreeDepthSelector = createSelector(gridRowsStateSelector, rows => rows.treeDepth);\nexport const gridRowIdsSelector = createSelector(gridRowsStateSelector, rows => rows.ids);","import { createSelector } from '../../../utils/createSelector';\nexport const gridDensitySelector = state => state.density;\nexport const gridDensityValueSelector = createSelector(gridDensitySelector, density => density.value);\nexport const gridDensityRowHeightSelector = createSelector(gridDensitySelector, density => density.rowHeight);\nexport const gridDensityHeaderHeightSelector = createSelector(gridDensitySelector, density => density.headerHeight);\nexport const gridDensityFactorSelector = createSelector(gridDensitySelector, density => density.factor);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, capitalize } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { GridRootStyles } from './GridRootStyles';\nimport { gridVisibleColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { gridRowCountSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { gridDensityValueSelector } from '../../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    autoHeight,\n    density,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n\n  const {\n    children,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const densityValue = useGridSelector(apiRef, gridDensityValueSelector);\n  const rootContainerRef = React.useRef(null);\n  const handleRef = useForkRef(rootContainerRef, ref);\n  const ownerState = {\n    density: densityValue,\n    classes: rootProps.classes,\n    autoHeight: rootProps.autoHeight\n  };\n  const classes = useUtilityClasses(ownerState);\n  apiRef.current.rootElementRef = rootContainerRef; // Our implementation of <NoSsr />\n\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  useEnhancedEffect(() => {\n    if (mountedState) {\n      apiRef.current.unstable_updateGridDimensionsRef();\n    }\n  }, [apiRef, mountedState]);\n\n  if (!mountedState) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(className, classes.root),\n    role: \"grid\",\n    \"aria-colcount\": visibleColumns.length,\n    \"aria-rowcount\": totalRowCount,\n    \"aria-multiselectable\": !rootProps.disableMultipleSelection,\n    \"aria-label\": rootProps['aria-label'],\n    \"aria-labelledby\": rootProps['aria-labelledby']\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","import * as React from 'react';\nexport function useGridLogger(apiRef, name) {\n  const logger = React.useRef(null);\n\n  if (logger.current) {\n    return logger.current;\n  }\n\n  const newLogger = apiRef.current.getLogger(name);\n  logger.current = newLogger;\n  return newLogger;\n}","import * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['main']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridMainContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Main',\n  overridesResolver: (props, styles) => styles.main\n})(() => ({\n  position: 'relative',\n  flexGrow: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'hidden'\n}));\nexport function GridMainContainer(props) {\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridMainContainerRoot, {\n    className: classes.root,\n    children: props.children\n  });\n}","import * as React from 'react';\nexport class ErrorBoundary extends React.Component {\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return {\n      hasError: true,\n      error\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    if (this.props.api.current) {\n      this.logError(error); // Allows to trigger the Error event and all listener can run on Error\n\n      this.props.api.current.showError({\n        error,\n        errorInfo\n      });\n    }\n  }\n\n  logError(error, errorInfo) {\n    this.props.logger.error(`An unexpected error occurred. Error: ${error && error.message}. `, error, errorInfo);\n  }\n\n  render() {\n    var _this$state;\n\n    if (this.props.hasError || (_this$state = this.state) != null && _this$state.hasError) {\n      // You can render any custom fallback UI\n      return this.props.render(this.props.componentProps || this.state);\n    }\n\n    return this.props.children;\n  }\n\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridLogger } from '../../hooks/utils/useGridLogger';\nimport { GridMainContainer } from '../containers/GridMainContainer';\nimport { ErrorBoundary } from '../ErrorBoundary';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GridErrorHandler(props) {\n  const {\n    children\n  } = props;\n  const apiRef = useGridApiContext();\n  const logger = useGridLogger(apiRef, 'GridErrorHandler');\n  const rootProps = useGridRootProps();\n  const error = apiRef.current.state.error;\n  return /*#__PURE__*/_jsx(ErrorBoundary, {\n    hasError: error != null,\n    componentProps: error,\n    api: apiRef,\n    logger: logger,\n    render: errorProps => {\n      var _rootProps$components;\n\n      return /*#__PURE__*/_jsx(GridMainContainer, {\n        children: /*#__PURE__*/_jsx(rootProps.components.ErrorOverlay, _extends({}, errorProps, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.errorOverlay))\n      });\n    },\n    children: children\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridErrorHandler.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node\n} : void 0;\nexport { GridErrorHandler };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridHeaderPlaceholder() {\n  var _rootProps$components;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const headerRef = React.useRef(null);\n  apiRef.current.headerRef = headerRef;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: headerRef,\n    children: /*#__PURE__*/_jsx(rootProps.components.Header, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.header))\n  });\n}","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n *\n * TODO replace with https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver\n * once browser support allows it.\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  var resetTriggers = function resetTriggers(element) {\n    var triggers = element.__resizeTriggers__,\n        expand = triggers.firstElementChild,\n        contract = triggers.lastElementChild,\n        expandChild = expand.firstElementChild;\n    contract.scrollLeft = contract.scrollWidth;\n    contract.scrollTop = contract.scrollHeight;\n    expandChild.style.width = expand.offsetWidth + 1 + 'px';\n    expandChild.style.height = expand.offsetHeight + 1 + 'px';\n    expand.scrollLeft = expand.scrollWidth;\n    expand.scrollTop = expand.scrollHeight;\n  };\n\n  var checkTriggers = function checkTriggers(element) {\n    return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n  };\n\n  var scrollListener = function scrollListener(e) {\n    // Don't measure (which forces) reflow for scrolls that happen inside of children!\n    if (e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n      return;\n    }\n\n    var element = this;\n    resetTriggers(this);\n\n    if (this.__resizeRAF__) {\n      hostWindow.cancelAnimationFrame(this.__resizeRAF__);\n    }\n\n    this.__resizeRAF__ = hostWindow.requestAnimationFrame(function () {\n      if (checkTriggers(element)) {\n        element.__resizeLast__.width = element.offsetWidth;\n        element.__resizeLast__.height = element.offsetHeight;\n\n        element.__resizeListeners__.forEach(function (fn) {\n          fn.call(element, e);\n        });\n      }\n    });\n  };\n  /* Detect CSS Animations support to detect element display/re-attach */\n\n\n  var animation = false,\n      keyframeprefix = '',\n      animationstartevent = 'animationstart',\n      domPrefixes = 'Webkit Moz O ms'.split(' '),\n      startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n      pfx = '';\n  {\n    var elm = document.createElement('fakeelement');\n\n    if (elm.style.animationName !== undefined) {\n      animation = true;\n    }\n\n    if (animation === false) {\n      for (var i = 0; i < domPrefixes.length; i++) {\n        if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n          pfx = domPrefixes[i];\n          keyframeprefix = '-' + pfx.toLowerCase() + '-';\n          animationstartevent = startEvents[i];\n          animation = true;\n          break;\n        }\n      }\n    }\n  }\n  var animationName = 'resizeanim';\n  var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n  var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('muiDetectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.Mui-resizeTriggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.Mui-resizeTriggers, .Mui-resizeTriggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .Mui-resizeTriggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'muiDetectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (!element.__resizeTriggers__) {\n      var doc = element.ownerDocument;\n      var elementStyle = hostWindow.getComputedStyle(element);\n\n      if (elementStyle && elementStyle.position == 'static') {\n        element.style.position = 'relative';\n      }\n\n      createStyles(doc);\n      element.__resizeLast__ = {};\n      element.__resizeListeners__ = [];\n      (element.__resizeTriggers__ = doc.createElement('div')).className = 'Mui-resizeTriggers';\n      element.__resizeTriggers__.innerHTML = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n      element.appendChild(element.__resizeTriggers__);\n      resetTriggers(element);\n      element.addEventListener('scroll', scrollListener, true);\n      /* Listen for a css animation to detect element display/re-attach */\n\n      if (animationstartevent) {\n        element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n          if (e.animationName == animationName) {\n            resetTriggers(element);\n          }\n        };\n\n        element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n      }\n    }\n\n    element.__resizeListeners__.push(fn);\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n    if (!element.__resizeListeners__.length) {\n      element.removeEventListener('scroll', scrollListener, true);\n\n      if (element.__resizeTriggers__.__animationListener__) {\n        element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n        element.__resizeTriggers__.__animationListener__ = null;\n      }\n\n      try {\n        element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n      } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n      }\n    }\n  };\n\n  return {\n    addResizeListener,\n    removeResizeListener\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"defaultHeight\", \"defaultWidth\", \"disableHeight\", \"disableWidth\", \"nonce\", \"onResize\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForkRef, ownerWindow, useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport createDetectElementResize from '../lib/createDetectElementResize'; // TODO replace with https://caniuse.com/resizeobserver.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridAutoSizer = /*#__PURE__*/React.forwardRef(function AutoSizer(props, ref) {\n  const {\n    children,\n    defaultHeight = null,\n    defaultWidth = null,\n    disableHeight = false,\n    disableWidth = false,\n    nonce,\n    onResize,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [state, setState] = React.useState({\n    height: defaultHeight,\n    width: defaultWidth\n  });\n  const rootRef = React.useRef(null);\n  const parentElement = React.useRef(null);\n  const handleResize = useEventCallback(() => {\n    // Guard against AutoSizer component being removed from the DOM immediately after being added.\n    // This can result in invalid style values which can result in NaN values if we don't handle them.\n    // See issue #150 for more context.\n    if (parentElement.current) {\n      const height = parentElement.current.offsetHeight || 0;\n      const width = parentElement.current.offsetWidth || 0;\n      const win = ownerWindow(parentElement.current);\n      const computedStyle = win.getComputedStyle(parentElement.current);\n      const paddingLeft = parseInt(computedStyle.paddingLeft, 10) || 0;\n      const paddingRight = parseInt(computedStyle.paddingRight, 10) || 0;\n      const paddingTop = parseInt(computedStyle.paddingTop, 10) || 0;\n      const paddingBottom = parseInt(computedStyle.paddingBottom, 10) || 0;\n      const newHeight = height - paddingTop - paddingBottom;\n      const newWidth = width - paddingLeft - paddingRight;\n\n      if (!disableHeight && state.height !== newHeight || !disableWidth && state.width !== newWidth) {\n        setState({\n          height: newHeight,\n          width: newWidth\n        });\n\n        if (onResize) {\n          onResize({\n            height: newHeight,\n            width: newWidth\n          });\n        }\n      }\n    }\n  });\n  useEnhancedEffect(() => {\n    var _parentElement$curren;\n\n    parentElement.current = rootRef.current.parentElement;\n\n    if (!parentElement) {\n      return undefined;\n    }\n\n    const win = ownerWindow((_parentElement$curren = parentElement.current) != null ? _parentElement$curren : undefined);\n    const detectElementResize = createDetectElementResize(nonce, win);\n    detectElementResize.addResizeListener(parentElement.current, handleResize);\n    handleResize();\n    return () => {\n      detectElementResize.removeResizeListener(parentElement.current, handleResize);\n    };\n  }, [nonce, handleResize]); // Outer div should not force width/height since that may prevent containers from shrinking.\n  // Inner component should overflow and use calculated width/height.\n  // See issue #68 for more information.\n\n  const outerStyle = {\n    overflow: 'visible'\n  };\n  const childParams = {};\n\n  if (!disableHeight) {\n    outerStyle.height = 0;\n    childParams.height = state.height;\n  }\n\n  if (!disableWidth) {\n    outerStyle.width = 0;\n    childParams.width = state.width;\n  }\n\n  const handleRef = useForkRef(rootRef, ref);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    style: _extends({}, outerStyle, style)\n  }, other, {\n    children: state.height === null && state.width === null ? null : children(childParams)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridAutoSizer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Default height to use for initial render; useful for SSR.\n   * @default null\n   */\n  defaultHeight: PropTypes.number,\n\n  /**\n   * Default width to use for initial render; useful for SSR.\n   * @default null\n   */\n  defaultWidth: PropTypes.number,\n\n  /**\n   * If `true`, disable dynamic :height property.\n   * @default false\n   */\n  disableHeight: PropTypes.bool,\n\n  /**\n   * If `true`, disable dynamic :width property.\n   * @default false\n   */\n  disableWidth: PropTypes.bool,\n\n  /**\n   * Nonce of the inlined stylesheet for Content Security Policy.\n   */\n  nonce: PropTypes.string,\n\n  /**\n   * Callback to be invoked on-resize.\n   * @param {AutoSizerSize} size The grid's size.\n   */\n  onResize: PropTypes.func\n} : void 0;\nexport { GridAutoSizer };","import { createSelector } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\n/**\n * @category Sorting\n * @ignore - do not document.\n */\n\nexport const gridSortingStateSelector = state => state.sorting;\n/**\n * Get the id of the rows after the sorting process.\n * @category Sorting\n */\n\nexport const gridSortedRowIdsSelector = createSelector(gridSortingStateSelector, sortingState => sortingState.sortedRows);\n/**\n * Get the id and the model of the rows after the sorting process.\n * @category Sorting\n */\n\nexport const gridSortedRowEntriesSelector = createSelector(gridSortedRowIdsSelector, gridRowsLookupSelector, (sortedIds, idRowsLookup) => sortedIds.map(id => ({\n  id,\n  model: idRowsLookup[id]\n})));\n/**\n * Get the current sorting model.\n * @category Sorting\n */\n\nexport const gridSortModelSelector = createSelector(gridSortingStateSelector, sorting => sorting.sortModel);\n\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortColumnLookupSelector = createSelector(gridSortModelSelector, sortModel => {\n  const result = sortModel.reduce((res, sortItem, index) => {\n    res[sortItem.field] = {\n      sortDirection: sortItem.sort,\n      sortIndex: sortModel.length > 1 ? index + 1 : undefined\n    };\n    return res;\n  }, {});\n  return result;\n});","import { createSelector } from '../../../utils/createSelector';\nimport { gridSortedRowEntriesSelector } from '../sorting/gridSortingSelector';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridRowTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\n/**\n * @category Filtering\n */\n\nexport const gridFilterStateSelector = state => state.filter;\n/**\n * Get the current filter model.\n * @category Filtering\n */\n\nexport const gridFilterModelSelector = createSelector(gridFilterStateSelector, filterState => filterState.filterModel);\n/**\n * Get the current quick filter values.\n * @category Filtering\n */\n\nexport const gridQuickFilterValuesSelector = createSelector(gridFilterModelSelector, filterModel => filterModel.quickFilterValues);\n/**\n * @category Filtering\n * @ignore - do not document.\n */\n\nexport const gridVisibleRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.visibleRowsLookup);\n/**\n * @category Filtering\n * @ignore - do not document.\n */\n\nexport const gridFilteredRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredRowsLookup);\n/**\n * @category Filtering\n * @ignore - do not document.\n */\n\nexport const gridFilteredDescendantCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredDescendantCountLookup);\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\n\nexport const gridVisibleSortedRowEntriesSelector = createSelector(gridVisibleRowsLookupSelector, gridSortedRowEntriesSelector, (visibleRowsLookup, sortedRows) => sortedRows.filter(row => visibleRowsLookup[row.id] !== false));\n/**\n * Get the id of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\n\nexport const gridVisibleSortedRowIdsSelector = createSelector(gridVisibleSortedRowEntriesSelector, visibleSortedRowEntries => visibleSortedRowEntries.map(row => row.id));\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\n\nexport const gridFilteredSortedRowEntriesSelector = createSelector(gridFilteredRowsLookupSelector, gridSortedRowEntriesSelector, (filteredRowsLookup, sortedRows) => sortedRows.filter(row => filteredRowsLookup[row.id] !== false));\n/**\n * Get the id of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\n\nexport const gridFilteredSortedRowIdsSelector = createSelector(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.map(row => row.id));\n/**\n * @category Filtering\n * @deprecated Use `gridVisibleSortedRowIdsSelector` instead\n * @ignore - do not document.\n * TODO: Add deprecation warning once we have the new selectors without the \"visible\" keyword.\n */\n\nexport const gridVisibleRowsSelector = gridVisibleSortedRowIdsSelector;\n/**\n * Get the id and the model of the top level rows accessible after the filtering process.\n * @category Filtering\n */\n\nexport const gridVisibleSortedTopLevelRowEntriesSelector = createSelector(gridVisibleSortedRowEntriesSelector, gridRowTreeSelector, gridRowTreeDepthSelector, (visibleSortedRows, rowTree, rowTreeDepth) => {\n  if (rowTreeDepth < 2) {\n    return visibleSortedRows;\n  }\n\n  return visibleSortedRows.filter(row => {\n    var _rowTree$row$id;\n\n    return ((_rowTree$row$id = rowTree[row.id]) == null ? void 0 : _rowTree$row$id.depth) === 0;\n  });\n});\n/**\n * Get the amount of rows accessible after the filtering process.\n * @category Filtering\n */\n\nexport const gridVisibleRowCountSelector = createSelector(gridVisibleSortedRowEntriesSelector, visibleSortedRows => visibleSortedRows.length);\n/**\n * Get the amount of top level rows accessible after the filtering process.\n * @category Filtering\n */\n\nexport const gridVisibleTopLevelRowCountSelector = createSelector(gridVisibleSortedTopLevelRowEntriesSelector, visibleSortedTopLevelRows => visibleSortedTopLevelRows.length);\n/**\n * @category Filtering\n * @ignore - do not document.\n */\n\nexport const gridFilterActiveItemsSelector = createSelector(gridFilterModelSelector, gridColumnLookupSelector, (filterModel, columnLookup) => {\n  var _filterModel$items;\n\n  return (_filterModel$items = filterModel.items) == null ? void 0 : _filterModel$items.filter(item => {\n    var _column$filterOperato, _item$value;\n\n    if (!item.columnField) {\n      return false;\n    }\n\n    const column = columnLookup[item.columnField];\n\n    if (!(column != null && column.filterOperators) || (column == null ? void 0 : (_column$filterOperato = column.filterOperators) == null ? void 0 : _column$filterOperato.length) === 0) {\n      return false;\n    }\n\n    const filterOperator = column.filterOperators.find(operator => operator.value === item.operatorValue);\n\n    if (!filterOperator) {\n      return false;\n    }\n\n    return !filterOperator.InputComponent || item.value != null && ((_item$value = item.value) == null ? void 0 : _item$value.toString()) !== '';\n  });\n});\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsLookupSelector = createSelector(gridFilterActiveItemsSelector, activeFilters => {\n  const result = activeFilters.reduce((res, filterItem) => {\n    if (!res[filterItem.columnField]) {\n      res[filterItem.columnField] = [filterItem];\n    } else {\n      res[filterItem.columnField].push(filterItem);\n    }\n\n    return res;\n  }, {});\n  return result;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridVisibleRowCountSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridRowCountSelector, gridRowsLoadingSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridDensityHeaderHeightSelector } from '../../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GridOverlayWrapper(props) {\n  var _viewportInnerSize$he, _viewportInnerSize$wi;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const headerHeight = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n  const [viewportInnerSize, setViewportInnerSize] = React.useState(() => {\n    var _apiRef$current$getRo, _apiRef$current$getRo2;\n\n    return (_apiRef$current$getRo = (_apiRef$current$getRo2 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo2.viewportInnerSize) != null ? _apiRef$current$getRo : null;\n  });\n  const handleViewportSizeChange = React.useCallback(() => {\n    var _apiRef$current$getRo3, _apiRef$current$getRo4;\n\n    setViewportInnerSize((_apiRef$current$getRo3 = (_apiRef$current$getRo4 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo4.viewportInnerSize) != null ? _apiRef$current$getRo3 : null);\n  }, [apiRef]);\n  useEnhancedEffect(() => {\n    return apiRef.current.subscribeEvent('viewportInnerSizeChange', handleViewportSizeChange);\n  }, [apiRef, handleViewportSizeChange]);\n  let height = (_viewportInnerSize$he = viewportInnerSize == null ? void 0 : viewportInnerSize.height) != null ? _viewportInnerSize$he : 0;\n\n  if (rootProps.autoHeight && height === 0) {\n    height = 'auto';\n  }\n\n  if (!viewportInnerSize) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    style: {\n      height,\n      width: (_viewportInnerSize$wi = viewportInnerSize == null ? void 0 : viewportInnerSize.width) != null ? _viewportInnerSize$wi : 0,\n      position: 'absolute',\n      top: headerHeight,\n      bottom: height === 'auto' ? 0 : undefined\n    }\n  }, props));\n}\n\nexport function GridOverlays() {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridVisibleRowCountSelector);\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && totalRowCount === 0;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlay = null;\n\n  if (showNoRowsOverlay) {\n    var _rootProps$components;\n\n    overlay = /*#__PURE__*/_jsx(rootProps.components.NoRowsOverlay, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.noRowsOverlay));\n  }\n\n  if (showNoResultsOverlay) {\n    var _rootProps$components2;\n\n    overlay = /*#__PURE__*/_jsx(rootProps.components.NoResultsOverlay, _extends({}, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.noResultsOverlay));\n  }\n\n  if (loading) {\n    var _rootProps$components3;\n\n    overlay = /*#__PURE__*/_jsx(rootProps.components.LoadingOverlay, _extends({}, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.loadingOverlay));\n  }\n\n  if (overlay === null) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, {\n    children: overlay\n  });\n}","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridMainContainer } from '../containers/GridMainContainer';\nimport { GridAutoSizer } from '../GridAutoSizer';\nimport { GridOverlays } from './GridOverlays';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridDensityHeaderHeightSelector } from '../../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction GridBody(props) {\n  const {\n    children,\n    VirtualScrollerComponent,\n    ColumnHeadersComponent\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const headerHeight = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n  const [isVirtualizationDisabled, setIsVirtualizationDisabled] = React.useState(rootProps.disableVirtualization);\n  const disableVirtualization = React.useCallback(() => {\n    setIsVirtualizationDisabled(true);\n  }, []);\n  const enableVirtualization = React.useCallback(() => {\n    setIsVirtualizationDisabled(false);\n  }, []); // The `useGridApiMethod` hook can't be used here, because it only installs the\n  // method if it doesn't exist yet. Once installed, it's never updated again.\n  // This break the methods above, since their closure comes from the first time\n  // they were installed. Which means that calling `setIsVirtualizationDisabled`\n  // will trigger a re-render, but it won't update the state. That can be solved\n  // by migrating the virtualization status to the global state.\n\n  apiRef.current.unstable_disableVirtualization = disableVirtualization;\n  apiRef.current.unstable_enableVirtualization = enableVirtualization;\n  const columnHeadersRef = React.useRef(null);\n  const columnsContainerRef = React.useRef(null);\n  const windowRef = React.useRef(null);\n  const renderingZoneRef = React.useRef(null);\n  apiRef.current.columnHeadersContainerElementRef = columnsContainerRef;\n  apiRef.current.columnHeadersElementRef = columnHeadersRef;\n  apiRef.current.windowRef = windowRef; // TODO rename, it's not attached to the window anymore\n\n  apiRef.current.renderingZoneRef = renderingZoneRef; // TODO remove, nobody should have access to internal parts of the virtualization\n\n  const handleResize = React.useCallback(size => {\n    apiRef.current.publishEvent('resize', size);\n  }, [apiRef]);\n  return /*#__PURE__*/_jsxs(GridMainContainer, {\n    children: [/*#__PURE__*/_jsx(GridOverlays, {}), /*#__PURE__*/_jsx(ColumnHeadersComponent, {\n      ref: columnsContainerRef,\n      innerRef: columnHeadersRef\n    }), /*#__PURE__*/_jsx(GridAutoSizer, {\n      nonce: rootProps.nonce,\n      disableHeight: rootProps.autoHeight,\n      onResize: handleResize,\n      children: size => {\n        const style = {\n          width: size.width,\n          // If `autoHeight` is on, there will be no height value.\n          // In this case, let the container to grow whatever it needs.\n          height: size.height ? size.height - headerHeight : 'auto',\n          marginTop: headerHeight\n        };\n        return /*#__PURE__*/_jsx(VirtualScrollerComponent, {\n          ref: windowRef,\n          style: style,\n          disableVirtualization: isVirtualizationDisabled\n        });\n      }\n    }), children]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridBody.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  ColumnHeadersComponent: PropTypes.elementType.isRequired,\n  VirtualScrollerComponent: PropTypes.elementType.isRequired\n} : void 0;\nexport { GridBody };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridFooterPlaceholder() {\n  var _rootProps$components;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const footerRef = React.useRef(null);\n  apiRef.current.footerRef = footerRef;\n\n  if (rootProps.hideFooter) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: footerRef,\n    children: /*#__PURE__*/_jsx(rootProps.components.Footer, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.footer))\n  });\n}","import * as React from 'react';\nimport { GridApiContext } from '../components/GridApiContext';\nimport { GridRootPropsContext } from './GridRootPropsContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridContextProvider = ({\n  apiRef,\n  props,\n  children\n}) => {\n  return /*#__PURE__*/_jsx(GridRootPropsContext.Provider, {\n    value: props,\n    children: /*#__PURE__*/_jsx(GridApiContext.Provider, {\n      value: apiRef,\n      children: children\n    })\n  });\n};","export function isNumber(value) {\n  return typeof value === 'number';\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object';\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\n\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n/**\n * Based on `fast-deep-equal`\n *\n *  MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n\n    if (Array.isArray(a)) {\n      const length = a.length;\n\n      if (length !== b.length) {\n        return false;\n      }\n\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      const entriesA = Array.from(a.entries());\n\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      const entries = Array.from(a.entries());\n\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n\n      if (length !== b.length) {\n        return false;\n      }\n\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n\n    const keys = Object.keys(a);\n    const length = keys.length;\n\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n\n    return true;\n  } // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n\n\n  return a !== a && b !== b;\n}","import * as React from 'react';\nimport { localStorageAvailable } from '../../utils/utils';\nconst forceDebug = localStorageAvailable() && window.localStorage.getItem('DEBUG') != null;\n\nconst noop = () => {};\n\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\n\nfunction getAppender(name, logLevel, appender = console) {\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI: Log level ${logLevel} not recognized.`);\n  }\n\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = (...args) => {\n        const [message, ...other] = args;\n        appender[method](`MUI: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n\n    return loggerObj;\n  }, {});\n  return logger;\n}\n\nexport const useGridLoggerFactory = (apiRef, props) => {\n  apiRef.current.getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n};","import * as React from 'react';\nexport function useGridApiMethod(apiRef, apiMethods, // TODO: Remove `apiName\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\napiName) {\n  const apiMethodsRef = React.useRef(apiMethods);\n  const [apiMethodsNames] = React.useState(Object.keys(apiMethods));\n  const installMethods = React.useCallback(() => {\n    if (!apiRef.current) {\n      return;\n    }\n\n    apiMethodsNames.forEach(methodName => {\n      if (!apiRef.current.hasOwnProperty(methodName)) {\n        apiRef.current[methodName] = (...args) => apiMethodsRef.current[methodName](...args);\n      }\n    });\n  }, [apiMethodsNames, apiRef]);\n  React.useEffect(() => {\n    apiMethodsRef.current = apiMethods;\n  }, [apiMethods]);\n  React.useEffect(() => {\n    installMethods();\n  }, [installMethods]);\n  installMethods();\n}","// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor(timeout = CLEANUP_TIMER_LOOP_MILLIS) {\n    this.timeouts = new Map();\n    this.cleanupTimeout = CLEANUP_TIMER_LOOP_MILLIS;\n    this.cleanupTimeout = timeout;\n  }\n\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, this.cleanupTimeout);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n\n}","import * as React from 'react';\nimport { TimerBasedCleanupTracking } from '../../utils/cleanupTracking/TimerBasedCleanupTracking';\nimport { FinalizationRegistryBasedCleanupTracking } from '../../utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking';\n\n/**\n * Signal to the underlying logic what version of the public component API\n * of the data grid is exposed.\n */\nvar GridSignature;\n\n(function (GridSignature) {\n  GridSignature[\"DataGrid\"] = \"DataGrid\";\n  GridSignature[\"DataGridPro\"] = \"DataGridPro\";\n})(GridSignature || (GridSignature = {}));\n\n// We use class to make it easier to detect in heap snapshots by name\nclass ObjectToBeRetainedByReact {} // Based on https://github.com/Bnaya/use-dispose-uncommitted/blob/main/src/finalization-registry-based-impl.ts\n// Check https://github.com/facebook/react/issues/15317 to get more information\n\n\nexport function createUseGridApiEventHandler(registryContainer) {\n  let cleanupTokensCounter = 0;\n  return function useGridApiEventHandler(apiRef, eventName, handler, options) {\n    if (registryContainer.registry === null) {\n      registryContainer.registry = typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistryBasedCleanupTracking() : new TimerBasedCleanupTracking();\n    }\n\n    const [objectRetainedByReact] = React.useState(new ObjectToBeRetainedByReact());\n    const subscription = React.useRef(null);\n    const handlerRef = React.useRef();\n    handlerRef.current = handler;\n    const cleanupTokenRef = React.useRef(null);\n\n    if (!subscription.current && handlerRef.current) {\n      const enhancedHandler = (params, event, details) => {\n        if (!event.defaultMuiPrevented) {\n          var _handlerRef$current;\n\n          (_handlerRef$current = handlerRef.current) == null ? void 0 : _handlerRef$current.call(handlerRef, params, event, details);\n        }\n      };\n\n      subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      cleanupTokensCounter += 1;\n      cleanupTokenRef.current = {\n        cleanupToken: cleanupTokensCounter\n      };\n      registryContainer.registry.register(objectRetainedByReact, // The callback below will be called once this reference stops being retained\n      () => {\n        var _subscription$current;\n\n        (_subscription$current = subscription.current) == null ? void 0 : _subscription$current.call(subscription);\n        subscription.current = null;\n        cleanupTokenRef.current = null;\n      }, cleanupTokenRef.current);\n    } else if (!handlerRef.current && subscription.current) {\n      subscription.current();\n      subscription.current = null;\n\n      if (cleanupTokenRef.current) {\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n    }\n\n    React.useEffect(() => {\n      if (!subscription.current && handlerRef.current) {\n        const enhancedHandler = (params, event, details) => {\n          if (!event.defaultMuiPrevented) {\n            var _handlerRef$current2;\n\n            (_handlerRef$current2 = handlerRef.current) == null ? void 0 : _handlerRef$current2.call(handlerRef, params, event, details);\n          }\n        };\n\n        subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      }\n\n      if (cleanupTokenRef.current && registryContainer.registry) {\n        // If the effect was called, it means that this render was committed\n        // so we can trust the cleanup function to remove the listener.\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n\n      return () => {\n        var _subscription$current2;\n\n        (_subscription$current2 = subscription.current) == null ? void 0 : _subscription$current2.call(subscription);\n        subscription.current = null;\n      };\n    }, [apiRef, eventName, options]);\n  };\n}\nconst registryContainer = {\n  registry: null\n}; // TODO: move to @mui/x-data-grid/internals\n// eslint-disable-next-line @typescript-eslint/naming-convention\n\nexport const unstable_resetCleanupTracking = () => {\n  var _registryContainer$re;\n\n  (_registryContainer$re = registryContainer.registry) == null ? void 0 : _registryContainer$re.reset();\n  registryContainer.registry = null;\n};\nexport const useGridApiEventHandler = createUseGridApiEventHandler(registryContainer);\nconst optionsSubscriberOptions = {\n  isFirst: true\n};\nexport function useGridApiOptionHandler(apiRef, eventName, handler) {\n  // Validate that only one per event name?\n  useGridApiEventHandler(apiRef, eventName, handler, optionsSubscriberOptions);\n}\nexport { GridSignature };","export class FinalizationRegistryBasedCleanupTracking {\n  constructor() {\n    this.registry = new FinalizationRegistry(unsubscribe => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n    });\n  }\n\n  register(object, unsubscribe, unregisterToken) {\n    this.registry.register(object, unsubscribe, unregisterToken);\n  }\n\n  unregister(unregisterToken) {\n    this.registry.unregister(unregisterToken);\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  reset() {}\n\n}","// Used https://gist.github.com/mudge/5830382 as a starting point.\n// See https://github.com/browserify/events/blob/master/events.js for\n// the Node.js (https://nodejs.org/api/events.html) polyfill used by webpack.\nexport class EventManager {\n  constructor() {\n    this.maxListeners = 10;\n    this.warnOnce = false;\n    this.events = {};\n  }\n\n  on(eventName, listener, options = {}) {\n    let collection = this.events[eventName];\n\n    if (!collection) {\n      collection = {\n        highPriority: new Map(),\n        regular: new Map()\n      };\n      this.events[eventName] = collection;\n    }\n\n    if (options.isFirst) {\n      collection.highPriority.set(listener, true);\n    } else {\n      collection.regular.set(listener, true);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      const collectionSize = collection.highPriority.size + collection.regular.size;\n\n      if (collectionSize > this.maxListeners && !this.warnOnce) {\n        this.warnOnce = true;\n        console.warn([`Possible EventEmitter memory leak detected. ${collectionSize} ${eventName} listeners added.`, `Use emitter.setMaxListeners() to increase limit.`].join('\\n'));\n      }\n    }\n  }\n\n  removeListener(eventName, listener) {\n    if (this.events[eventName]) {\n      this.events[eventName].regular.delete(listener);\n      this.events[eventName].highPriority.delete(listener);\n    }\n  }\n\n  removeAllListeners() {\n    this.events = {};\n  }\n\n  emit(eventName, ...args) {\n    const collection = this.events[eventName];\n\n    if (!collection) {\n      return;\n    }\n\n    const highPriorityListeners = Array.from(collection.highPriority.keys());\n    const regularListeners = Array.from(collection.regular.keys());\n\n    for (let i = highPriorityListeners.length - 1; i >= 0; i -= 1) {\n      const listener = highPriorityListeners[i];\n\n      if (collection.highPriority.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n\n    for (let i = 0; i < regularListeners.length; i += 1) {\n      const listener = regularListeners[i];\n\n      if (collection.regular.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n  }\n\n  once(eventName, listener) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    this.on(eventName, function oneTimeListener(...args) {\n      that.removeListener(eventName, oneTimeListener);\n      listener.apply(that, args);\n    });\n  }\n\n}","import * as React from 'react';\nimport { useGridApiMethod } from '../utils/useGridApiMethod';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { EventManager } from '../../utils/EventManager';\n\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\n\nlet globalId = 0;\nexport function useGridApiInitialization(inputApiRef, props) {\n  const apiRef = React.useRef();\n\n  if (!apiRef.current) {\n    apiRef.current = {\n      unstable_eventManager: new EventManager(),\n      unstable_caches: {},\n      state: {},\n      instanceId: globalId\n    };\n    globalId += 1;\n  }\n\n  React.useImperativeHandle(inputApiRef, () => apiRef.current, [apiRef]);\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n\n    const details = props.signature === GridSignature.DataGridPro ? {\n      api: apiRef.current\n    } : {};\n    apiRef.current.unstable_eventManager.emit(name, params, event, details);\n  }, [apiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    apiRef.current.unstable_eventManager.on(event, handler, options);\n    const api = apiRef.current;\n    return () => {\n      api.unstable_eventManager.removeListener(event, handler);\n    };\n  }, [apiRef]);\n  const showError = React.useCallback(args => {\n    apiRef.current.publishEvent('componentError', args);\n  }, [apiRef]);\n  useGridApiMethod(apiRef, {\n    subscribeEvent,\n    publishEvent,\n    showError\n  }, 'GridCoreApi');\n  React.useEffect(() => {\n    const api = apiRef.current;\n    return () => {\n      api.publishEvent('unmount');\n    };\n  }, [apiRef]);\n  return apiRef;\n}","import * as React from 'react';\nimport { useGridApiMethod } from '../utils/useGridApiMethod';\nexport const useGridLocaleText = (apiRef, props) => {\n  const getLocaleText = React.useCallback(key => {\n    if (props.localeText[key] == null) {\n      throw new Error(`Missing translation for key ${key}.`);\n    }\n\n    return props.localeText[key];\n  }, [props.localeText]);\n  const localeTextApi = {\n    getLocaleText\n  };\n  useGridApiMethod(apiRef, localeTextApi, 'LocaleTextApi');\n};","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n\n  return (hint === \"string\" ? String : Number)(input);\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\n\n/**\n * Implement the Pipeline Pattern\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic to enrich data provided by other plugins or components.\n * For instance, the row grouping plugin needs to add / remove the grouping columns when the grid columns are updated.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterPipeProcessor` to register their processor.\n *\n * - `apiRef.current.unstable_requestPipeProcessorsApplication` to imperatively re-apply a group.\n *   This method should be used in last resort.\n *   Most of the time, the application should be triggered by an update on the deps of the processor.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to enrich its data must use:\n *\n * - `apiRef.current.unstable_applyPipeProcessors` to run in chain all the processors of a given group.\n *\n * - `useGridRegisterPipeApplier` to re-apply the whole pipe when requested.\n *   The applier will be called when:\n *   * a processor is registered.\n *   * `apiRef.current.unstable_requestPipeProcessorsApplication` is called for the given group.\n */\nexport const useGridPipeProcessing = apiRef => {\n  const processorsCache = React.useRef({});\n  const runAppliers = React.useCallback(groupCache => {\n    if (!groupCache) {\n      return;\n    }\n\n    Object.values(groupCache.appliers).forEach(callback => {\n      callback();\n    });\n  }, []);\n  const registerPipeProcessor = React.useCallback((group, id, processor) => {\n    if (!processorsCache.current[group]) {\n      processorsCache.current[group] = {\n        processors: new Map(),\n        appliers: {}\n      };\n    }\n\n    const groupCache = processorsCache.current[group];\n    const oldProcessor = groupCache.processors.get(id);\n\n    if (oldProcessor !== processor) {\n      groupCache.processors.set(id, processor);\n      runAppliers(groupCache);\n    }\n\n    return () => {\n      processorsCache.current[group].processors.set(id, null);\n    };\n  }, [runAppliers]);\n  const registerPipeApplier = React.useCallback((group, id, applier) => {\n    if (!processorsCache.current[group]) {\n      processorsCache.current[group] = {\n        processors: new Map(),\n        appliers: {}\n      };\n    }\n\n    processorsCache.current[group].appliers[id] = applier;\n    return () => {\n      const _appliers = processorsCache.current[group].appliers,\n            otherAppliers = _objectWithoutPropertiesLoose(_appliers, [id].map(_toPropertyKey));\n\n      processorsCache.current[group].appliers = otherAppliers;\n    };\n  }, []);\n  const requestPipeProcessorsApplication = React.useCallback(group => {\n    const groupCache = processorsCache.current[group];\n    runAppliers(groupCache);\n  }, [runAppliers]);\n  const applyPipeProcessors = React.useCallback((...args) => {\n    const [group, value, context] = args;\n\n    if (!processorsCache.current[group]) {\n      return value;\n    }\n\n    const preProcessors = Array.from(processorsCache.current[group].processors.values());\n    return preProcessors.reduce((acc, preProcessor) => {\n      if (!preProcessor) {\n        return acc;\n      }\n\n      return preProcessor(acc, context);\n    }, value);\n  }, []);\n  const preProcessingApi = {\n    unstable_registerPipeProcessor: registerPipeProcessor,\n    unstable_registerPipeApplier: registerPipeApplier,\n    unstable_requestPipeProcessorsApplication: requestPipeProcessorsApplication,\n    unstable_applyPipeProcessors: applyPipeProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingApi, 'GridPipeProcessingApi');\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nexport const GRID_DEFAULT_STRATEGY = 'none';\nexport const GRID_STRATEGIES_PROCESSORS = {\n  rowTreeCreation: 'rowTree',\n  filtering: 'rowTree',\n  sorting: 'rowTree'\n};\n\n/**\n * Implements a variant of the Strategy Pattern (see https://en.wikipedia.org/wiki/Strategy_pattern)\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic that must only be applied if the right strategy is active.\n * For instance, the row grouping plugin has a custom filtering algorithm.\n * This algorithm must be applied by the filtering plugin if the row grouping is the current way of grouping rows,\n * but not if the tree data is the current way of grouping rows.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterStrategyProcessor` to register their processor.\n *   When the processor of the active strategy changes, it will fire `\"activeStrategyProcessorChange\"` to re-apply the processor.\n *\n * - `apiRef.current.unstable_setStrategyAvailability` to tell if their strategy can be used.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to apply the custom logic of the current strategy must use:\n *\n * - `apiRef.current.unstable_applyStrategyProcessor` to run the processor of the active strategy for a given processor name.\n *\n * - the \"strategyAvailabilityChange\" event to update something when the active strategy changes.\n *    Warning: Be careful not to apply the processor several times.\n *    For instance \"rowsSet\" is fired by `useGridRows` whenever the active strategy changes.\n *    So listening to both would most likely run your logic twice.\n *\n * - The \"activeStrategyProcessorChange\" event to update something when the processor of the active strategy changes.\n *\n * =====================================================================================================================\n *\n * Each processor name is part of a strategy group which can only have one active strategy at the time.\n * For now, there is only one strategy group named `rowTree` which customize\n * - row tree creation algorithm.\n * - sorting algorithm.\n * - filtering algorithm.\n */\nexport const useGridStrategyProcessing = apiRef => {\n  const availableStrategies = React.useRef(new Map());\n  const strategiesCache = React.useRef({});\n  const registerStrategyProcessor = React.useCallback((strategyName, processorName, processor) => {\n    const cleanup = () => {\n      const _ref = strategiesCache.current[processorName],\n            otherProcessors = _objectWithoutPropertiesLoose(_ref, [strategyName].map(_toPropertyKey));\n\n      strategiesCache.current[processorName] = otherProcessors;\n    };\n\n    if (!strategiesCache.current[processorName]) {\n      strategiesCache.current[processorName] = {};\n    }\n\n    const groupPreProcessors = strategiesCache.current[processorName];\n    const previousProcessor = groupPreProcessors[strategyName];\n    groupPreProcessors[strategyName] = processor;\n\n    if (!previousProcessor || previousProcessor === processor) {\n      return cleanup;\n    }\n\n    if (strategyName === apiRef.current.unstable_getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName])) {\n      apiRef.current.publishEvent('activeStrategyProcessorChange', processorName);\n    }\n\n    return cleanup;\n  }, [apiRef]);\n  const applyStrategyProcessor = React.useCallback((processorName, params) => {\n    const activeStrategy = apiRef.current.unstable_getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName]);\n\n    if (activeStrategy == null) {\n      throw new Error(\"Can't apply a strategy processor before defining an active strategy\");\n    }\n\n    const groupCache = strategiesCache.current[processorName];\n\n    if (!groupCache || !groupCache[activeStrategy]) {\n      throw new Error(`No processor found for processor \"${processorName}\" on strategy \"${activeStrategy}\"`);\n    }\n\n    const processor = groupCache[activeStrategy];\n    return processor(params);\n  }, [apiRef]);\n  const getActiveStrategy = React.useCallback(strategyGroup => {\n    var _availableStrategyEnt;\n\n    const strategyEntries = Array.from(availableStrategies.current.entries());\n    const availableStrategyEntry = strategyEntries.find(([, strategy]) => {\n      if (strategy.group !== strategyGroup) {\n        return false;\n      }\n\n      return strategy.isAvailable();\n    });\n    return (_availableStrategyEnt = availableStrategyEntry == null ? void 0 : availableStrategyEntry[0]) != null ? _availableStrategyEnt : GRID_DEFAULT_STRATEGY;\n  }, []);\n  const setStrategyAvailability = React.useCallback((strategyGroup, strategyName, isAvailable) => {\n    availableStrategies.current.set(strategyName, {\n      group: strategyGroup,\n      isAvailable\n    });\n    apiRef.current.publishEvent('strategyAvailabilityChange');\n  }, [apiRef]);\n  const strategyProcessingApi = {\n    unstable_registerStrategyProcessor: registerStrategyProcessor,\n    unstable_applyStrategyProcessor: applyStrategyProcessor,\n    unstable_getActiveStrategy: getActiveStrategy,\n    unstable_setStrategyAvailability: setStrategyAvailability\n  };\n  useGridApiMethod(apiRef, strategyProcessingApi, 'GridStrategyProcessing');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"stateId\"];\nimport * as React from 'react';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../utils';\nimport { isFunction } from '../../utils/utils';\nexport const useGridStateInitialization = (apiRef, props) => {\n  const controlStateMapRef = React.useRef({});\n  const [, rawForceUpdate] = React.useState();\n  const registerControlState = React.useCallback(controlStateItem => {\n    const {\n      stateId\n    } = controlStateItem,\n          others = _objectWithoutPropertiesLoose(controlStateItem, _excluded);\n\n    controlStateMapRef.current[stateId] = _extends({}, others, {\n      stateId\n    });\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n\n    if (isFunction(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n\n    let ignoreSetState = false; // Apply the control state constraints\n\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef.current.state, apiRef.current.instanceId);\n      const newSubState = controlState.stateSelector(newState, apiRef.current.instanceId);\n\n      if (newSubState === oldSubState) {\n        return;\n      }\n\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      }); // The state is controlled, the prop should always win\n\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n\n      if (apiRef.current.publishEvent) {\n        apiRef.current.publishEvent('stateChange', newState);\n      }\n    }\n\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(newState, apiRef.current.instanceId);\n\n      if (controlState.propOnChange && hasPropChanged) {\n        const details = props.signature === GridSignature.DataGridPro ? {\n          api: apiRef.current,\n          reason\n        } : {\n          reason\n        };\n        controlState.propOnChange(model, details);\n      }\n\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n\n    return !ignoreSetState;\n  }, [apiRef, props.signature]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return _extends({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const forceUpdate = React.useCallback(() => rawForceUpdate(() => apiRef.current.state), [apiRef]);\n  const stateApi = {\n    setState,\n    forceUpdate,\n    unstable_updateControlState: updateControlState,\n    unstable_registerControlState: registerControlState\n  };\n  useGridApiMethod(apiRef, stateApi, 'GridStateApi');\n};","import { useGridLoggerFactory } from './useGridLoggerFactory';\nimport { useGridApiInitialization } from './useGridApiInitialization';\nimport { useGridErrorHandler } from './useGridErrorHandler';\nimport { useGridLocaleText } from './useGridLocaleText';\nimport { useGridPipeProcessing } from './pipeProcessing';\nimport { useGridStrategyProcessing } from './strategyProcessing';\nimport { useGridStateInitialization } from './useGridStateInitialization';\n/**\n * Initialize the technical pieces of the DataGrid (logger, state, ...) that any DataGrid implementation needs\n */\n\nexport const useGridInitialization = (inputApiRef, props) => {\n  const apiRef = useGridApiInitialization(inputApiRef, props);\n  useGridLoggerFactory(apiRef, props);\n  useGridErrorHandler(apiRef, props);\n  useGridStateInitialization(apiRef, props);\n  useGridPipeProcessing(apiRef);\n  useGridStrategyProcessing(apiRef);\n  useGridLocaleText(apiRef, props);\n  return apiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiEventHandler } from '../utils/useGridApiEventHandler';\nexport function useGridErrorHandler(apiRef, props) {\n  const handleError = React.useCallback(args => {\n    // We are handling error here, to set up the handler as early as possible and be able to catch error thrown at init time.\n    apiRef.current.setState(state => _extends({}, state, {\n      error: args\n    }));\n  }, [apiRef]);\n  React.useEffect(() => {\n    handleError(props.error);\n  }, [handleError, props.error]);\n  useGridApiEventHandler(apiRef, 'componentError', handleError);\n}","import * as React from 'react';\nexport const useGridInitializeState = (initializer, apiRef, props) => {\n  const isInitialized = React.useRef(false);\n\n  if (!isInitialized.current) {\n    apiRef.current.state = initializer(apiRef.current.state, props, apiRef);\n    isInitialized.current = true;\n  }\n};","import * as React from 'react';\nimport { useGridApiMethod, useGridNativeEventListener } from '../../utils';\n\nfunction writeToClipboardPolyfill(data) {\n  const span = document.createElement('span');\n  span.style.whiteSpace = 'pre';\n  span.style.userSelect = 'all';\n  span.style.opacity = '0px';\n  span.textContent = data;\n  document.body.appendChild(span);\n  const range = document.createRange();\n  range.selectNode(span);\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n\n  try {\n    document.execCommand('copy');\n  } finally {\n    document.body.removeChild(span);\n  }\n}\n/**\n * @requires useGridCsvExport (method)\n * @requires useGridSelection (method)\n */\n\n\nexport const useGridClipboard = apiRef => {\n  const copySelectedRowsToClipboard = React.useCallback((includeHeaders = false) => {\n    if (apiRef.current.getSelectedRows().size === 0) {\n      return;\n    }\n\n    const data = apiRef.current.getDataAsCsv({\n      includeHeaders,\n      delimiter: '\\t'\n    });\n\n    if (navigator.clipboard) {\n      navigator.clipboard.writeText(data).catch(() => {\n        writeToClipboardPolyfill(data);\n      });\n    } else {\n      writeToClipboardPolyfill(data);\n    }\n  }, [apiRef]);\n  const handleKeydown = React.useCallback(event => {\n    var _window$getSelection;\n\n    const isModifierKeyPressed = event.ctrlKey || event.metaKey || event.altKey; // event.key === 'c' is not enough as alt+c can lead to ©, ç, or other characters on macOS.\n    // event.code === 'KeyC' is not enough as event.code assume a QWERTY keyboard layout which would\n    // be wrong with a Dvorak keyboard (as if pressing J).\n\n    if (String.fromCharCode(event.keyCode) !== 'C' || !isModifierKeyPressed) {\n      return;\n    } // Do nothing if there's a native selection\n\n\n    if (((_window$getSelection = window.getSelection()) == null ? void 0 : _window$getSelection.toString()) !== '') {\n      return;\n    }\n\n    apiRef.current.unstable_copySelectedRowsToClipboard(event.altKey);\n  }, [apiRef]);\n  useGridNativeEventListener(apiRef, apiRef.current.rootElementRef, 'keydown', handleKeydown);\n  const clipboardApi = {\n    unstable_copySelectedRowsToClipboard: copySelectedRowsToClipboard\n  };\n  useGridApiMethod(apiRef, clipboardApi, 'GridClipboardApi');\n};","import * as React from 'react';\nimport { isFunction } from '../../utils/utils';\nimport { useGridLogger } from './useGridLogger';\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const wrapHandler = React.useCallback(args => {\n    return handlerRef.current && handlerRef.current(args);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    let targetElement;\n\n    if (isFunction(ref)) {\n      targetElement = ref();\n    } else {\n      targetElement = ref && ref.current ? ref.current : null;\n    }\n\n    if (targetElement && wrapHandler && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      const boundElem = targetElement;\n      setAdded(true);\n\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        boundElem.removeEventListener(eventName, wrapHandler, options);\n      };\n\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [ref, wrapHandler, eventName, added, logger, options, apiRef]);\n};","export const gridColumnMenuSelector = state => state.columnMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { gridColumnMenuSelector } from './columnMenuSelector';\nimport { gridClasses } from '../../../constants/gridClasses';\nexport const columnMenuStateInitializer = state => _extends({}, state, {\n  columnMenu: {\n    open: false\n  }\n});\n/**\n * @requires useGridColumnResize (event)\n * @requires useGridInfiniteLoader (event)\n */\n\nexport const useGridColumnMenu = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridColumnMenu');\n  /**\n   * API METHODS\n   */\n\n  const showColumnMenu = React.useCallback(field => {\n    const shouldUpdate = apiRef.current.setState(state => {\n      if (state.columnMenu.open && state.columnMenu.field === field) {\n        return state;\n      }\n\n      logger.debug('Opening Column Menu');\n      return _extends({}, state, {\n        columnMenu: {\n          open: true,\n          field\n        }\n      });\n    });\n\n    if (shouldUpdate) {\n      apiRef.current.hidePreferences();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const hideColumnMenu = React.useCallback(() => {\n    const shouldUpdate = apiRef.current.setState(state => {\n      if (!state.columnMenu.open && state.columnMenu.field === undefined) {\n        return state;\n      }\n\n      logger.debug('Hiding Column Menu');\n      return _extends({}, state, {\n        columnMenu: _extends({}, state.columnMenu, {\n          open: false,\n          field: undefined\n        })\n      });\n    });\n\n    if (shouldUpdate) {\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const toggleColumnMenu = React.useCallback(field => {\n    logger.debug('Toggle Column Menu');\n    const columnMenu = gridColumnMenuSelector(apiRef.current.state);\n\n    if (!columnMenu.open || columnMenu.field !== field) {\n      showColumnMenu(field);\n    } else {\n      hideColumnMenu();\n    }\n  }, [apiRef, logger, showColumnMenu, hideColumnMenu]);\n  const columnMenuApi = {\n    showColumnMenu,\n    hideColumnMenu,\n    toggleColumnMenu\n  };\n  useGridApiMethod(apiRef, columnMenuApi, 'GridColumnMenuApi');\n  /**\n   * EVENTS\n   */\n\n  const handleColumnHeaderFocus = React.useCallback((params, event) => {\n    // Check if the column menu button received focus\n    if (!event.target.classList.contains(gridClasses.menuIconButton)) {\n      return;\n    } // Check if there's an element which lost focus\n\n\n    if (!event.relatedTarget) {\n      return;\n    } // `true` if the focus was on the column menu itself, not on any item\n\n\n    const columnMenuLostFocus = event.relatedTarget.classList.contains(gridClasses.menuList); // `true` if the focus was on an item from the column menu\n\n    const columnMenuItemLostFocus = event.relatedTarget.getAttribute('role') === 'menuitem';\n\n    if (columnMenuLostFocus || columnMenuItemLostFocus) {\n      apiRef.current.setColumnHeaderFocus(params.field);\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'virtualScrollerWheel', apiRef.current.hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerTouchMove', apiRef.current.hideColumnMenu);\n};","import * as React from 'react';\nexport const useFirstRender = callback => {\n  const isFirstRender = React.useRef(true);\n\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    callback();\n  }\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeProcessor = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.unstable_registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeApplier = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.unstable_registerPipeApplier(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridArrowUpwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\nexport const GridArrowDownwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\nexport const GridKeyboardArrowRight = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\nexport const GridExpandMoreIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\nexport const GridFilterListIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\nexport const GridFilterAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexport const GridSearchIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexport const GridMenuIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\nexport const GridCheckCircleIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\nexport const GridColumnIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z\"\n}), 'ColumnIcon');\nexport const GridSeparatorIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 19V5h2v14z\"\n}), 'Separator');\nexport const GridViewHeadlineIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z\"\n}), 'ViewHeadline');\nexport const GridTableRowsIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z\"\n}), 'TableRows');\nexport const GridViewStreamIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 18h17v-6H4v6zM4 5v6h17V5H4z\"\n}), 'ViewStream');\nexport const GridTripleDotsVerticalIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'TripleDotsVertical');\nexport const GridCloseIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexport const GridAddIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexport const GridRemoveIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexport const GridLoadIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Load');\nexport const GridDragIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'Drag');\nexport const GridSaveAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexport const GridCheckIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexport const GridMoreVertIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');","export function getValueFromOption(option) {\n  if (typeof option === 'object' && option !== null) {\n    return option.value;\n  }\n\n  return option;\n}\nexport function getValueFromValueOptions(value, valueOptions) {\n  if (valueOptions === undefined) {\n    return undefined;\n  }\n\n  const result = valueOptions.find(option => {\n    const optionValue = getValueFromOption(option);\n    return String(optionValue) === String(value);\n  });\n  return getValueFromOption(result);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport MenuItem from '@mui/material/MenuItem';\nimport { GridLoadIcon } from '../../icons';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getValueFromValueOptions } from './filterPanelUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst warnedOnce = {};\n\nfunction warnDeprecatedTypeSupport(type) {\n  console.warn([`MUI: Using GridFilterInputValue with a \"${type}\" column is deprecated.`, 'Use GridFilterInputSingleSelect instead.'].join('\\n'));\n  warnedOnce[type] = true;\n}\n\nconst renderSingleSelectOptions = ({\n  valueOptions,\n  valueFormatter,\n  field\n}, api, OptionComponent) => {\n  const iterableColumnValues = typeof valueOptions === 'function' ? ['', ...valueOptions({\n    field\n  })] : ['', ...(valueOptions || [])];\n  return iterableColumnValues.map(option => {\n    const isOptionTypeObject = typeof option === 'object';\n    const key = isOptionTypeObject ? option.value : option;\n    const value = isOptionTypeObject ? option.value : option;\n    const formattedValue = valueFormatter && option !== '' ? valueFormatter({\n      value: option,\n      field,\n      api\n    }) : option;\n    const content = isOptionTypeObject ? option.label : formattedValue;\n    return /*#__PURE__*/_jsx(OptionComponent, {\n      value: value,\n      children: content\n    }, key);\n  });\n};\n\nexport const SUBMIT_FILTER_STROKE_TIME = 500;\n\nfunction GridFilterInputValue(props) {\n  var _item$value, _rootProps$components, _baseSelectProps$nati, _rootProps$components2, _rootProps$components3;\n\n  const {\n    item,\n    applyValue,\n    type,\n    apiRef,\n    focusElementRef\n  } = props,\n        others = _objectWithoutPropertiesLoose(props, _excluded);\n\n  if (process.env.NODE_ENV !== 'production' && ['date', 'datetime-local', 'singleSelect'].includes(type) && !warnedOnce[type]) {\n    warnDeprecatedTypeSupport(type);\n  }\n\n  const filterTimeout = React.useRef();\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const baseSelectProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const singleSelectProps = type === 'singleSelect' ? {\n    select: true,\n    SelectProps: _extends({\n      native: isSelectNative\n    }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect),\n    children: renderSingleSelectOptions(apiRef.current.getColumn(item.columnField), apiRef.current, isSelectNative ? 'option' : MenuItem)\n  } : {};\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value; // NativeSelect casts the value to a string.\n\n    if (type === 'singleSelect') {\n      const column = apiRef.current.getColumn(item.columnField);\n      const columnValueOptions = typeof column.valueOptions === 'function' ? column.valueOptions({\n        field: column.field\n      }) : column.valueOptions;\n      value = getValueFromValueOptions(value, columnValueOptions);\n    }\n\n    clearTimeout(filterTimeout.current);\n    setFilterValueState(String(value));\n    setIsApplying(true); // TODO singleSelect doesn't debounce\n\n    filterTimeout.current = setTimeout(() => {\n      applyValue(_extends({}, item, {\n        value\n      }));\n      setIsApplying(false);\n    }, SUBMIT_FILTER_STROKE_TIME);\n  }, [apiRef, applyValue, item, type]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(filterTimeout.current);\n    };\n  }, []);\n  React.useEffect(() => {\n    var _item$value2;\n\n    const itemValue = (_item$value2 = item.value) != null ? _item$value2 : '';\n    setFilterValueState(String(itemValue));\n  }, [item.value]);\n  const InputProps = applying ? {\n    endAdornment: /*#__PURE__*/_jsx(GridLoadIcon, {})\n  } : others.InputProps;\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputProps: InputProps,\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, singleSelectProps, others, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseTextField));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputValue };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"getValue\", \"isValidating\", \"debounceMs\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridLoadIcon } from '../icons/index';\nimport { SUBMIT_FILTER_STROKE_TIME } from '../panel/filterPanel/GridFilterInputValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridEditInputCellRoot = styled(InputBase, {\n  name: 'MuiDataGrid',\n  slot: 'EditInputCell',\n  overridesResolver: (props, styles) => styles.editInputCell\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  padding: '1px 0',\n  '& input': {\n    padding: '0 16px',\n    height: '100%'\n  }\n}));\n\nfunction GridEditInputCell(props) {\n  var _rootProps$experiment;\n\n  const rootProps = useGridRootProps();\n\n  const {\n    id,\n    value,\n    field,\n    colDef,\n    hasFocus,\n    debounceMs = (_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.newEditingApi ? 200 : SUBMIT_FILTER_STROKE_TIME,\n    isProcessingProps,\n    onValueChange\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const [valueState, setValueState] = React.useState(value);\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.value;\n\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n\n    setValueState(newValue);\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newValue,\n      debounceMs\n    }, event);\n  }, [apiRef, debounceMs, field, id, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(GridEditInputCellRoot, _extends({\n    inputRef: inputRef,\n    className: classes.root,\n    fullWidth: true,\n    type: colDef.type === 'number' ? colDef.type : 'text',\n    value: valueState != null ? valueState : '',\n    onChange: handleChange,\n    endAdornment: isProcessingProps ? /*#__PURE__*/_jsx(GridLoadIcon, {}) : undefined\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridEditInputCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  debounceMs: PropTypes.number,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.object.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n\n  /**\n   * The cell value, but if the column has valueGetter, use getValue.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditInputCell };\nexport const renderEditInputCell = params => /*#__PURE__*/_jsx(GridEditInputCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { buildWarning } from '../../../utils/warning';\nconst sortModelDisableMultiColumnsSortingWarning = buildWarning(['MUI: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\nexport const sanitizeSortModel = (model, disableMultipleColumnsSorting) => {\n  if (disableMultipleColumnsSorting && model.length > 1) {\n    sortModelDisableMultiColumnsSortingWarning();\n    return [model[0]];\n  }\n\n  return model;\n};\nexport const mergeStateWithSortModel = (sortModel, disableMultipleColumnsSorting) => state => _extends({}, state, {\n  sorting: _extends({}, state.sorting, {\n    sortModel: sanitizeSortModel(sortModel, disableMultipleColumnsSorting)\n  })\n});\n\nconst isDesc = direction => direction === 'desc';\n/**\n * Transform an item of the sorting model into a method comparing two rows.\n * @param {GridSortItem} sortItem The sort item we want to apply.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridParsedSortItem | null} The parsed sort item. Returns `null` is the sort item is not valid.\n */\n\n\nconst parseSortItem = (sortItem, apiRef) => {\n  const column = apiRef.current.getColumn(sortItem.field);\n\n  if (!column) {\n    return null;\n  }\n\n  const comparator = isDesc(sortItem.sort) ? (...args) => -1 * column.sortComparator(...args) : column.sortComparator;\n\n  const getSortCellParams = id => ({\n    id,\n    field: column.field,\n    rowNode: apiRef.current.getRowNode(id),\n    value: apiRef.current.getCellValue(id, column.field),\n    api: apiRef.current\n  });\n\n  return {\n    getSortCellParams,\n    comparator\n  };\n};\n/**\n * Compare two rows according to a list of valid sort items.\n * The `row1Params` and `row2Params` must have the same length as `parsedSortItems`,\n * and each of their index must contain the `GridSortCellParams` of the sort item with the same index.\n * @param {GridParsedSortItem[]} parsedSortItems All the sort items with which we want to compare the rows.\n * @param {GridSortCellParams} row1Params The params of the 1st row for each sort item.\n * @param {GridSortCellParams} row2Params The params of the 2nd row for each sort item.\n */\n\n\nconst compareRows = (parsedSortItems, row1Params, row2Params) => {\n  return parsedSortItems.reduce((res, item, index) => {\n    if (res !== 0) {\n      // return the results of the first comparator which distinguish the two rows\n      return res;\n    }\n\n    const sortCellParams1 = row1Params[index];\n    const sortCellParams2 = row2Params[index];\n    res = item.comparator(sortCellParams1.value, sortCellParams2.value, sortCellParams1, sortCellParams2);\n    return res;\n  }, 0);\n};\n/**\n * Generates a method to easily sort a list of rows according to the current sort model.\n * @param {GridSortModel} sortModel The model with which we want to sort the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridSortingModelApplier | null} A method that generates a list of sorted row ids from a list of rows according to the current sort model. If `null`, we consider that the rows should remain in the order there were provided.\n */\n\n\nexport const buildAggregatedSortingApplier = (sortModel, apiRef) => {\n  const comparatorList = sortModel.map(item => parseSortItem(item, apiRef)).filter(comparator => !!comparator);\n\n  if (comparatorList.length === 0) {\n    return null;\n  }\n\n  return rowList => rowList.map(value => ({\n    value,\n    params: comparatorList.map(el => el.getSortCellParams(value.id))\n  })).sort((a, b) => compareRows(comparatorList, a.params, b.params)).map(row => row.value.id);\n};\nexport const getNextGridSortDirection = (sortingOrder, current) => {\n  const currentIdx = sortingOrder.indexOf(current);\n\n  if (!current || currentIdx === -1 || currentIdx + 1 === sortingOrder.length) {\n    return sortingOrder[0];\n  }\n\n  return sortingOrder[currentIdx + 1];\n};\n\nconst gridNillComparator = (v1, v2) => {\n  if (v1 == null && v2 != null) {\n    return -1;\n  }\n\n  if (v2 == null && v1 != null) {\n    return 1;\n  }\n\n  if (v1 == null && v2 == null) {\n    return 0;\n  }\n\n  return null;\n};\n\nconst collator = new Intl.Collator();\nexport const gridStringOrNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n\n  if (nillResult !== null) {\n    return nillResult;\n  }\n\n  if (typeof value1 === 'string') {\n    return collator.compare(value1.toString(), value2.toString());\n  }\n\n  return value1 - value2;\n};\nexport const gridNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n\n  if (nillResult !== null) {\n    return nillResult;\n  }\n\n  return Number(value1) - Number(value2);\n};\nexport const gridDateComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n\n  if (nillResult !== null) {\n    return nillResult;\n  }\n\n  if (value1 > value2) {\n    return 1;\n  }\n\n  if (value1 < value2) {\n    return -1;\n  }\n\n  return 0;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\n\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { unstable_setRef as setRef, unstable_useEventCallback as useEventCallback, unstable_useControlled as useControlled, unstable_useId as useId } from '@mui/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nexport function createFilterOptions(config = {}) {\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, {\n    inputValue,\n    getOptionLabel\n  }) => {\n    let input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    const filteredOptions = options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE11 support.\n\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nconst defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nconst pageSize = 5;\nexport default function useAutocomplete(props) {\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    disabled: disabledProp,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel: getOptionLabelProp = option => {\n      var _option$label;\n\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    isOptionEqualToValue = (option, value) => option === value,\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    readOnly = false,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = useId(idProp);\n  let getOptionLabel = getOptionLabelProp;\n\n  getOptionLabel = option => {\n    const optionLabel = getOptionLabelProp(option);\n\n    if (typeof optionLabel !== 'string') {\n      if (process.env.NODE_ENV !== 'production') {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n        console.error(`MUI: The \\`getOptionLabel\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\n      }\n\n      return String(optionLabel);\n    }\n\n    return optionLabel;\n  };\n\n  const ignoreFocus = React.useRef(false);\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValueState] = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = React.useState(false);\n  const resetInputValue = React.useCallback((event, newValue) => {\n    // retain current `inputValue` if new option isn't selected and `clearOnBlur` is false\n    // When `multiple` is enabled, `newValue` is an array of all selected items including the newly selected item\n    const isOptionSelected = multiple ? value.length < newValue.length : newValue !== null;\n\n    if (!isOptionSelected && !clearOnBlur) {\n      return;\n    }\n\n    let newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValueState(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  }, [getOptionLabel, inputValue, multiple, onInputChange, setInputValueState, clearOnBlur, value]);\n  const prevValue = React.useRef();\n  React.useEffect(() => {\n    const valueChange = value !== prevValue.current;\n    prevValue.current = value;\n\n    if (focused && !valueChange) {\n      return;\n    } // Only reset the input's value when freeSolo if the component's value changes.\n\n\n    if (freeSolo && !valueChange) {\n      return;\n    }\n\n    resetInputValue(null, value);\n  }, [value, resetInputValue, focused, prevValue, freeSolo]);\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const [inputPristine, setInputPristine] = React.useState(true);\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open && !readOnly;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && isOptionEqualToValue(option, value2))) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n  const listboxAvailable = open && filteredOptions.length > 0 && !readOnly;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => isOptionEqualToValue(option, value2)));\n\n      if (missingValue.length > 0) {\n        console.warn([`MUI: The value provided to ${componentName} is invalid.`, `None of the options match with \\`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\\`.`, 'You can use the `isOptionEqualToValue` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n\n  const focusTag = useEventCallback(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const setHighlightedIndex = useEventCallback(({\n    event,\n    index,\n    reason = 'auto'\n  }) => {\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    const prev = listboxRef.current.querySelector('[role=\"option\"].Mui-focused');\n\n    if (prev) {\n      prev.classList.remove('Mui-focused');\n      prev.classList.remove('Mui-focusVisible');\n    }\n\n    const listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n\n    if (!option) {\n      return;\n    }\n\n    option.classList.add('Mui-focused');\n\n    if (reason === 'keyboard') {\n      option.classList.add('Mui-focusVisible');\n    } // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/WAI/ARIA/apg/example-index/combobox/js/select-only.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = useEventCallback(({\n    event,\n    diff,\n    direction = 'next',\n    reason = 'auto'\n  }) => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      const newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    }); // Sync the content of the input with the highlighted option.\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const syncHighlightedIndex = React.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const valueItem = multiple ? value[0] : value; // The popup is empty, reset\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n\n    if (!listboxRef.current) {\n      return;\n    } // Synchronize the value with the highlighted index\n\n\n    if (valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current]; // Keep the current highlighted index if possible\n\n      if (multiple && currentOption && findIndex(value, val => isOptionEqualToValue(currentOption, val)) !== -1) {\n        return;\n      }\n\n      const itemIndex = findIndex(filteredOptions, optionItem => isOptionEqualToValue(optionItem, valueItem));\n\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n\n      return;\n    } // Prevent the highlighted index to leak outside the boundaries.\n\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    } // Restore the focus to the previous index.\n\n\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    }); // Ignore filteredOptions (and options, isOptionEqualToValue, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [// Only sync the highlighted index when the option switch between empty and not\n  filteredOptions.length, // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = useEventCallback(node => {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    }\n\n    syncHighlightedIndex();\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\n        if (inputRef.current && inputRef.current.nodeName === 'TEXTAREA') {\n          console.warn([`A textarea element was provided to ${componentName} where input was expected.`, `This is not a supported scenario but it may work under certain conditions.`, `A textarea keyboard navigation may conflict with Autocomplete controls (e.g. enter and arrow keys).`, `Make sure to test keyboard navigation and add custom event handlers if necessary.`].join('\\n'));\n        } else {\n          console.error([`MUI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, '', componentName === 'useAutocomplete' ? 'Make sure you have binded getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\n'));\n        }\n      }\n    }, [componentName]);\n  }\n\n  React.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n\n    setOpenState(true);\n    setInputPristine(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n\n  const handleValue = (event, newValue, reason, details) => {\n    if (multiple) {\n      if (value.length === newValue.length && value.every((val, i) => val === newValue[i])) {\n        return;\n      }\n    } else if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n\n    setValueState(newValue);\n  };\n\n  const isTouch = React.useRef(false);\n\n  const selectNewValue = (event, option, reasonProp = 'selectOption', origin = 'options') => {\n    let reason = reasonProp;\n    let newValue = option;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        const matches = newValue.filter(val => isOptionEqualToValue(option, val));\n\n        if (matches.length > 1) {\n          console.error([`MUI: The \\`isOptionEqualToValue\\` method of ${componentName} do not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\n'));\n        }\n      }\n\n      const itemIndex = findIndex(newValue, valueItem => isOptionEqualToValue(option, valueItem));\n\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'removeOption';\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option\n    });\n\n    if (!disableCloseOnSelect && !event.ctrlKey && !event.metaKey) {\n      handleClose(event, reason);\n    }\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n\n    if (inputValue === '') {\n      handleClose(event, 'toggleInput');\n    }\n\n    let nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValueState('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n\n  const handleKeyDown = other => event => {\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    } // Wait until IME is settled.\n\n\n    if (event.which !== 229) {\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            const option = filteredOptions[highlightedIndexRef.current];\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false; // Avoid early form validation, let the end-users continue filling the form.\n\n            event.preventDefault();\n\n            if (disabled) {\n              return;\n            }\n\n            selectNewValue(event, option, 'selectOption'); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'createOption', 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && !readOnly && inputValue === '' && value.length > 0) {\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n\n          break;\n\n        default:\n      }\n    }\n  };\n\n  const handleFocus = event => {\n    setFocused(true);\n\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE11\n    if (listboxRef.current !== null && listboxRef.current.parentElement.contains(document.activeElement)) {\n      inputRef.current.focus();\n      return;\n    }\n\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event, 'blur');\n  };\n\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  const handleOptionMouseOver = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n\n  const handleOptionTouchStart = () => {\n    isTouch.current = true;\n  };\n\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'selectOption');\n    isTouch.current = false;\n  };\n\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'removeOption', {\n      option: value[index]\n    });\n  };\n\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  const handleMouseDown = event => {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n\n  const handleClick = () => {\n    inputRef.current.focus();\n\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  const handleInputMouseDown = event => {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(`MUI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n\n          indexBy.set(group, true);\n        }\n\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  if (disabledProp && focused) {\n    handleBlur();\n  }\n\n  return {\n    getRootProps: (other = {}) => _extends({\n      'aria-owns': listboxAvailable ? `${id}-listbox` : null\n    }, other, {\n      onKeyDown: handleKeyDown(other),\n      onMouseDown: handleMouseDown,\n      onClick: handleClick\n    }),\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperativeley so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': listboxAvailable ? `${id}-listbox` : undefined,\n      'aria-expanded': listboxAvailable,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false',\n      role: 'combobox'\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: ({\n      index\n    }) => _extends({\n      key: index,\n      'data-tag-index': index,\n      tabIndex: -1\n    }, !readOnly && {\n      onDelete: handleTagDelete(index)\n    }),\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-listbox`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: ({\n      index,\n      option\n    }) => {\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && isOptionEqualToValue(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: getOptionLabel(option),\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getAutocompleteUtilityClass(slot) {\n  return generateUtilityClass('MuiAutocomplete', slot);\n}\nconst autocompleteClasses = generateUtilityClasses('MuiAutocomplete', ['root', 'fullWidth', 'focused', 'focusVisible', 'tag', 'tagSizeSmall', 'tagSizeMedium', 'hasPopupIcon', 'hasClearIcon', 'inputRoot', 'input', 'inputFocused', 'endAdornment', 'clearIndicator', 'popupIndicator', 'popupIndicatorOpen', 'popper', 'popperDisablePortal', 'paper', 'listbox', 'loading', 'noOptions', 'option', 'groupLabel', 'groupUl']);\nexport default autocompleteClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _ClearIcon, _ArrowDropDownIcon;\n\nconst _excluded = [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"className\", \"clearIcon\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeText\", \"componentsProps\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"isOptionEqualToValue\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"readOnly\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useAutocomplete, createFilterOptions } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport inputClasses from '../Input/inputClasses';\nimport inputBaseClasses from '../InputBase/inputBaseClasses';\nimport outlinedInputClasses from '../OutlinedInput/outlinedInputClasses';\nimport filledInputClasses from '../FilledInput/filledInputClasses';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused,\n    popupOpen,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', `tagSize${capitalize(size)}`],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\n\nconst AutocompleteRoot = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      fullWidth,\n      hasClearIcon,\n      hasPopupIcon,\n      inputFocused,\n      size\n    } = ownerState;\n    return [{\n      [`& .${autocompleteClasses.tag}`]: styles.tag\n    }, {\n      [`& .${autocompleteClasses.tag}`]: styles[`tagSize${capitalize(size)}`]\n    }, {\n      [`& .${autocompleteClasses.inputRoot}`]: styles.inputRoot\n    }, {\n      [`& .${autocompleteClasses.input}`]: styles.input\n    }, {\n      [`& .${autocompleteClasses.input}`]: inputFocused && styles.inputFocused\n    }, styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon];\n  }\n})(({\n  ownerState\n}) => _extends({\n  [`&.${autocompleteClasses.focused} .${autocompleteClasses.clearIndicator}`]: {\n    visibility: 'visible'\n  },\n\n  /* Avoid double tap issue on iOS */\n  '@media (pointer: fine)': {\n    [`&:hover .${autocompleteClasses.clearIndicator}`]: {\n      visibility: 'visible'\n    }\n  }\n}, ownerState.fullWidth && {\n  width: '100%'\n}, {\n  [`& .${autocompleteClasses.tag}`]: _extends({\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)'\n  }, ownerState.size === 'small' && {\n    margin: 2,\n    maxWidth: 'calc(100% - 4px)'\n  }),\n  [`& .${autocompleteClasses.inputRoot}`]: {\n    flexWrap: 'wrap',\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      width: 0,\n      minWidth: 30\n    }\n  },\n  [`& .${inputClasses.root}`]: {\n    paddingBottom: 1,\n    '& .MuiInput-input': {\n      padding: '4px 4px 4px 0px'\n    }\n  },\n  [`& .${inputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${inputClasses.input}`]: {\n      padding: '2px 4px 3px 0'\n    }\n  },\n  [`& .${outlinedInputClasses.root}`]: {\n    padding: 9,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '7.5px 4px 7.5px 6px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${outlinedInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    padding: 6,\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '2.5px 4px 2.5px 6px'\n    }\n  },\n  [`& .${filledInputClasses.root}`]: {\n    paddingTop: 19,\n    paddingLeft: 8,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${filledInputClasses.input}`]: {\n      padding: '7px 4px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    paddingBottom: 1,\n    [`& .${filledInputClasses.input}`]: {\n      padding: '2.5px 4px'\n    }\n  },\n  [`& .${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 8\n  },\n  [`& .${autocompleteClasses.input}`]: _extends({\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0\n  }, ownerState.inputFocused && {\n    opacity: 1\n  })\n}));\nconst AutocompleteEndAdornment = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: (props, styles) => styles.endAdornment\n})({\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: 'calc(50% - 14px)' // Center vertically\n\n});\nconst AutocompleteClearIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: (props, styles) => styles.clearIndicator\n})({\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nconst AutocompletePopupIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: ({\n    ownerState\n  }, styles) => _extends({}, styles.popupIndicator, ownerState.popupOpen && styles.popupIndicatorOpen)\n})(({\n  ownerState\n}) => _extends({\n  padding: 2,\n  marginRight: -2\n}, ownerState.popupOpen && {\n  transform: 'rotate(180deg)'\n}));\nconst AutocompletePopper = styled(Popper, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${autocompleteClasses.option}`]: styles.option\n    }, styles.popper, ownerState.disablePortal && styles.popperDisablePortal];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  zIndex: (theme.vars || theme).zIndex.modal\n}, ownerState.disablePortal && {\n  position: 'absolute'\n}));\nconst AutocompletePaper = styled(Paper, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => _extends({}, theme.typography.body1, {\n  overflow: 'auto'\n}));\nconst AutocompleteLoading = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: (props, styles) => styles.loading\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteNoOptions = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: (props, styles) => styles.noOptions\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteListbox = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: (props, styles) => styles.listbox\n})(({\n  theme\n}) => ({\n  listStyle: 'none',\n  margin: 0,\n  padding: '8px 0',\n  maxHeight: '40vh',\n  overflow: 'auto',\n  [`& .${autocompleteClasses.option}`]: {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: 'auto'\n    },\n    [`&.${autocompleteClasses.focused}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&[aria-disabled=\"true\"]': {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`&.${autocompleteClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    '&[aria-selected=\"true\"]': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n      [`&.${autocompleteClasses.focused}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: (theme.vars || theme).palette.action.selected\n        }\n      },\n      [`&.${autocompleteClasses.focusVisible}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n      }\n    }\n  }\n}));\nconst AutocompleteGroupLabel = styled(ListSubheader, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: (props, styles) => styles.groupLabel\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  top: -8\n}));\nconst AutocompleteGroupUl = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: (props, styles) => styles.groupUl\n})({\n  padding: 0,\n  [`& .${autocompleteClasses.option}`]: {\n    paddingLeft: 24\n  }\n});\nexport { createFilterOptions };\nconst Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  var _componentsProps$clea, _componentsProps$pape;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    ChipProps,\n    className,\n    clearIcon = _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n      fontSize: \"small\"\n    })),\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    clearText = 'Clear',\n    closeText = 'Close',\n    componentsProps = {},\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    disablePortal = false,\n    filterSelectedOptions = false,\n    forcePopupIcon = 'auto',\n    freeSolo = false,\n    fullWidth = false,\n    getLimitTagsText = more => `+${more}`,\n    getOptionLabel = option => {\n      var _option$label;\n\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    includeInputInList = false,\n    limitTags = -1,\n    ListboxComponent = 'ul',\n    ListboxProps,\n    loading = false,\n    loadingText = 'Loading…',\n    multiple = false,\n    noOptionsText = 'No options',\n    openOnFocus = false,\n    openText = 'Open',\n    PaperComponent = Paper,\n    PopperComponent = Popper,\n    popupIcon = _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})),\n    readOnly = false,\n    renderGroup: renderGroupProp,\n    renderInput,\n    renderOption: renderOptionProp,\n    renderTags,\n    selectOnFocus = !props.freeSolo,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    id,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions\n  } = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  }));\n  const hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false; // If you modify this, make sure to keep the `AutocompleteOwnerState` type in sync.\n\n  const ownerState = _extends({}, props, {\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let startAdornment;\n\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => _extends({\n      className: clsx(classes.tag),\n      disabled\n    }, getTagProps(params));\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps, ownerState);\n    } else {\n      startAdornment = value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n        label: getOptionLabel(option),\n        size: size\n      }, getCustomizedTagProps({\n        index\n      }), ChipProps)));\n    }\n  }\n\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    const more = startAdornment.length - limitTags;\n\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n\n  const defaultRenderGroup = params => /*#__PURE__*/_jsxs(\"li\", {\n    children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n      className: classes.groupLabel,\n      ownerState: ownerState,\n      component: \"div\",\n      children: params.group\n    }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n      className: classes.groupUl,\n      ownerState: ownerState,\n      children: params.children\n    })]\n  }, params.key);\n\n  const renderGroup = renderGroupProp || defaultRenderGroup;\n\n  const defaultRenderOption = (props2, option) => /*#__PURE__*/_jsx(\"li\", _extends({}, props2, {\n    children: getOptionLabel(option)\n  }));\n\n  const renderOption = renderOptionProp || defaultRenderOption;\n\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    return renderOption(_extends({}, optionProps, {\n      className: classes.option\n    }), option, {\n      selected: optionProps['aria-selected'],\n      inputValue\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, _extends({\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, getRootProps(other), {\n      children: renderInput({\n        id,\n        disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: _extends({\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment\n        }, (hasClearIcon || hasPopupIcon) && {\n          endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n            className: classes.endAdornment,\n            ownerState: ownerState,\n            children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, _extends({}, getClearProps(), {\n              \"aria-label\": clearText,\n              title: clearText,\n              ownerState: ownerState\n            }, componentsProps.clearIndicator, {\n              className: clsx(classes.clearIndicator, (_componentsProps$clea = componentsProps.clearIndicator) == null ? void 0 : _componentsProps$clea.className),\n              children: clearIcon\n            })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, _extends({}, getPopupIndicatorProps(), {\n              disabled: disabled,\n              \"aria-label\": popupOpen ? closeText : openText,\n              title: popupOpen ? closeText : openText,\n              className: clsx(classes.popupIndicator),\n              ownerState: ownerState,\n              children: popupIcon\n            })) : null]\n          })\n        }),\n        inputProps: _extends({\n          className: clsx(classes.input),\n          disabled,\n          readOnly\n        }, getInputProps())\n      })\n    })), popupOpen && anchorEl ? /*#__PURE__*/_jsx(AutocompletePopper, {\n      as: PopperComponent,\n      className: clsx(classes.popper),\n      disablePortal: disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      ownerState: ownerState,\n      role: \"presentation\",\n      anchorEl: anchorEl,\n      open: true,\n      children: /*#__PURE__*/_jsxs(AutocompletePaper, _extends({\n        ownerState: ownerState,\n        as: PaperComponent\n      }, componentsProps.paper, {\n        className: clsx(classes.paper, (_componentsProps$pape = componentsProps.paper) == null ? void 0 : _componentsProps$pape.className),\n        children: [loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(AutocompleteLoading, {\n          className: classes.loading,\n          ownerState: ownerState,\n          children: loadingText\n        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n          className: classes.noOptions,\n          ownerState: ownerState,\n          role: \"presentation\",\n          onMouseDown: event => {\n            // Prevent input blur when interacting with the \"no options\" content\n            event.preventDefault();\n          },\n          children: noOptionsText\n        }) : null, groupedOptions.length > 0 ? /*#__PURE__*/_jsx(AutocompleteListbox, _extends({\n          as: ListboxComponent,\n          className: classes.listbox,\n          ownerState: ownerState\n        }, getListboxProps(), ListboxProps, {\n          children: groupedOptions.map((option, index) => {\n            if (groupBy) {\n              return renderGroup({\n                key: option.key,\n                group: option.group,\n                children: option.options.map((option2, index2) => renderListOption(option2, option.index + index2))\n              });\n            }\n\n            return renderListOption(option, index);\n          })\n        })) : null]\n      }))\n    }) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n\n  /**\n   * Props applied to the [`Chip`](/material-ui/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume their search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object\n  }),\n\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.defaultValue !== undefined && !Array.isArray(props.defaultValue)) {\n      return new Error(['MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.', `However, ${props.defaultValue} was provided.`].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * A function that determines the filtered options to be rendered on search.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * If used in free solo mode, it must accept both the type of the options and a string.\n   *\n   * @param {T} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   */\n  ListboxComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n\n  /**\n   * If `true`, the component is in a loading state.\n   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, e.g. `options` are empty).\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\n   */\n  onHighlightChange: PropTypes.func,\n\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n\n  /**\n   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Render the group.\n   *\n   * @param {AutocompleteRenderGroupParams} params The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.', `However, ${props.value} was provided.`].join('\\n'));\n    }\n\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Chip from '@mui/material/Chip';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GridFilterInputMultipleValue(props) {\n  const {\n    item,\n    applyValue,\n    type,\n    apiRef,\n    focusElementRef,\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const [filterValueState, setFilterValueState] = React.useState(item.value || []);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  React.useEffect(() => {\n    var _item$value;\n\n    const itemValue = (_item$value = item.value) != null ? _item$value : [];\n    setFilterValueState(itemValue.map(String));\n  }, [item.value]);\n  const handleChange = React.useCallback((event, value) => {\n    setFilterValueState(value.map(String));\n    applyValue(_extends({}, item, {\n      value: [...value]\n    }));\n  }, [applyValue, item]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    freeSolo: true,\n    limitTags: 1,\n    options: [],\n    filterOptions: (options, params) => {\n      const {\n        inputValue\n      } = params;\n      return inputValue == null || inputValue === '' ? [] : [inputValue];\n    },\n    id: id,\n    value: filterValueState,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: option\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => {\n      var _rootProps$components;\n\n      return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({}, params, {\n        label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n        placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n        InputLabelProps: _extends({}, params.InputLabelProps, {\n          shrink: true\n        }),\n        inputRef: focusElementRef,\n        type: type || 'text'\n      }, TextFieldProps, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTextField));\n    }\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['number', 'text'])\n} : void 0;\nexport { GridFilterInputMultipleValue };","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { escapeRegExp } from '../utils/utils';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nexport const getGridStringQuickFilterFn = value => {\n  if (!value) {\n    return null;\n  }\n\n  const filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return ({\n    value: columnValue\n  }) => {\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n};\nexport const getGridStringOperators = (disableTrim = false) => [{\n  value: 'contains',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(escapeRegExp(filterItemValue), 'i');\n    return ({\n      value\n    }) => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'equals',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return ({\n      value\n    }) => {\n      return value != null ? collator.compare(filterItemValue, value.toString()) === 0 : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'startsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`^${escapeRegExp(filterItemValue)}.*$`, 'i');\n    return ({\n      value\n    }) => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'endsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`.*${escapeRegExp(filterItemValue)}$`, 'i');\n    return ({\n      value\n    }) => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value === '' || value == null;\n    };\n  }\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value !== '' && value != null;\n    };\n  }\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(val => val.trim());\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return ({\n      value\n    }) => value != null ? filterItemValue.some(filterValue => {\n      return collator.compare(filterValue, value.toString() || '') === 0;\n    }) : false;\n  },\n  InputComponent: GridFilterInputMultipleValue\n}];","import { renderEditInputCell } from '../components/cell/GridEditInputCell';\nimport { gridStringOrNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridStringOperators, getGridStringQuickFilterFn } from './gridStringOperators';\nexport const GRID_STRING_COL_DEF = {\n  width: 100,\n  minWidth: 50,\n  maxWidth: Infinity,\n  hide: false,\n  hideable: true,\n  sortable: true,\n  resizable: true,\n  filterable: true,\n  groupable: true,\n  pinnable: true,\n  editable: false,\n  sortComparator: gridStringOrNumberComparator,\n  type: 'string',\n  align: 'left',\n  filterOperators: getGridStringOperators(),\n  renderEditCell: renderEditInputCell,\n  getApplyQuickFilterFn: getGridStringQuickFilterFn\n};","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nimport { wrapWithWarningOnCall } from '../utils/warning';\n\nconst parseNumericValue = value => {\n  if (value == null) {\n    return null;\n  }\n\n  return Number(value);\n};\n\nexport const getGridNumericQuickFilterFn = value => {\n  if (value == null || Number.isNaN(value) || value === '') {\n    return null;\n  }\n\n  return ({\n    value: columnValue\n  }) => {\n    return parseNumericValue(columnValue) === parseNumericValue(value);\n  };\n};\nexport const getGridNumericOperators = () => [{\n  label: '=',\n  value: '=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      return parseNumericValue(value) === filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '!=',\n  value: '!=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      return parseNumericValue(value) !== filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '>',\n  value: '>',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      if (value == null) {\n        return false;\n      }\n\n      return parseNumericValue(value) > filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '>=',\n  value: '>=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      if (value == null) {\n        return false;\n      }\n\n      return parseNumericValue(value) >= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '<',\n  value: '<',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      if (value == null) {\n        return false;\n      }\n\n      return parseNumericValue(value) < filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '<=',\n  value: '<=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      if (value == null) {\n        return false;\n      }\n\n      return parseNumericValue(value) <= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value == null;\n    };\n  }\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value != null;\n    };\n  }\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      return value != null && filterItem.value.includes(Number(value));\n    };\n  },\n  InputComponent: GridFilterInputMultipleValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}];\n/**\n * @deprecated Use `getGridNumericOperators` instead.\n */\n\nexport const getGridNumericColumnOperators = wrapWithWarningOnCall(getGridNumericOperators, ['MUI: The method getGridNumericColumnOperators is deprecated and will be removed in the next major version.', 'Use getGridNumericOperators instead.']);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { isNumber } from '../utils/utils';\nimport { getGridNumericOperators, getGridNumericQuickFilterFn } from './gridNumericOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nexport const GRID_NUMERIC_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'number',\n  align: 'right',\n  headerAlign: 'right',\n  sortComparator: gridNumberComparator,\n  valueParser: value => value === '' ? null : Number(value),\n  valueFormatter: ({\n    value\n  }) => isNumber(value) ? value.toLocaleString() : value || '',\n  filterOperators: getGridNumericOperators(),\n  getApplyQuickFilterFn: getGridNumericQuickFilterFn\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"InputProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { GridLoadIcon } from '../../icons';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const SUBMIT_FILTER_DATE_STROKE_TIME = 500;\n\nfunction GridFilterInputDate(props) {\n  var _item$value, _rootProps$components;\n\n  const {\n    item,\n    applyValue,\n    type,\n    apiRef,\n    focusElementRef,\n    InputProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const filterTimeout = React.useRef();\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    clearTimeout(filterTimeout.current);\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.current = setTimeout(() => {\n      applyValue(_extends({}, item, {\n        value\n      }));\n      setIsApplying(false);\n    }, SUBMIT_FILTER_DATE_STROKE_TIME);\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(filterTimeout.current);\n    };\n  }, []);\n  React.useEffect(() => {\n    var _item$value2;\n\n    const itemValue = (_item$value2 = item.value) != null ? _item$value2 : '';\n    setFilterValueState(String(itemValue));\n  }, [item.value]);\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    InputProps: _extends({}, applying ? {\n      endAdornment: /*#__PURE__*/_jsx(GridLoadIcon, {})\n    } : {}, InputProps, {\n      inputProps: _extends({\n        max: type === 'datetime-local' ? '9999-12-31T23:59' : '9999-12-31'\n      }, InputProps == null ? void 0 : InputProps.inputProps)\n    })\n  }, other, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTextField));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputDate.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputDate };","import { GridFilterInputDate } from '../components/panel/filterPanel/GridFilterInputDate';\nconst dateRegex = /(\\d+)-(\\d+)-(\\d+)/;\nconst dateTimeRegex = /(\\d+)-(\\d+)-(\\d+)T(\\d+):(\\d+)/;\n\nfunction buildApplyFilterFn(filterItem, compareFn, showTime, keepHours) {\n  if (!filterItem.value) {\n    return null;\n  }\n\n  const [year, month, day, hour, minute] = filterItem.value.match(showTime ? dateTimeRegex : dateRegex).slice(1).map(Number);\n  const time = new Date(year, month - 1, day, hour || 0, minute || 0).getTime();\n  return ({\n    value\n  }) => {\n    if (!value) {\n      return false;\n    }\n\n    const valueAsDate = value instanceof Date ? value : new Date(value.toString());\n\n    if (keepHours) {\n      return compareFn(valueAsDate.getTime(), time);\n    } // Make a copy of the date to not reset the hours in the original object\n\n\n    const dateCopy = value instanceof Date ? new Date(valueAsDate) : valueAsDate;\n    const timeToCompare = dateCopy.setHours(showTime ? valueAsDate.getHours() : 0, showTime ? valueAsDate.getMinutes() : 0, 0, 0);\n    return compareFn(timeToCompare, time);\n  };\n}\n\nexport const getGridDateOperators = showTime => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 === value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 !== value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'after',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 > value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrAfter',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 >= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'before',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 < value2, showTime, !showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrBefore',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 <= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value == null;\n    };\n  }\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value != null;\n    };\n  }\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"getValue\", \"inputProps\", \"isValidating\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport InputBase from '@mui/material/InputBase';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridEditDateCell(props) {\n  const {\n    id,\n    value: valueProp,\n    field,\n    colDef,\n    hasFocus,\n    inputProps,\n    onValueChange\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const isDateTime = colDef.type === 'dateTime';\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const valueTransformed = React.useMemo(() => {\n    let parsedDate;\n\n    if (valueProp == null) {\n      parsedDate = null;\n    } else if (valueProp instanceof Date) {\n      parsedDate = valueProp;\n    } else {\n      parsedDate = new Date((valueProp != null ? valueProp : '').toString());\n    }\n\n    let formattedDate;\n\n    if (parsedDate == null || Number.isNaN(parsedDate.getTime())) {\n      formattedDate = '';\n    } else {\n      const localDate = new Date(parsedDate.getTime() - parsedDate.getTimezoneOffset() * 60 * 1000);\n      formattedDate = localDate.toISOString().substr(0, isDateTime ? 16 : 10);\n    }\n\n    return {\n      parsed: parsedDate,\n      formatted: formattedDate\n    };\n  }, [valueProp, isDateTime]);\n  const [valueState, setValueState] = React.useState(valueTransformed);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newFormattedDate = event.target.value;\n    let newParsedDate;\n\n    if (newFormattedDate === '') {\n      newParsedDate = null;\n    } else {\n      const [date, time] = newFormattedDate.split('T');\n      const [year, month, day] = date.split('-');\n      newParsedDate = new Date();\n      newParsedDate.setFullYear(year, Number(month) - 1, day);\n      newParsedDate.setHours(0, 0, 0, 0);\n\n      if (time) {\n        const [hours, minutes] = time.split(':');\n        newParsedDate.setHours(Number(hours), Number(minutes), 0, 0);\n      }\n    }\n\n    if (onValueChange) {\n      await onValueChange(event, newParsedDate);\n    }\n\n    setValueState({\n      parsed: newParsedDate,\n      formatted: newFormattedDate\n    });\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newParsedDate\n    }, event);\n  }, [apiRef, field, id, onValueChange]);\n  React.useEffect(() => {\n    setValueState(state => {\n      var _valueTransformed$par, _state$parsed;\n\n      if (valueTransformed.parsed !== state.parsed && ((_valueTransformed$par = valueTransformed.parsed) == null ? void 0 : _valueTransformed$par.getTime()) !== ((_state$parsed = state.parsed) == null ? void 0 : _state$parsed.getTime())) {\n        return valueTransformed;\n      }\n\n      return state;\n    });\n  }, [valueTransformed]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(InputBase, _extends({\n    inputRef: inputRef,\n    fullWidth: true,\n    className: classes.root,\n    type: isDateTime ? 'datetime-local' : 'date',\n    inputProps: _extends({\n      max: isDateTime ? '9999-12-31T23:59' : '9999-12-31'\n    }, inputProps),\n    value: valueState.formatted,\n    onChange: handleChange\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridEditDateCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.object.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n\n  /**\n   * The cell value, but if the column has valueGetter, use getValue.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditDateCell };\nexport const renderEditDateCell = params => /*#__PURE__*/_jsx(GridEditDateCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridDateComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridDateOperators } from './gridDateOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditDateCell } from '../components/cell/GridEditDateCell';\nexport function gridDateFormatter({\n  value\n}) {\n  if (value instanceof Date) {\n    return value.toLocaleDateString();\n  }\n\n  return value != null ? value : '';\n}\nexport function gridDateTimeFormatter({\n  value\n}) {\n  if (value instanceof Date) {\n    return value.toLocaleString();\n  }\n\n  return value != null ? value : '';\n}\nexport const GRID_DATE_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'date',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateFormatter,\n  filterOperators: getGridDateOperators(),\n  renderEditCell: renderEditDateCell,\n  getApplyQuickFilterFn: undefined\n});\nexport const GRID_DATETIME_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'dateTime',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateTimeFormatter,\n  filterOperators: getGridDateOperators(true),\n  renderEditCell: renderEditDateCell,\n  getApplyQuickFilterFn: undefined\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"hasFocus\", \"tabIndex\", \"getValue\"];\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['booleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nexport const GridBooleanCell = /*#__PURE__*/React.memo(props => {\n  const {\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const Icon = React.useMemo(() => value ? rootProps.components.BooleanCellTrueIcon : rootProps.components.BooleanCellFalseIcon, [rootProps.components.BooleanCellFalseIcon, rootProps.components.BooleanCellTrueIcon, value]);\n  return /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: classes.root,\n    titleAccess: apiRef.current.getLocaleText(value ? 'booleanCellTrueLabel' : 'booleanCellFalseLabel'),\n    \"data-value\": Boolean(value)\n  }, other));\n});\nexport const renderBooleanCell = params => {\n  if (params.rowNode.isAutoGenerated) {\n    return '';\n  }\n\n  return /*#__PURE__*/_jsx(GridBooleanCell, _extends({}, params));\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"getValue\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editBooleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridEditBooleanCell(props) {\n  var _rootProps$components;\n\n  const {\n    id: idProp,\n    value,\n    field,\n    className,\n    hasFocus,\n    onValueChange\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef(null);\n  const id = useId();\n  const [valueState, setValueState] = React.useState(value);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.checked;\n\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n\n    setValueState(newValue);\n    await apiRef.current.setEditCellValue({\n      id: idProp,\n      field,\n      value: newValue\n    }, event);\n  }, [apiRef, field, idProp, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(\"label\", _extends({\n    htmlFor: id,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsx(rootProps.components.BaseCheckbox, _extends({\n      id: id,\n      inputRef: inputRef,\n      checked: Boolean(valueState),\n      onChange: handleChange,\n      size: \"small\"\n    }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseCheckbox))\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridEditBooleanCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.object.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n\n  /**\n   * The cell value, but if the column has valueGetter, use getValue.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditBooleanCell };\nexport const renderEditBooleanCell = params => /*#__PURE__*/_jsx(GridEditBooleanCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"apiRef\", \"focusElementRef\"];\nimport * as React from 'react';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridFilterInputBoolean(props) {\n  var _rootProps$components, _baseSelectProps$nati, _rootProps$components2, _rootProps$components3;\n\n  const {\n    item,\n    applyValue,\n    apiRef,\n    focusElementRef\n  } = props,\n        others = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [filterValueState, setFilterValueState] = React.useState(item.value || '');\n  const rootProps = useGridRootProps();\n  const baseSelectProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const OptionComponent = isSelectNative ? 'option' : MenuItem;\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    setFilterValueState(value);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    setFilterValueState(item.value || '');\n  }, [item.value]);\n  return /*#__PURE__*/_jsxs(rootProps.components.BaseTextField, _extends({\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    select: true,\n    variant: \"standard\",\n    SelectProps: _extends({\n      native: isSelectNative,\n      displayEmpty: true\n    }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect),\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, others, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseTextField, {\n    children: [/*#__PURE__*/_jsx(OptionComponent, {\n      value: \"\",\n      children: apiRef.current.getLocaleText('filterValueAny')\n    }), /*#__PURE__*/_jsx(OptionComponent, {\n      value: \"true\",\n      children: apiRef.current.getLocaleText('filterValueTrue')\n    }), /*#__PURE__*/_jsx(OptionComponent, {\n      value: \"false\",\n      children: apiRef.current.getLocaleText('filterValueFalse')\n    })]\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderBooleanCell } from '../components/cell/GridBooleanCell';\nimport { renderEditBooleanCell } from '../components/cell/GridEditBooleanCell';\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridBooleanOperators } from './gridBooleanOperators';\n\nfunction gridBooleanFormatter({\n  value,\n  api\n}) {\n  return value ? api.getLocaleText('booleanCellTrueLabel') : api.getLocaleText('booleanCellFalseLabel');\n}\n\nexport const GRID_BOOLEAN_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'boolean',\n  align: 'center',\n  headerAlign: 'center',\n  renderCell: renderBooleanCell,\n  renderEditCell: renderEditBooleanCell,\n  sortComparator: gridNumberComparator,\n  valueFormatter: gridBooleanFormatter,\n  filterOperators: getGridBooleanOperators(),\n  getApplyQuickFilterFn: undefined\n});","// TODO v6: rename to GridEditingState\nvar GridEditModes;\n\n(function (GridEditModes) {\n  GridEditModes[\"Cell\"] = \"cell\";\n  GridEditModes[\"Row\"] = \"row\";\n})(GridEditModes || (GridEditModes = {}));\n\nvar GridCellModes;\n\n(function (GridCellModes) {\n  GridCellModes[\"Edit\"] = \"edit\";\n  GridCellModes[\"View\"] = \"view\";\n})(GridCellModes || (GridCellModes = {}));\n\nvar GridRowModes;\n\n(function (GridRowModes) {\n  GridRowModes[\"Edit\"] = \"edit\";\n  GridRowModes[\"View\"] = \"view\";\n})(GridRowModes || (GridRowModes = {}));\n\nexport { GridEditModes, GridCellModes, GridRowModes };","import { GridFilterInputBoolean } from '../components/panel/filterPanel/GridFilterInputBoolean';\nexport const getGridBooleanOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const valueAsBoolean = filterItem.value === 'true';\n    return ({\n      value\n    }) => {\n      return Boolean(value) === valueAsBoolean;\n    };\n  },\n  InputComponent: GridFilterInputBoolean\n}];","export const isEscapeKey = key => key === 'Escape'; // TODO remove\n\nexport const isEnterKey = key => key === 'Enter'; // TODO remove\n\nexport const isTabKey = key => key === 'Tab'; // TODO remove\n\nexport const isSpaceKey = key => key === ' ';\nexport const isArrowKeys = key => key.indexOf('Arrow') === 0;\nexport const isHomeOrEndKeys = key => key === 'Home' || key === 'End';\nexport const isPageKeys = key => key.indexOf('Page') === 0;\nexport const isDeleteKeys = key => key === 'Delete' || key === 'Backspace'; // Non printable keys have a name, e.g. \"ArrowRight\", see the whole list:\n// https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n\nexport const isPrintableKey = key => key.length === 1;\nexport const GRID_MULTIPLE_SELECTION_KEYS = ['Meta', 'Control', 'Shift'];\nexport const GRID_CELL_EXIT_EDIT_MODE_KEYS = ['Enter', 'Escape', 'Tab'];\nexport const GRID_CELL_EDIT_COMMIT_KEYS = ['Enter', 'Tab'];\nexport const isMultipleKey = key => GRID_MULTIPLE_SELECTION_KEYS.indexOf(key) > -1;\nexport const isCellEnterEditModeKeys = key => isEnterKey(key) || isDeleteKeys(key) || isPrintableKey(key);\nexport const isCellExitEditModeKeys = key => GRID_CELL_EXIT_EDIT_MODE_KEYS.indexOf(key) > -1;\nexport const isCellEditCommitKeys = key => GRID_CELL_EDIT_COMMIT_KEYS.indexOf(key) > -1;\nexport const isNavigationKey = key => isHomeOrEndKeys(key) || isArrowKeys(key) || isPageKeys(key) || isSpaceKey(key);\nexport const isKeyboardEvent = event => !!event.key;\nexport const isHideMenuKey = key => isTabKey(key) || isEscapeKey(key);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"getValue\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport MenuItem from '@mui/material/MenuItem';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridEditModes } from '../../models/gridEditRowModel';\nimport { getValueFromValueOptions } from '../panel/filterPanel/filterPanelUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst renderSingleSelectOptions = (option, OptionComponent) => {\n  const isOptionTypeObject = typeof option === 'object';\n  const key = isOptionTypeObject ? option.value : option;\n  const value = isOptionTypeObject ? option.value : option;\n  const content = isOptionTypeObject ? option.label : option;\n  return /*#__PURE__*/_jsx(OptionComponent, {\n    value: value,\n    children: content\n  }, key);\n};\n\nfunction GridEditSingleSelectCell(props) {\n  var _rootProps$components, _baseSelectProps$nati, _rootProps$components2;\n\n  const {\n    id,\n    value,\n    api,\n    field,\n    row,\n    colDef,\n    hasFocus,\n    error,\n    onValueChange\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const ref = React.useRef();\n  const inputRef = React.useRef();\n  const rootProps = useGridRootProps();\n  const [open, setOpen] = React.useState(rootProps.editMode === 'cell');\n  const baseSelectProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : false;\n  let valueOptionsFormatted;\n\n  if (typeof colDef.valueOptions === 'function') {\n    valueOptionsFormatted = colDef.valueOptions({\n      id,\n      row,\n      field\n    });\n  } else {\n    valueOptionsFormatted = colDef.valueOptions;\n  }\n\n  if (colDef.valueFormatter) {\n    valueOptionsFormatted = valueOptionsFormatted.map(option => {\n      if (typeof option === 'object') {\n        return option;\n      }\n\n      const params = {\n        field,\n        api,\n        value: option\n      };\n      return {\n        value: option,\n        label: String(colDef.valueFormatter(params))\n      };\n    });\n  }\n\n  const handleChange = async event => {\n    var _rootProps$experiment;\n\n    setOpen(false);\n    const target = event.target; // NativeSelect casts the value to a string.\n\n    const formattedTargetValue = getValueFromValueOptions(target.value, valueOptionsFormatted);\n\n    if (onValueChange) {\n      await onValueChange(event, formattedTargetValue);\n    }\n\n    const isValid = await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: formattedTargetValue\n    }, event);\n\n    if ((_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.newEditingApi) {\n      return;\n    } // We use isValid === false because the default return is undefined which evaluates to true with !isValid\n\n\n    if (rootProps.editMode === GridEditModes.Row || isValid === false) {\n      return;\n    }\n\n    const canCommit = await Promise.resolve(apiRef.current.commitCellChange({\n      id,\n      field\n    }, event));\n\n    if (canCommit) {\n      apiRef.current.setCellMode(id, field, 'view');\n\n      if (event.key) {\n        // TODO v6: remove once we stop ignoring events fired from portals\n        const params = apiRef.current.getCellParams(id, field);\n        apiRef.current.publishEvent('cellNavigationKeyDown', params, event);\n      }\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (rootProps.editMode === GridEditModes.Row) {\n      setOpen(false);\n      return;\n    }\n\n    if (reason === 'backdropClick' || isEscapeKey(event.key)) {\n      var _rootProps$experiment2;\n\n      if ((_rootProps$experiment2 = rootProps.experimentalFeatures) != null && _rootProps$experiment2.newEditingApi) {\n        apiRef.current.stopCellEditMode({\n          id,\n          field,\n          ignoreModifications: true\n        });\n      } else {\n        apiRef.current.setCellMode(id, field, 'view');\n      }\n    }\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    value: value,\n    onChange: handleChange,\n    open: open,\n    onOpen: handleOpen,\n    MenuProps: {\n      onClose: handleClose\n    },\n    error: error,\n    native: isSelectNative,\n    fullWidth: true\n  }, other, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect, {\n    children: valueOptionsFormatted.map(valueOptions => renderSingleSelectOptions(valueOptions, isSelectNative ? 'option' : MenuItem))\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridEditSingleSelectCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {SelectChangeEvent<any>} event The event source of the callback.\n   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.object.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n\n  /**\n   * The cell value, but if the column has valueGetter, use getValue.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditSingleSelectCell };\nexport const renderEditSingleSelectCell = params => /*#__PURE__*/_jsx(GridEditSingleSelectCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getValueFromValueOptions } from './filterPanelUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst renderSingleSelectOptions = ({\n  valueOptions,\n  valueFormatter,\n  field\n}, api, OptionComponent) => {\n  const iterableColumnValues = typeof valueOptions === 'function' ? ['', ...valueOptions({\n    field\n  })] : ['', ...(valueOptions || [])];\n  return iterableColumnValues.map(option => {\n    const isOptionTypeObject = typeof option === 'object';\n    const key = isOptionTypeObject ? option.value : option;\n    const value = isOptionTypeObject ? option.value : option;\n    const formattedValue = valueFormatter && option !== '' ? valueFormatter({\n      value: option,\n      field,\n      api\n    }) : option;\n    const content = isOptionTypeObject ? option.label : formattedValue;\n    return /*#__PURE__*/_jsx(OptionComponent, {\n      value: value,\n      children: content\n    }, key);\n  });\n};\n\nfunction GridFilterInputSingleSelect(props) {\n  var _item$value, _rootProps$components, _baseSelectProps$nati, _rootProps$components2, _rootProps$components3;\n\n  const {\n    item,\n    applyValue,\n    type,\n    apiRef,\n    focusElementRef\n  } = props,\n        others = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const baseSelectProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const currentColumn = item.columnField ? apiRef.current.getColumn(item.columnField) : null;\n  const currentValueOptions = React.useMemo(() => {\n    if (currentColumn === null) {\n      return undefined;\n    }\n\n    return typeof currentColumn.valueOptions === 'function' ? currentColumn.valueOptions({\n      field: currentColumn.field\n    }) : currentColumn.valueOptions;\n  }, [currentColumn]);\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value; // NativeSelect casts the value to a string.\n\n    value = getValueFromValueOptions(value, currentValueOptions);\n    setFilterValueState(String(value));\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item, currentValueOptions]);\n  React.useEffect(() => {\n    var _itemValue;\n\n    let itemValue;\n\n    if (currentValueOptions !== undefined) {\n      // sanitize if valueOptions are provided\n      itemValue = getValueFromValueOptions(item.value, currentValueOptions);\n\n      if (itemValue !== item.value) {\n        applyValue(_extends({}, item, {\n          value: itemValue\n        }));\n        return;\n      }\n    } else {\n      itemValue = item.value;\n    }\n\n    itemValue = (_itemValue = itemValue) != null ? _itemValue : '';\n    setFilterValueState(String(itemValue));\n  }, [item, currentValueOptions, applyValue]);\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    select: true,\n    SelectProps: _extends({\n      native: isSelectNative\n    }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect)\n  }, others, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseTextField, {\n    children: renderSingleSelectOptions(apiRef.current.getColumn(item.columnField), apiRef.current, isSelectNative ? 'option' : MenuItem)\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport Chip from '@mui/material/Chip';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { getValueFromOption } from './filterPanelUtils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst isOptionEqualToValue = (option, value) => getValueFromOption(option) === getValueFromOption(value);\n\nconst filter = createFilterOptions();\n\nfunction GridFilterInputMultipleSingleSelect(props) {\n  const {\n    item,\n    applyValue,\n    apiRef,\n    focusElementRef,\n    color,\n    error,\n    helperText,\n    size,\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const resolvedColumn = item.columnField ? apiRef.current.getColumn(item.columnField) : null;\n  const resolvedValueOptions = React.useMemo(() => {\n    if (!(resolvedColumn != null && resolvedColumn.valueOptions)) {\n      return [];\n    }\n\n    if (typeof resolvedColumn.valueOptions === 'function') {\n      return resolvedColumn.valueOptions({\n        field: resolvedColumn.field\n      });\n    }\n\n    return resolvedColumn.valueOptions;\n  }, [resolvedColumn]);\n  const resolvedFormattedValueOptions = React.useMemo(() => {\n    return resolvedValueOptions == null ? void 0 : resolvedValueOptions.map(getValueFromOption);\n  }, [resolvedValueOptions]);\n  const {\n    valueFormatter,\n    field\n  } = apiRef.current.getColumn(item.columnField);\n\n  const filterValueOptionFormatter = option => {\n    if (typeof option === 'object') {\n      return option.label;\n    }\n\n    return valueFormatter && option !== '' ? valueFormatter({\n      value: option,\n      field,\n      api: apiRef.current\n    }) : option;\n  }; // The value is computed from the item.value and used directly\n  // If it was done by a useEffect/useState, the Autocomplete could receive incoherent value and options\n\n\n  const filterValues = React.useMemo(() => {\n    if (!Array.isArray(item.value)) {\n      return [];\n    }\n\n    if (resolvedValueOptions !== undefined) {\n      const itemValueIndexes = item.value.map(element => {\n        // get the index matching between values and valueOptions\n        const formattedElement = getValueFromOption(element);\n        const index = (resolvedFormattedValueOptions == null ? void 0 : resolvedFormattedValueOptions.findIndex(formatedOption => formatedOption === formattedElement)) || 0;\n        return index;\n      });\n      return itemValueIndexes.filter(index => index >= 0).map(index => resolvedValueOptions[index]);\n    }\n\n    return item.value;\n  }, [item.value, resolvedValueOptions, resolvedFormattedValueOptions]);\n  React.useEffect(() => {\n    if (!Array.isArray(item.value) || filterValues.length !== item.value.length) {\n      // update the state if the filter value has been cleaned by the component\n      applyValue(_extends({}, item, {\n        value: filterValues.map(getValueFromOption)\n      }));\n    }\n  }, [item, filterValues, applyValue]);\n  const handleChange = React.useCallback((event, value) => {\n    applyValue(_extends({}, item, {\n      value: [...value.map(getValueFromOption)]\n    }));\n  }, [applyValue, item]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    limitTags: 1,\n    options: resolvedValueOptions,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterOptions: filter,\n    id: id,\n    value: filterValues,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: filterValueOptionFormatter(option)\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => {\n      var _rootProps$components;\n\n      return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({}, params, {\n        label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n        placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n        InputLabelProps: _extends({}, params.InputLabelProps, {\n          shrink: true\n        }),\n        inputRef: focusElementRef,\n        type: \"singleSelect\"\n      }, TextFieldProps, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTextField));\n    }\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['singleSelect'])\n} : void 0;\nexport { GridFilterInputMultipleSingleSelect };","import { GridFilterInputSingleSelect } from '../components/panel/filterPanel/GridFilterInputSingleSelect';\nimport { GridFilterInputMultipleSingleSelect } from '../components/panel/filterPanel/GridFilterInputMultipleSingleSelect';\n\nconst parseObjectValue = value => {\n  if (value == null || typeof value !== 'object') {\n    return value;\n  }\n\n  return value.value;\n};\n\nexport const getGridSingleSelectQuickFilterFn = (value, column, apiRef) => {\n  if (!value) {\n    return null;\n  }\n\n  const {\n    valueOptions,\n    valueFormatter,\n    field\n  } = column;\n  const potentialValues = [parseObjectValue(value).toString()];\n  const iterableColumnValues = typeof valueOptions === 'function' ? valueOptions({\n    field\n  }) : valueOptions || [];\n\n  if (iterableColumnValues) {\n    iterableColumnValues.forEach(option => {\n      // for each valueOption, check if the formatted value\n      let optionValue;\n      let optionLabel;\n\n      if (typeof option === 'object') {\n        optionValue = option.value;\n        optionLabel = option.label;\n      } else {\n        optionValue = option;\n\n        if (valueFormatter) {\n          optionLabel = valueFormatter({\n            value: option,\n            field,\n            api: apiRef.current\n          });\n        } else {\n          optionLabel = option;\n        }\n      }\n\n      if (optionLabel.slice(0, value.length).toLowerCase() === value.toLowerCase()) {\n        if (!potentialValues.includes(optionValue)) {\n          potentialValues.push(optionValue.toString());\n        }\n      }\n    });\n  }\n\n  return ({\n    value: columnValue\n  }) => {\n    return columnValue != null ? potentialValues.includes(parseObjectValue(columnValue).toString()) : false;\n  };\n};\nexport const getGridSingleSelectOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n\n    return ({\n      value\n    }) => parseObjectValue(value) === parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n\n    return ({\n      value\n    }) => parseObjectValue(value) !== parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n\n    const filterItemValues = filterItem.value.map(parseObjectValue);\n    return ({\n      value\n    }) => filterItemValues.includes(parseObjectValue(value));\n  },\n  InputComponent: GridFilterInputMultipleSingleSelect\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditSingleSelectCell } from '../components/cell/GridEditSingleSelectCell';\nimport { getGridSingleSelectOperators, getGridSingleSelectQuickFilterFn } from './gridSingleSelectOperators';\nexport const GRID_SINGLE_SELECT_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'singleSelect',\n  renderEditCell: renderEditSingleSelectCell,\n  filterOperators: getGridSingleSelectOperators(),\n  getApplyQuickFilterFn: getGridSingleSelectQuickFilterFn\n});","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, exactProp, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils'; // TODO: return `EventHandlerName extends `on${infer EventName}` ? Lowercase<EventName> : never` once generatePropTypes runs with TS 4.1\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\n\nfunction clickedRootScrollbar(event, doc) {\n  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;\n}\n\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n *\n * Demos:\n *\n * - [Click away listener](https://mui.com/base/react-click-away-listener/)\n *\n * API:\n *\n * - [ClickAwayListener API](https://mui.com/base/api/click-away-listener/)\n */\nfunction ClickAwayListener(props) {\n  const {\n    children,\n    disableReactTree = false,\n    mouseEvent = 'onClick',\n    onClickAway,\n    touchEvent = 'onTouchEnd'\n  } = props;\n  const movedRef = React.useRef(false);\n  const nodeRef = React.useRef(null);\n  const activatedRef = React.useRef(false);\n  const syntheticEventRef = React.useRef(false);\n  React.useEffect(() => {\n    // Ensure that this component is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n    setTimeout(() => {\n      activatedRef.current = true;\n    }, 0);\n    return () => {\n      activatedRef.current = false;\n    };\n  }, []);\n  const handleRef = useForkRef( // @ts-expect-error TODO upstream fix\n  children.ref, nodeRef); // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviors like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n\n  const handleClickAway = useEventCallback(event => {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false;\n    const doc = ownerDocument(nodeRef.current); // 1. IE11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n\n    if (!activatedRef.current || !nodeRef.current || 'clientX' in event && clickedRootScrollbar(event, doc)) {\n      return;\n    } // Do not act if user performed touchmove\n\n\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n\n    let insideDOM; // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      insideDOM = !doc.documentElement.contains( // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target) || nodeRef.current.contains( // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target);\n    }\n\n    if (!insideDOM && (disableReactTree || !insideReactTree)) {\n      onClickAway(event);\n    }\n  }); // Keep track of mouse/touch events that bubbled up through the portal.\n\n  const createHandleSynthetic = handlerName => event => {\n    syntheticEventRef.current = true;\n    const childrenPropsHandler = children.props[handlerName];\n\n    if (childrenPropsHandler) {\n      childrenPropsHandler(event);\n    }\n  };\n\n  const childrenProps = {\n    ref: handleRef\n  };\n\n  if (touchEvent !== false) {\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\n  }\n\n  React.useEffect(() => {\n    if (touchEvent !== false) {\n      const mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      const doc = ownerDocument(nodeRef.current);\n\n      const handleTouchMove = () => {\n        movedRef.current = true;\n      };\n\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return () => {\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, touchEvent]);\n\n  if (mouseEvent !== false) {\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\n  }\n\n  React.useEffect(() => {\n    if (mouseEvent !== false) {\n      const mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      const doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\n      return () => {\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: /*#__PURE__*/React.cloneElement(children, childrenProps)\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * If `true`, the React tree is ignored and only the DOM tree is considered.\n   * This prop changes how portaled elements are handled.\n   * @default false\n   */\n  disableReactTree: PropTypes.bool,\n\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   * @default 'onClick'\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', 'onPointerDown', 'onPointerUp', false]),\n\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   * @default 'onTouchEnd'\n   */\n  touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\n\nexport default ClickAwayListener;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"open\", \"target\", \"onClickAway\", \"children\", \"position\", \"className\", \"onExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { styled } from '@mui/material/styles';\nimport { HTMLElementType } from '@mui/utils';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['menu']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridMenuRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Menu',\n  overridesResolver: (props, styles) => styles.menu\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal,\n  [`& .${gridClasses.menuList}`]: {\n    outline: 0\n  }\n}));\nconst transformOrigin = {\n  'bottom-start': 'top left',\n  'bottom-end': 'top right'\n};\n\nconst GridMenu = props => {\n  var _rootProps$components;\n\n  const {\n    open,\n    target,\n    onClickAway,\n    children,\n    position,\n    className,\n    onExited\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const prevTarget = React.useRef(target);\n  const prevOpen = React.useRef(open);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  React.useEffect(() => {\n    if (prevOpen.current && prevTarget.current) {\n      prevTarget.current.focus();\n    } // Emit menuOpen or menuClose events\n\n\n    const eventName = open ? 'menuOpen' : 'menuClose';\n    apiRef.current.publishEvent(eventName, {\n      target\n    });\n    prevOpen.current = open;\n    prevTarget.current = target;\n  }, [apiRef, open, target]);\n\n  const handleExited = popperOnExited => node => {\n    if (popperOnExited) {\n      popperOnExited();\n    }\n\n    if (onExited) {\n      onExited(node);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(GridMenuRoot, _extends({\n    as: rootProps.components.BasePopper,\n    className: clsx(className, classes.root),\n    open: open,\n    anchorEl: target,\n    transition: true,\n    placement: position\n  }, other, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.basePopper, {\n    children: ({\n      TransitionProps,\n      placement\n    }) => /*#__PURE__*/_jsx(ClickAwayListener, {\n      onClickAway: onClickAway,\n      mouseEvent: \"onMouseDown\",\n      children: /*#__PURE__*/_jsx(Grow, _extends({}, TransitionProps, {\n        style: {\n          transformOrigin: transformOrigin[placement]\n        },\n        onExited: handleExited(TransitionProps == null ? void 0 : TransitionProps.onExited),\n        children: /*#__PURE__*/_jsx(Paper, {\n          children: children\n        })\n      }))\n    })\n  }));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  onClickAway: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  target: HTMLElementType\n} : void 0;\nexport { GridMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"colDef\", \"id\", \"api\", \"hasFocus\", \"isEditable\", \"field\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"cellMode\", \"getValue\", \"tabIndex\", \"position\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport MenuList from '@mui/material/MenuList';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst hasActions = colDef => typeof colDef.getActions === 'function';\n\nconst GridActionsCell = props => {\n  const {\n    colDef,\n    id,\n    hasFocus,\n    tabIndex,\n    position = 'bottom-end',\n    focusElementRef\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [focusedButtonIndex, setFocusedButtonIndex] = React.useState(-1);\n  const [open, setOpen] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootRef = React.useRef(null);\n  const buttonRef = React.useRef(null);\n  const ignoreCallToFocus = React.useRef(false);\n  const touchRippleRefs = React.useRef({});\n  const menuId = useId();\n  const buttonId = useId();\n  const rootProps = useGridRootProps();\n  React.useLayoutEffect(() => {\n    if (!hasFocus) {\n      Object.entries(touchRippleRefs.current).forEach(([index, ref]) => {\n        ref == null ? void 0 : ref.stop({}, () => {\n          delete touchRippleRefs.current[index];\n        });\n      });\n    }\n  }, [hasFocus]);\n  React.useEffect(() => {\n    if (focusedButtonIndex < 0 || !rootRef.current) {\n      return;\n    }\n\n    if (focusedButtonIndex >= rootRef.current.children.length) {\n      return;\n    }\n\n    const child = rootRef.current.children[focusedButtonIndex];\n    child.focus();\n  }, [focusedButtonIndex]);\n  React.useEffect(() => {\n    if (!hasFocus) {\n      setFocusedButtonIndex(-1);\n      ignoreCallToFocus.current = false;\n    }\n  }, [hasFocus]);\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus() {\n      // If ignoreCallToFocus is true, then one of the buttons was clicked and the focus is already set\n      if (!ignoreCallToFocus.current) {\n        setFocusedButtonIndex(0);\n      }\n    }\n\n  }), []);\n\n  if (!hasActions(colDef)) {\n    throw new Error('MUI: Missing the `getActions` property in the `GridColDef`.');\n  }\n\n  const options = colDef.getActions(apiRef.current.getRowParams(id));\n  const iconButtons = options.filter(option => !option.props.showInMenu);\n  const menuButtons = options.filter(option => option.props.showInMenu);\n  const numberOfButtons = iconButtons.length + (menuButtons.length ? 1 : 0);\n  React.useEffect(() => {\n    if (focusedButtonIndex >= numberOfButtons) {\n      setFocusedButtonIndex(numberOfButtons - 1);\n    }\n  }, [focusedButtonIndex, numberOfButtons]);\n\n  const showMenu = () => {\n    setOpen(true);\n    setFocusedButtonIndex(numberOfButtons - 1);\n    ignoreCallToFocus.current = true;\n  };\n\n  const hideMenu = () => {\n    setOpen(false);\n  };\n\n  const handleTouchRippleRef = index => instance => {\n    touchRippleRefs.current[index] = instance;\n  };\n\n  const handleButtonClick = (index, onClick) => event => {\n    setFocusedButtonIndex(index);\n    ignoreCallToFocus.current = true;\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  const handleRootKeyDown = event => {\n    if (numberOfButtons <= 1) {\n      return;\n    }\n\n    let newIndex = focusedButtonIndex;\n\n    if (event.key === 'ArrowRight') {\n      newIndex += 1;\n    } else if (event.key === 'ArrowLeft') {\n      newIndex -= 1;\n    }\n\n    if (newIndex < 0 || newIndex >= numberOfButtons) {\n      return; // We're already in the first or last item = do nothing and let the grid listen the event\n    }\n\n    if (newIndex !== focusedButtonIndex) {\n      event.preventDefault(); // Prevent scrolling\n\n      event.stopPropagation(); // Don't stop propagation for other keys, e.g. ArrowUp\n\n      setFocusedButtonIndex(newIndex);\n    }\n  };\n\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n\n    if (['Tab', 'Enter', 'Escape'].includes(event.key)) {\n      hideMenu();\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    role: \"menu\",\n    ref: rootRef,\n    tabIndex: -1,\n    className: gridClasses.actionsCell,\n    onKeyDown: handleRootKeyDown\n  }, other, {\n    children: [iconButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      touchRippleRef: handleTouchRippleRef(index),\n      onClick: handleButtonClick(index, button.props.onClick),\n      tabIndex: focusedButtonIndex === index ? tabIndex : -1\n    })), menuButtons.length > 0 && buttonId && /*#__PURE__*/_jsx(IconButton, {\n      ref: buttonRef,\n      id: buttonId,\n      \"aria-label\": apiRef.current.getLocaleText('actionsCellMore'),\n      \"aria-controls\": menuId,\n      \"aria-expanded\": open ? 'true' : undefined,\n      \"aria-haspopup\": \"true\",\n      role: \"menuitem\",\n      size: \"small\",\n      onClick: showMenu,\n      touchRippleRef: handleTouchRippleRef(buttonId),\n      tabIndex: focusedButtonIndex === iconButtons.length ? tabIndex : -1,\n      children: /*#__PURE__*/_jsx(rootProps.components.MoreActionsIcon, {\n        fontSize: \"small\"\n      })\n    }), menuButtons.length > 0 && /*#__PURE__*/_jsx(GridMenu, {\n      onClickAway: hideMenu,\n      onClick: hideMenu,\n      open: open,\n      target: buttonRef.current,\n      position: position,\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        onKeyDown: handleListKeyDown,\n        \"aria-labelledby\": buttonId,\n        variant: \"menu\",\n        autoFocusItem: true,\n        children: menuButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n          key: index\n        }))\n      })\n    })]\n  }));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.object.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  value: PropTypes.any\n} : void 0;\nexport { GridActionsCell };\nexport const renderActionsCell = params => /*#__PURE__*/_jsx(GridActionsCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderActionsCell } from '../components/cell/GridActionsCell';\nexport const GRID_ACTIONS_COLUMN_TYPE = 'actions';\nexport const GRID_ACTIONS_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  sortable: false,\n  filterable: false,\n  width: 100,\n  align: 'center',\n  headerAlign: 'center',\n  headerName: '',\n  disableColumnMenu: true,\n  disableExport: true,\n  renderCell: renderActionsCell,\n  getApplyQuickFilterFn: undefined\n});","import { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { GRID_NUMERIC_COL_DEF } from './gridNumericColDef';\nimport { GRID_DATE_COL_DEF, GRID_DATETIME_COL_DEF } from './gridDateColDef';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { GRID_SINGLE_SELECT_COL_DEF } from './gridSingleSelectColDef';\nimport { GRID_ACTIONS_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from './gridActionsColDef';\nexport const DEFAULT_GRID_COL_TYPE_KEY = '__default__';\nexport const getGridDefaultColumnTypes = () => {\n  const nativeColumnTypes = {\n    string: GRID_STRING_COL_DEF,\n    number: GRID_NUMERIC_COL_DEF,\n    date: GRID_DATE_COL_DEF,\n    dateTime: GRID_DATETIME_COL_DEF,\n    boolean: GRID_BOOLEAN_COL_DEF,\n    singleSelect: GRID_SINGLE_SELECT_COL_DEF,\n    [GRID_ACTIONS_COLUMN_TYPE]: GRID_ACTIONS_COL_DEF,\n    [DEFAULT_GRID_COL_TYPE_KEY]: GRID_STRING_COL_DEF\n  };\n  return nativeColumnTypes;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { DEFAULT_GRID_COL_TYPE_KEY, getGridDefaultColumnTypes } from '../../../colDef';\nimport { gridColumnsSelector, gridColumnVisibilityModelSelector } from './gridColumnsSelector';\nimport { clamp } from '../../../utils/utils';\nexport const COLUMNS_DIMENSION_PROPERTIES = ['maxWidth', 'minWidth', 'width', 'flex'];\nexport const computeColumnTypes = (customColumnTypes = {}) => {\n  const mergedColumnTypes = _extends({}, getGridDefaultColumnTypes());\n\n  Object.entries(customColumnTypes).forEach(([colType, colTypeDef]) => {\n    if (mergedColumnTypes[colType]) {\n      mergedColumnTypes[colType] = _extends({}, mergedColumnTypes[colType], colTypeDef);\n    } else {\n      mergedColumnTypes[colType] = _extends({}, mergedColumnTypes[colTypeDef.extendType || DEFAULT_GRID_COL_TYPE_KEY], colTypeDef);\n    }\n  });\n  return mergedColumnTypes;\n};\n/**\n * Computes width for flex columns.\n * Based on CSS Flexbox specification:\n * https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n */\n\nexport function computeFlexColumnsWidth({\n  initialFreeSpace,\n  totalFlexUnits,\n  flexColumns\n}) {\n  const flexColumnsLookup = {\n    all: {},\n    frozenFields: [],\n    freeze: field => {\n      const value = flexColumnsLookup.all[field];\n\n      if (value && value.frozen !== true) {\n        flexColumnsLookup.all[field].frozen = true;\n        flexColumnsLookup.frozenFields.push(field);\n      }\n    }\n  }; // Step 5 of https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n\n  function loopOverFlexItems() {\n    // 5a: If all the flex items on the line are frozen, free space has been distributed.\n    if (flexColumnsLookup.frozenFields.length === flexColumns.length) {\n      return;\n    }\n\n    const violationsLookup = {\n      min: {},\n      max: {}\n    };\n    let remainingFreeSpace = initialFreeSpace;\n    let flexUnits = totalFlexUnits;\n    let totalViolation = 0; // 5b: Calculate the remaining free space\n\n    flexColumnsLookup.frozenFields.forEach(field => {\n      remainingFreeSpace -= flexColumnsLookup.all[field].computedWidth;\n      flexUnits -= flexColumnsLookup.all[field].flex;\n    });\n\n    for (let i = 0; i < flexColumns.length; i += 1) {\n      const column = flexColumns[i];\n\n      if (flexColumnsLookup.all[column.field] && flexColumnsLookup.all[column.field].frozen === true) {\n        // eslint-disable-next-line no-continue\n        continue;\n      } // 5c: Distribute remaining free space proportional to the flex factors\n\n\n      const widthPerFlexUnit = remainingFreeSpace / flexUnits;\n      let computedWidth = widthPerFlexUnit * column.flex; // 5d: Fix min/max violations\n\n      if (computedWidth < column.minWidth) {\n        totalViolation += column.minWidth - computedWidth;\n        computedWidth = column.minWidth;\n        violationsLookup.min[column.field] = true;\n      } else if (computedWidth > column.maxWidth) {\n        totalViolation += column.maxWidth - computedWidth;\n        computedWidth = column.maxWidth;\n        violationsLookup.max[column.field] = true;\n      }\n\n      flexColumnsLookup.all[column.field] = {\n        frozen: false,\n        computedWidth,\n        flex: column.flex\n      };\n    } // 5e: Freeze over-flexed items\n\n\n    if (totalViolation < 0) {\n      // Freeze all the items with max violations\n      Object.keys(violationsLookup.max).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else if (totalViolation > 0) {\n      // Freeze all the items with min violations\n      Object.keys(violationsLookup.min).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else {\n      // Freeze all items\n      flexColumns.forEach(({\n        field\n      }) => {\n        flexColumnsLookup.freeze(field);\n      });\n    } // 5f: Return to the start of this loop\n\n\n    loopOverFlexItems();\n  }\n\n  loopOverFlexItems();\n  return flexColumnsLookup.all;\n}\n/**\n * Compute the `computedWidth` (ie: the width the column should have during rendering) based on the `width` / `flex` / `minWidth` / `maxWidth` properties of `GridColDef`.\n * The columns already have been merged with there `type` default values for `minWidth`, `maxWidth` and `width`, thus the `!` for those properties below.\n * TODO: Unit test this function in depth and only keep basic cases for the whole grid testing.\n * TODO: Improve the `GridColDef` typing to reflect the fact that `minWidth` / `maxWidth` and `width` can't be null after the merge with the `type` default values.\n */\n\nexport const hydrateColumnsWidth = (rawState, viewportInnerWidth) => {\n  const columnsLookup = {};\n  let totalFlexUnits = 0;\n  let widthAllocatedBeforeFlex = 0;\n  const flexColumns = []; // For the non-flex columns, compute their width\n  // For the flex columns, compute there minimum width and how much width must be allocated during the flex allocation\n\n  rawState.all.forEach(columnField => {\n    const newColumn = _extends({}, rawState.lookup[columnField]);\n\n    if (rawState.columnVisibilityModel[columnField] === false) {\n      newColumn.computedWidth = 0;\n    } else {\n      let computedWidth;\n\n      if (newColumn.flex && newColumn.flex > 0) {\n        totalFlexUnits += newColumn.flex;\n        computedWidth = 0;\n        flexColumns.push(newColumn);\n      } else {\n        computedWidth = clamp(newColumn.width, newColumn.minWidth, newColumn.maxWidth);\n      }\n\n      widthAllocatedBeforeFlex += computedWidth;\n      newColumn.computedWidth = computedWidth;\n    }\n\n    columnsLookup[columnField] = newColumn;\n  });\n  const initialFreeSpace = Math.max(viewportInnerWidth - widthAllocatedBeforeFlex, 0); // Allocate the remaining space to the flex columns\n\n  if (totalFlexUnits > 0 && viewportInnerWidth > 0) {\n    const computedColumnWidths = computeFlexColumnsWidth({\n      initialFreeSpace,\n      totalFlexUnits,\n      flexColumns\n    });\n    Object.keys(computedColumnWidths).forEach(field => {\n      columnsLookup[field].computedWidth = computedColumnWidths[field].computedWidth;\n    });\n  }\n\n  return _extends({}, rawState, {\n    lookup: columnsLookup\n  });\n};\nlet columnTypeWarnedOnce = false;\n/**\n * Apply the order and the dimensions of the initial state.\n * The columns not registered in `orderedFields` will be placed after the imported columns.\n */\n\nexport const applyInitialState = (columnsState, initialState) => {\n  if (!initialState) {\n    return columnsState;\n  }\n\n  const {\n    orderedFields = [],\n    dimensions = {}\n  } = initialState;\n  const columnsWithUpdatedDimensions = Object.keys(dimensions);\n\n  if (columnsWithUpdatedDimensions.length === 0 && orderedFields.length === 0) {\n    return columnsState;\n  }\n\n  const orderedFieldsLookup = {};\n  const cleanOrderedFields = [];\n\n  for (let i = 0; i < orderedFields.length; i += 1) {\n    const field = orderedFields[i]; // Ignores the fields in the initialState that matches no field on the current column state\n\n    if (columnsState.lookup[field]) {\n      orderedFieldsLookup[field] = true;\n      cleanOrderedFields.push(field);\n    }\n  }\n\n  const newOrderedFields = cleanOrderedFields.length === 0 ? columnsState.all : [...cleanOrderedFields, ...columnsState.all.filter(field => !orderedFieldsLookup[field])];\n\n  const newColumnLookup = _extends({}, columnsState.lookup);\n\n  for (let i = 0; i < columnsWithUpdatedDimensions.length; i += 1) {\n    const field = columnsWithUpdatedDimensions[i];\n\n    const newColDef = _extends({}, newColumnLookup[field], {\n      hasBeenResized: true\n    });\n\n    Object.entries(dimensions[field]).forEach(([key, value]) => {\n      newColDef[key] = value === -1 ? Infinity : value;\n    });\n    newColumnLookup[field] = newColDef;\n  }\n\n  const newColumnsState = {\n    all: newOrderedFields,\n    lookup: newColumnLookup\n  };\n  return newColumnsState;\n};\n/**\n * @deprecated Should have been internal only, you can inline the logic.\n */\n\nexport const getGridColDef = (columnTypes, type) => {\n  if (!type) {\n    return columnTypes[DEFAULT_GRID_COL_TYPE_KEY];\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!columnTypeWarnedOnce && !columnTypes[type]) {\n      console.warn([`MUI: The column type \"${type}\" you are using is not supported.`, `Column type \"string\" is being used instead.`].join('\\n'));\n      columnTypeWarnedOnce = true;\n    }\n  }\n\n  if (!columnTypes[type]) {\n    return columnTypes[DEFAULT_GRID_COL_TYPE_KEY];\n  }\n\n  return columnTypes[type];\n};\nexport const createColumnsState = ({\n  apiRef,\n  columnsToUpsert,\n  initialState,\n  columnTypes,\n  currentColumnVisibilityModel = gridColumnVisibilityModelSelector(apiRef),\n  shouldRegenColumnVisibilityModelFromColumns,\n  keepOnlyColumnsToUpsert = false\n}) => {\n  var _apiRef$current$getRo, _apiRef$current$getRo2, _apiRef$current, _apiRef$current$getRo3;\n\n  const isInsideStateInitializer = !apiRef.current.state.columns;\n  let columnsStateWithoutColumnVisibilityModel;\n\n  if (isInsideStateInitializer) {\n    columnsStateWithoutColumnVisibilityModel = {\n      all: [],\n      lookup: {}\n    };\n  } else {\n    const currentState = gridColumnsSelector(apiRef.current.state);\n    columnsStateWithoutColumnVisibilityModel = {\n      all: keepOnlyColumnsToUpsert ? [] : [...currentState.all],\n      lookup: _extends({}, currentState.lookup) // Will be cleaned later if keepOnlyColumnsToUpsert=true\n\n    };\n  }\n\n  let columnsToKeep = {};\n\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    columnsToKeep = Object.keys(columnsStateWithoutColumnVisibilityModel.lookup).reduce((acc, key) => _extends({}, acc, {\n      [key]: false\n    }), {});\n  }\n\n  const columnsToUpsertLookup = {};\n  columnsToUpsert.forEach(newColumn => {\n    const {\n      field\n    } = newColumn;\n    columnsToUpsertLookup[field] = true;\n    columnsToKeep[field] = true;\n    let existingState = columnsStateWithoutColumnVisibilityModel.lookup[field];\n\n    if (existingState == null) {\n      // New Column\n      existingState = _extends({}, getGridColDef(columnTypes, newColumn.type), {\n        // TODO v6: Inline `getGridColDef`\n        field,\n        hasBeenResized: false\n      });\n      columnsStateWithoutColumnVisibilityModel.all.push(field);\n    } else if (keepOnlyColumnsToUpsert) {\n      columnsStateWithoutColumnVisibilityModel.all.push(field);\n    }\n\n    let hasBeenResized = existingState.hasBeenResized;\n    COLUMNS_DIMENSION_PROPERTIES.forEach(key => {\n      if (newColumn[key] !== undefined) {\n        hasBeenResized = true;\n\n        if (newColumn[key] === -1) {\n          newColumn[key] = Infinity;\n        }\n      }\n    });\n    columnsStateWithoutColumnVisibilityModel.lookup[field] = _extends({}, existingState, {\n      hide: newColumn.hide == null ? false : newColumn.hide\n    }, newColumn, {\n      hasBeenResized\n    });\n  });\n\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    Object.keys(columnsStateWithoutColumnVisibilityModel.lookup).forEach(field => {\n      if (!columnsToKeep[field]) {\n        delete columnsStateWithoutColumnVisibilityModel.lookup[field];\n      }\n    });\n  }\n\n  const columnsLookupBeforePreProcessing = _extends({}, columnsStateWithoutColumnVisibilityModel.lookup);\n\n  const columnsStateWithPreProcessing = apiRef.current.unstable_applyPipeProcessors('hydrateColumns', columnsStateWithoutColumnVisibilityModel); // TODO v6: remove the sync between the columns `hide` option and the model.\n\n  let columnVisibilityModel = {};\n\n  if (shouldRegenColumnVisibilityModelFromColumns) {\n    let hasModelChanged = false;\n\n    const newColumnVisibilityModel = _extends({}, currentColumnVisibilityModel);\n\n    if (isInsideStateInitializer) {\n      columnsStateWithPreProcessing.all.forEach(field => {\n        newColumnVisibilityModel[field] = !columnsStateWithoutColumnVisibilityModel.lookup[field].hide;\n      });\n    } else if (keepOnlyColumnsToUpsert) {\n      // At this point, `keepOnlyColumnsToUpsert` has a new meaning: keep the columns\n      // passed via `columnToUpsert` + columns added by the pre-processors. We do the following\n      // cleanup because a given column may have been removed from the `columns` prop but it still\n      // exists in the state.\n      Object.keys(newColumnVisibilityModel).forEach(field => {\n        if (!columnsStateWithPreProcessing.lookup[field]) {\n          delete newColumnVisibilityModel[field];\n          hasModelChanged = true;\n        }\n      });\n    }\n\n    columnsStateWithPreProcessing.all.forEach(field => {\n      // If neither the `columnsToUpsert` nor the pre-processors updated the column,\n      // Then we don't want to update the visibility status of the column in the model.\n      if (!columnsToUpsertLookup[field] && columnsLookupBeforePreProcessing[field] === columnsStateWithPreProcessing.lookup[field]) {\n        return;\n      } // We always assume that a column not in the model is visible by default. However, there's an\n      // edge case where the column is not in the model but it also doesn't exist in the `columns`\n      // prop, meaning that the column is being added. In that case, we assume that the column was\n      // not visible before for it be added to the model.\n\n\n      let isVisibleBefore = currentColumnVisibilityModel[field];\n\n      if (isVisibleBefore === undefined) {\n        if (isInsideStateInitializer) {\n          isVisibleBefore = true;\n        } else {\n          const currentState = gridColumnsSelector(apiRef.current.state);\n          isVisibleBefore = !!currentState.lookup[field];\n        }\n      }\n\n      const isVisibleAfter = !columnsStateWithPreProcessing.lookup[field].hide;\n\n      if (isVisibleAfter !== isVisibleBefore) {\n        hasModelChanged = true;\n        newColumnVisibilityModel[field] = isVisibleAfter;\n      }\n    });\n\n    if (hasModelChanged || isInsideStateInitializer) {\n      columnVisibilityModel = newColumnVisibilityModel;\n    } else {\n      columnVisibilityModel = currentColumnVisibilityModel;\n    }\n  } else {\n    columnVisibilityModel = currentColumnVisibilityModel;\n  }\n\n  const columnsStateWithPortableColumns = applyInitialState(columnsStateWithPreProcessing, initialState);\n\n  const columnsState = _extends({}, columnsStateWithPortableColumns, {\n    columnVisibilityModel\n  });\n\n  return hydrateColumnsWidth(columnsState, (_apiRef$current$getRo = (_apiRef$current$getRo2 = (_apiRef$current = apiRef.current).getRootDimensions) == null ? void 0 : (_apiRef$current$getRo3 = _apiRef$current$getRo2.call(_apiRef$current)) == null ? void 0 : _apiRef$current$getRo3.viewportInnerSize.width) != null ? _apiRef$current$getRo : 0);\n};\nexport const mergeColumnsState = columnsState => state => _extends({}, state, {\n  columns: columnsState\n});\nexport function getFirstNonSpannedColumnToRender({\n  firstColumnToRender,\n  apiRef,\n  firstRowToRender,\n  lastRowToRender,\n  visibleRows\n}) {\n  let firstNonSpannedColumnToRender = firstColumnToRender;\n\n  for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n    const row = visibleRows[i];\n\n    if (row) {\n      const rowId = visibleRows[i].id;\n      const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, firstColumnToRender);\n\n      if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n        firstNonSpannedColumnToRender = cellColSpanInfo.leftVisibleCellIndex;\n      }\n    }\n  }\n\n  return firstNonSpannedColumnToRender;\n}\nexport function getFirstColumnIndexToRender({\n  firstColumnIndex,\n  minColumnIndex,\n  columnBuffer,\n  firstRowToRender,\n  lastRowToRender,\n  apiRef,\n  visibleRows\n}) {\n  const initialFirstColumnToRender = Math.max(firstColumnIndex - columnBuffer, minColumnIndex);\n  const firstColumnToRender = getFirstNonSpannedColumnToRender({\n    firstColumnToRender: initialFirstColumnToRender,\n    apiRef,\n    firstRowToRender,\n    lastRowToRender,\n    visibleRows\n  });\n  return firstColumnToRender;\n}","var GridPreferencePanelsValue;\n\n(function (GridPreferencePanelsValue) {\n  GridPreferencePanelsValue[\"filters\"] = \"filters\";\n  GridPreferencePanelsValue[\"columns\"] = \"columns\";\n})(GridPreferencePanelsValue || (GridPreferencePanelsValue = {}));\n\nexport { GridPreferencePanelsValue };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnFieldsSelector, gridColumnDefinitionsSelector, gridColumnLookupSelector, gridColumnsMetaSelector, gridColumnsSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from './gridColumnsSelector';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridRegisterPipeProcessor, useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { hydrateColumnsWidth, computeColumnTypes, createColumnsState, mergeColumnsState, COLUMNS_DIMENSION_PROPERTIES } from './gridColumnsUtils';\nimport { GridPreferencePanelsValue } from '../preferencesPanel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const columnsStateInitializer = (state, props, apiRef) => {\n  var _props$initialState, _props$initialState$c, _props$initialState2, _ref, _props$columnVisibili, _props$initialState3, _props$initialState3$;\n\n  const isUsingColumnVisibilityModel = !!props.columnVisibilityModel || !!((_props$initialState = props.initialState) != null && (_props$initialState$c = _props$initialState.columns) != null && _props$initialState$c.columnVisibilityModel);\n  apiRef.current.unstable_caches.columns = {\n    isUsingColumnVisibilityModel\n  };\n  const columnsTypes = computeColumnTypes(props.columnTypes);\n  const columnsState = createColumnsState({\n    apiRef,\n    columnTypes: columnsTypes,\n    columnsToUpsert: props.columns,\n    initialState: (_props$initialState2 = props.initialState) == null ? void 0 : _props$initialState2.columns,\n    shouldRegenColumnVisibilityModelFromColumns: !isUsingColumnVisibilityModel,\n    currentColumnVisibilityModel: (_ref = (_props$columnVisibili = props.columnVisibilityModel) != null ? _props$columnVisibili : (_props$initialState3 = props.initialState) == null ? void 0 : (_props$initialState3$ = _props$initialState3.columns) == null ? void 0 : _props$initialState3$.columnVisibilityModel) != null ? _ref : {},\n    keepOnlyColumnsToUpsert: true\n  });\n  return _extends({}, state, {\n    columns: columnsState\n  });\n};\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridDimensions (method, event) - can be after\n * TODO: Impossible priority - useGridParamsApi also needs to be after useGridColumns\n */\n\nexport function useGridColumns(apiRef, props) {\n  var _props$componentsProp2;\n\n  const logger = useGridLogger(apiRef, 'useGridColumns');\n  const columnTypes = React.useMemo(() => computeColumnTypes(props.columnTypes), [props.columnTypes]);\n  const previousColumnsProp = React.useRef(props.columns);\n  const previousColumnTypesProp = React.useRef(columnTypes);\n  apiRef.current.unstable_registerControlState({\n    stateId: 'visibleColumns',\n    propModel: props.columnVisibilityModel,\n    propOnChange: props.onColumnVisibilityModelChange,\n    stateSelector: gridColumnVisibilityModelSelector,\n    changeEvent: 'columnVisibilityModelChange'\n  });\n  const setGridColumnsState = React.useCallback(columnsState => {\n    logger.debug('Updating columns state.');\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('columnsChange', columnsState.all);\n  }, [logger, apiRef]);\n  /**\n   * API METHODS\n   */\n\n  const getColumn = React.useCallback(field => gridColumnLookupSelector(apiRef)[field], [apiRef]);\n  const getAllColumns = React.useCallback(() => gridColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getVisibleColumns = React.useCallback(() => gridVisibleColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getColumnsMeta = React.useCallback(() => gridColumnsMetaSelector(apiRef), [apiRef]);\n  const getColumnIndex = React.useCallback((field, useVisibleColumns = true) => {\n    const columns = useVisibleColumns ? gridVisibleColumnDefinitionsSelector(apiRef) : gridColumnDefinitionsSelector(apiRef);\n    return columns.findIndex(col => col.field === field);\n  }, [apiRef]);\n  const getColumnPosition = React.useCallback(field => {\n    const index = getColumnIndex(field);\n    return gridColumnPositionsSelector(apiRef)[index];\n  }, [apiRef, getColumnIndex]);\n  const setColumnVisibilityModel = React.useCallback(model => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n\n    if (currentModel !== model) {\n      apiRef.current.setState(state => _extends({}, state, {\n        columns: createColumnsState({\n          apiRef,\n          columnTypes,\n          columnsToUpsert: [],\n          initialState: undefined,\n          shouldRegenColumnVisibilityModelFromColumns: false,\n          currentColumnVisibilityModel: model,\n          keepOnlyColumnsToUpsert: false\n        })\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, columnTypes]);\n  const updateColumns = React.useCallback(columns => {\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: columns,\n      initialState: undefined,\n      shouldRegenColumnVisibilityModelFromColumns: true,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, setGridColumnsState, columnTypes]);\n  const updateColumn = React.useCallback(column => apiRef.current.updateColumns([column]), [apiRef]);\n  const setColumnVisibility = React.useCallback((field, isVisible) => {\n    // We keep updating the `hide` option of `GridColDef` when not controlling the model to avoid any breaking change.\n    // `updateColumns` take care of updating the model itself if needs be.\n    // TODO v6: stop using the `hide` field even when the model is not defined\n    if (apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel) {\n      var _columnVisibilityMode;\n\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const isCurrentlyVisible = (_columnVisibilityMode = columnVisibilityModel[field]) != null ? _columnVisibilityMode : true;\n\n      if (isVisible !== isCurrentlyVisible) {\n        const newModel = _extends({}, columnVisibilityModel, {\n          [field]: isVisible\n        });\n\n        apiRef.current.setColumnVisibilityModel(newModel);\n      }\n    } else {\n      const column = apiRef.current.getColumn(field);\n\n      const newColumn = _extends({}, column, {\n        hide: !isVisible\n      });\n\n      apiRef.current.updateColumns([newColumn]);\n      const params = {\n        field,\n        colDef: newColumn,\n        isVisible\n      };\n      apiRef.current.publishEvent('columnVisibilityChange', params);\n    }\n  }, [apiRef]);\n  const setColumnIndex = React.useCallback((field, targetIndexPosition) => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    const oldIndexPosition = allColumns.findIndex(col => col === field);\n\n    if (oldIndexPosition === targetIndexPosition) {\n      return;\n    }\n\n    logger.debug(`Moving column ${field} to index ${targetIndexPosition}`);\n    const updatedColumns = [...allColumns];\n    const fieldRemoved = updatedColumns.splice(oldIndexPosition, 1)[0];\n    updatedColumns.splice(targetIndexPosition, 0, fieldRemoved);\n    setGridColumnsState(_extends({}, gridColumnsSelector(apiRef.current.state), {\n      all: updatedColumns\n    }));\n    const params = {\n      field,\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: apiRef.current.getColumn(field),\n      targetIndex: targetIndexPosition,\n      oldIndex: oldIndexPosition\n    };\n    apiRef.current.publishEvent('columnOrderChange', params);\n  }, [apiRef, logger, setGridColumnsState]);\n  const setColumnWidth = React.useCallback((field, width) => {\n    logger.debug(`Updating column ${field} width to ${width}`);\n    const column = apiRef.current.getColumn(field);\n\n    const newColumn = _extends({}, column, {\n      width\n    });\n\n    apiRef.current.updateColumns([newColumn]);\n    apiRef.current.publishEvent('columnWidthChange', {\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: newColumn,\n      width\n    });\n  }, [apiRef, logger]);\n  const columnApi = {\n    getColumn,\n    getAllColumns,\n    getColumnIndex,\n    getColumnPosition,\n    getVisibleColumns,\n    getColumnsMeta,\n    updateColumn,\n    updateColumns,\n    setColumnVisibilityModel,\n    setColumnVisibility,\n    setColumnIndex,\n    setColumnWidth\n  };\n  useGridApiMethod(apiRef, columnApi, 'GridColumnApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback(prevState => {\n    const columnsStateToExport = {};\n\n    if (apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel) {\n      const columnVisibilityModelToExport = gridColumnVisibilityModelSelector(apiRef);\n      const hasHiddenColumns = Object.values(columnVisibilityModelToExport).some(value => value === false);\n\n      if (hasHiddenColumns) {\n        columnsStateToExport.columnVisibilityModel = columnVisibilityModelToExport;\n      }\n    }\n\n    columnsStateToExport.orderedFields = gridColumnFieldsSelector(apiRef);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const dimensions = {};\n    columns.forEach(colDef => {\n      if (colDef.hasBeenResized) {\n        const colDefDimensions = {};\n        COLUMNS_DIMENSION_PROPERTIES.forEach(propertyName => {\n          let propertyValue = colDef[propertyName];\n\n          if (propertyValue === Infinity) {\n            propertyValue = -1;\n          }\n\n          colDefDimensions[propertyName] = propertyValue;\n        });\n        dimensions[colDef.field] = colDefDimensions;\n      }\n    });\n\n    if (Object.keys(dimensions).length > 0) {\n      columnsStateToExport.dimensions = dimensions;\n    }\n\n    return _extends({}, prevState, {\n      columns: columnsStateToExport\n    });\n  }, [apiRef]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n\n    const columnVisibilityModelToImport = apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel ? (_context$stateToResto = context.stateToRestore.columns) == null ? void 0 : _context$stateToResto.columnVisibilityModel : undefined;\n    const initialState = context.stateToRestore.columns;\n\n    if (columnVisibilityModelToImport == null && initialState == null) {\n      return params;\n    }\n\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: [],\n      initialState,\n      shouldRegenColumnVisibilityModelFromColumns: !apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel,\n      currentColumnVisibilityModel: columnVisibilityModelToImport,\n      keepOnlyColumnsToUpsert: false\n    });\n    apiRef.current.setState(mergeColumnsState(columnsState));\n\n    if (initialState != null) {\n      apiRef.current.publishEvent('columnsChange', columnsState.all);\n    }\n\n    return params;\n  }, [apiRef, columnTypes]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.columns) {\n      var _props$componentsProp;\n\n      const ColumnsPanel = props.components.ColumnsPanel;\n      return /*#__PURE__*/_jsx(ColumnsPanel, _extends({}, (_props$componentsProp = props.componentsProps) == null ? void 0 : _props$componentsProp.columnsPanel));\n    }\n\n    return initialValue;\n  }, [props.components.ColumnsPanel, (_props$componentsProp2 = props.componentsProps) == null ? void 0 : _props$componentsProp2.columnsPanel]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  /**\n   * EVENTS\n   */\n\n  const prevInnerWidth = React.useRef(null);\n\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      setGridColumnsState(hydrateColumnsWidth(gridColumnsSelector(apiRef.current.state), viewportInnerSize.width));\n    }\n  };\n\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n  useGridApiOptionHandler(apiRef, 'columnVisibilityChange', props.onColumnVisibilityChange);\n  /**\n   * APPLIERS\n   */\n\n  const hydrateColumns = React.useCallback(() => {\n    logger.info(`Columns pipe processing have changed, regenerating the columns`);\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: [],\n      initialState: undefined,\n      shouldRegenColumnVisibilityModelFromColumns: !apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, logger, setGridColumnsState, columnTypes]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateColumns', hydrateColumns);\n  /**\n   * EFFECTS\n   */\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n\n    logger.info(`GridColumns have changed, new length ${props.columns.length}`);\n\n    if (previousColumnsProp.current === props.columns && previousColumnTypesProp.current === columnTypes) {\n      return;\n    }\n\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      initialState: undefined,\n      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`\n      shouldRegenColumnVisibilityModelFromColumns: !apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel,\n      columnsToUpsert: props.columns,\n      keepOnlyColumnsToUpsert: true\n    });\n    previousColumnsProp.current = props.columns;\n    previousColumnTypesProp.current = columnTypes;\n    setGridColumnsState(columnsState);\n  }, [logger, apiRef, setGridColumnsState, props.columns, columnTypes]);\n  React.useEffect(() => {\n    if (props.columnVisibilityModel !== undefined) {\n      apiRef.current.setColumnVisibilityModel(props.columnVisibilityModel);\n    }\n  }, [apiRef, logger, props.columnVisibilityModel]);\n}","/**\n * Available densities.\n */\n\n/**\n * Density enum.\n */\nvar GridDensityTypes;\n\n(function (GridDensityTypes) {\n  GridDensityTypes[\"Compact\"] = \"compact\";\n  GridDensityTypes[\"Standard\"] = \"standard\";\n  GridDensityTypes[\"Comfortable\"] = \"comfortable\";\n})(GridDensityTypes || (GridDensityTypes = {}));\n\nexport { GridDensityTypes };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridDensityTypes } from '../../../models/gridDensity';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridDensitySelector } from './densitySelector';\nimport { isDeepEqual } from '../../../utils/utils';\nexport const COMPACT_DENSITY_FACTOR = 0.7;\nexport const COMFORTABLE_DENSITY_FACTOR = 1.3; // TODO v6: revise keeping headerHeight and rowHeight in state\n\nconst getUpdatedDensityState = (newDensity, newHeaderHeight, newRowHeight) => {\n  switch (newDensity) {\n    case GridDensityTypes.Compact:\n      return {\n        value: newDensity,\n        headerHeight: Math.floor(newHeaderHeight * COMPACT_DENSITY_FACTOR),\n        rowHeight: Math.floor(newRowHeight * COMPACT_DENSITY_FACTOR),\n        factor: COMPACT_DENSITY_FACTOR\n      };\n\n    case GridDensityTypes.Comfortable:\n      return {\n        value: newDensity,\n        headerHeight: Math.floor(newHeaderHeight * COMFORTABLE_DENSITY_FACTOR),\n        rowHeight: Math.floor(newRowHeight * COMFORTABLE_DENSITY_FACTOR),\n        factor: COMFORTABLE_DENSITY_FACTOR\n      };\n\n    default:\n      return {\n        value: newDensity,\n        headerHeight: newHeaderHeight,\n        rowHeight: newRowHeight,\n        factor: 1\n      };\n  }\n};\n\nexport const densityStateInitializer = (state, props) => _extends({}, state, {\n  density: getUpdatedDensityState(props.density, props.headerHeight, props.rowHeight)\n});\nexport const useGridDensity = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useDensity');\n  const setDensity = React.useCallback((newDensity, newHeaderHeight = props.headerHeight, newRowHeight = props.rowHeight) => {\n    logger.debug(`Set grid density to ${newDensity}`);\n    apiRef.current.setState(state => {\n      const currentDensityState = gridDensitySelector(state);\n      const newDensityState = getUpdatedDensityState(newDensity, newHeaderHeight, newRowHeight);\n\n      if (isDeepEqual(currentDensityState, newDensityState)) {\n        return state;\n      }\n\n      return _extends({}, state, {\n        density: newDensityState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, apiRef, props.headerHeight, props.rowHeight]);\n  React.useEffect(() => {\n    apiRef.current.setDensity(props.density, props.headerHeight, props.rowHeight);\n  }, [apiRef, props.density, props.rowHeight, props.headerHeight]);\n  const densityApi = {\n    setDensity\n  };\n  useGridApiMethod(apiRef, densityApi, 'GridDensityApi');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"id\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"colDef\", \"isEditable\", \"cellMode\", \"hasFocus\", \"tabIndex\", \"getValue\", \"api\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useForkRef } from '@mui/material/utils';\nimport { isNavigationKey, isSpaceKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridCellCheckboxForwardRef = /*#__PURE__*/React.forwardRef(function GridCellCheckboxRenderer(props, ref) {\n  var _rootProps$components;\n\n  const {\n    field,\n    id,\n    value: isChecked,\n    hasFocus,\n    tabIndex\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const checkboxElement = React.useRef(null);\n  const rippleRef = React.useRef();\n  const handleRef = useForkRef(checkboxElement, ref);\n  const element = apiRef.current.getCellElement(id, field);\n\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked,\n      id\n    };\n    apiRef.current.publishEvent('rowSelectionCheckboxChange', params, event);\n  };\n\n  React.useLayoutEffect(() => {\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [element, tabIndex]);\n  React.useLayoutEffect(() => {\n    if (hasFocus) {\n      var _checkboxElement$curr;\n\n      const input = (_checkboxElement$curr = checkboxElement.current) == null ? void 0 : _checkboxElement$curr.querySelector('input');\n      input == null ? void 0 : input.focus();\n    } else if (rippleRef.current) {\n      // Only available in @mui/material v5.4.1 or later\n      rippleRef.current.stop({});\n    }\n  }, [hasFocus]);\n  const handleKeyDown = React.useCallback(event => {\n    if (isSpaceKey(event.key)) {\n      event.stopPropagation();\n    }\n\n    if (isNavigationKey(event.key) && !event.shiftKey) {\n      apiRef.current.publishEvent('cellNavigationKeyDown', props, event);\n    }\n  }, [apiRef, props]);\n  const isSelectable = !rootProps.isRowSelectable || rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectRow' : 'checkboxSelectionSelectRow');\n  return /*#__PURE__*/_jsx(rootProps.components.BaseCheckbox, _extends({\n    ref: handleRef,\n    tabIndex: tabIndex,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    onKeyDown: handleKeyDown,\n    disabled: !isSelectable,\n    touchRippleRef: rippleRef\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellCheckboxForwardRef.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.object.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n\n  /**\n   * The cell value, but if the column has valueGetter, use getValue.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridCellCheckboxForwardRef };\nexport const GridCellCheckboxRenderer = /*#__PURE__*/React.memo(GridCellCheckboxForwardRef);","import { createSelector } from '../../../utils/createSelector';\nexport const gridFocusStateSelector = state => state.focus;\nexport const gridFocusCellSelector = createSelector(gridFocusStateSelector, focusState => focusState.cell);\nexport const gridFocusColumnHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeader);\nexport const gridTabIndexStateSelector = state => state.tabIndex;\nexport const gridTabIndexCellSelector = createSelector(gridTabIndexStateSelector, state => state.cell);\nexport const gridTabIndexColumnHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeader);","import { createSelector } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nexport const gridSelectionStateSelector = state => state.selection;\nexport const selectedGridRowsCountSelector = createSelector(gridSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelector(gridSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelector(gridSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));","import { createSelector } from '../../../utils/createSelector';\nimport { gridVisibleSortedRowEntriesSelector, gridVisibleSortedRowIdsSelector, gridVisibleSortedTopLevelRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridRowTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\n/**\n * @category Pagination\n * @ignore - do not document.\n */\n\nexport const gridPaginationSelector = state => state.pagination;\n/**\n * Get the index of the page to render if the pagination is enabled\n * @category Pagination\n */\n\nexport const gridPageSelector = createSelector(gridPaginationSelector, pagination => pagination.page);\n/**\n * Get the maximum amount of rows to display on a single page if the pagination is enabled\n * @category Pagination\n */\n\nexport const gridPageSizeSelector = createSelector(gridPaginationSelector, pagination => pagination.pageSize);\n/**\n * Get the amount of pages needed to display all the rows if the pagination is enabled\n * @category Pagination\n */\n\nexport const gridPageCountSelector = createSelector(gridPaginationSelector, pagination => pagination.pageCount);\n/**\n * Get the index of the first and the last row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\n\nexport const gridPaginationRowRangeSelector = createSelector(gridPaginationSelector, gridRowTreeSelector, gridRowTreeDepthSelector, gridVisibleSortedRowEntriesSelector, gridVisibleSortedTopLevelRowEntriesSelector, (pagination, rowTree, rowTreeDepth, visibleSortedRowEntries, visibleSortedTopLevelRowEntries) => {\n  const visibleTopLevelRowCount = visibleSortedTopLevelRowEntries.length;\n  const topLevelFirstRowIndex = Math.min(pagination.pageSize * pagination.page, visibleTopLevelRowCount - 1);\n  const topLevelLastRowIndex = Math.min(topLevelFirstRowIndex + pagination.pageSize - 1, visibleTopLevelRowCount - 1); // The range contains no element\n\n  if (topLevelFirstRowIndex === -1 || topLevelLastRowIndex === -1) {\n    return null;\n  } // The tree is flat, there is no need to look for children\n\n\n  if (rowTreeDepth < 2) {\n    return {\n      firstRowIndex: topLevelFirstRowIndex,\n      lastRowIndex: topLevelLastRowIndex\n    };\n  }\n\n  const topLevelFirstRow = visibleSortedTopLevelRowEntries[topLevelFirstRowIndex];\n  const topLevelRowsInCurrentPageCount = topLevelLastRowIndex - topLevelFirstRowIndex + 1;\n  const firstRowIndex = visibleSortedRowEntries.findIndex(row => row.id === topLevelFirstRow.id);\n  let lastRowIndex = firstRowIndex;\n  let topLevelRowAdded = 0;\n\n  while (lastRowIndex < visibleSortedRowEntries.length && topLevelRowAdded <= topLevelRowsInCurrentPageCount) {\n    const row = visibleSortedRowEntries[lastRowIndex];\n    const depth = rowTree[row.id].depth;\n\n    if (topLevelRowAdded < topLevelRowsInCurrentPageCount || depth > 0) {\n      lastRowIndex += 1;\n    }\n\n    if (depth === 0) {\n      topLevelRowAdded += 1;\n    }\n  }\n\n  return {\n    firstRowIndex,\n    lastRowIndex: lastRowIndex - 1\n  };\n});\n/**\n * Get the id and the model of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\n\nexport const gridPaginatedVisibleSortedGridRowEntriesSelector = createSelector(gridVisibleSortedRowEntriesSelector, gridPaginationRowRangeSelector, (visibleSortedRowEntries, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n\n  return visibleSortedRowEntries.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n/**\n * Get the id of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\n\nexport const gridPaginatedVisibleSortedGridRowIdsSelector = createSelector(gridVisibleSortedRowIdsSelector, gridPaginationRowRangeSelector, (visibleSortedRowIds, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n\n  return visibleSortedRowIds.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"colDef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridTabIndexColumnHeaderSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { gridSelectionStateSelector } from '../../hooks/features/selection/gridSelectionSelector';\nimport { isNavigationKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridVisibleSortedRowIdsSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridHeaderCheckbox = /*#__PURE__*/React.forwardRef(function GridHeaderCheckbox(props, ref) {\n  var _rootProps$components;\n\n  const other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [, forceUpdate] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const selection = useGridSelector(apiRef, gridSelectionStateSelector);\n  const visibleRowIds = useGridSelector(apiRef, gridVisibleSortedRowIdsSelector);\n  const paginatedVisibleRowIds = useGridSelector(apiRef, gridPaginatedVisibleSortedGridRowIdsSelector);\n  const filteredSelection = React.useMemo(() => {\n    if (typeof rootProps.isRowSelectable !== 'function') {\n      return selection;\n    }\n\n    return selection.filter(id => {\n      // The row might have been deleted\n      if (!apiRef.current.getRow(id)) {\n        return false;\n      }\n\n      return rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n    });\n  }, [apiRef, rootProps.isRowSelectable, selection]); // All the rows that could be selected / unselected by toggling this checkbox\n\n  const selectionCandidates = React.useMemo(() => {\n    const rowIds = !rootProps.pagination || !rootProps.checkboxSelectionVisibleOnly ? visibleRowIds : paginatedVisibleRowIds; // Convert to an object to make O(1) checking if a row exists or not\n    // TODO create selector that returns visibleRowIds/paginatedVisibleRowIds as an object\n\n    return rowIds.reduce((acc, id) => {\n      acc[id] = true;\n      return acc;\n    }, {});\n  }, [rootProps.pagination, rootProps.checkboxSelectionVisibleOnly, paginatedVisibleRowIds, visibleRowIds]); // Amount of rows selected and that are visible in the current page\n\n  const currentSelectionSize = React.useMemo(() => filteredSelection.filter(id => selectionCandidates[id]).length, [filteredSelection, selectionCandidates]);\n  const isIndeterminate = currentSelectionSize > 0 && currentSelectionSize < Object.keys(selectionCandidates).length;\n  const isChecked = currentSelectionSize > 0;\n\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked\n    };\n    apiRef.current.publishEvent('headerSelectionCheckboxChange', params);\n  };\n\n  const tabIndex = tabIndexState !== null && tabIndexState.field === props.field ? 0 : -1;\n  React.useLayoutEffect(() => {\n    const element = apiRef.current.getColumnHeaderElement(props.field);\n\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [tabIndex, apiRef, props.field]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // imperative toggle the checkbox because Space is disable by some preventDefault\n      apiRef.current.publishEvent('headerSelectionCheckboxChange', {\n        value: !isChecked\n      });\n    } // TODO v6 remove columnHeaderNavigationKeyDown events which are not used internally anymore\n\n\n    if (isNavigationKey(event.key) && !event.shiftKey) {\n      apiRef.current.publishEvent('columnHeaderNavigationKeyDown', props, event);\n    }\n  }, [apiRef, props, isChecked]);\n  const handleSelectionChange = React.useCallback(() => {\n    forceUpdate(p => !p);\n  }, []);\n  React.useEffect(() => {\n    return apiRef.current.subscribeEvent('selectionChange', handleSelectionChange);\n  }, [apiRef, handleSelectionChange]);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectAllRows' : 'checkboxSelectionSelectAllRows');\n  return /*#__PURE__*/_jsx(rootProps.components.BaseCheckbox, _extends({\n    ref: ref,\n    indeterminate: isIndeterminate,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    tabIndex: tabIndex,\n    onKeyDown: handleKeyDown\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderCheckbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The column of the current header component.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the column that triggered the event\n   */\n  field: PropTypes.string.isRequired\n} : void 0;\nexport { GridHeaderCheckbox };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellCheckboxRenderer } from '../components/columnSelection/GridCellCheckboxRenderer';\nimport { GridHeaderCheckbox } from '../components/columnSelection/GridHeaderCheckbox';\nimport { selectedIdsLookupSelector } from '../hooks/features/selection/gridSelectionSelector';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_CHECKBOX_SELECTION_FIELD = '__check__';\nexport const GRID_CHECKBOX_SELECTION_COL_DEF = _extends({}, GRID_BOOLEAN_COL_DEF, {\n  field: GRID_CHECKBOX_SELECTION_FIELD,\n  type: 'checkboxSelection',\n  width: 50,\n  resizable: false,\n  sortable: false,\n  filterable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  getApplyQuickFilterFn: undefined,\n  valueGetter: params => {\n    const selectionLookup = selectedIdsLookupSelector(params.api.state, params.api.instanceId);\n    return selectionLookup[params.id] !== undefined;\n  },\n  renderHeader: params => /*#__PURE__*/_jsx(GridHeaderCheckbox, _extends({}, params)),\n  renderCell: params => /*#__PURE__*/_jsx(GridCellCheckboxRenderer, _extends({}, params))\n});","import { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../../colDef';\nimport { buildWarning } from '../../../../utils/warning';\n\nconst serializeCellValue = (value, delimiterCharacter) => {\n  if (typeof value === 'string') {\n    const formattedValue = value.replace(/\"/g, '\"\"'); // Make sure value containing delimiter or line break won't be split into multiple rows\n\n    if ([delimiterCharacter, '\\n', '\\r'].some(delimiter => formattedValue.includes(delimiter))) {\n      return `\"${formattedValue}\"`;\n    }\n\n    return formattedValue;\n  }\n\n  return value;\n};\n\nconst objectFormattedValueWarning = buildWarning(['MUI: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\n\nconst serializeRow = (id, columns, getCellParams, delimiterCharacter) => columns.map(column => {\n  const cellParams = getCellParams(id, column.field);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (String(cellParams.formattedValue) === '[object Object]') {\n      objectFormattedValueWarning();\n    }\n  }\n\n  return serializeCellValue(cellParams.formattedValue, delimiterCharacter);\n});\n\nexport function buildCSV(options) {\n  const {\n    columns,\n    rowIds,\n    getCellParams,\n    delimiterCharacter,\n    includeHeaders\n  } = options;\n  const CSVBody = rowIds.reduce((acc, id) => `${acc}${serializeRow(id, columns, getCellParams, delimiterCharacter).join(delimiterCharacter)}\\r\\n`, '').trim();\n\n  if (!includeHeaders) {\n    return CSVBody;\n  }\n\n  const CSVHead = `${columns.filter(column => column.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field).map(column => serializeCellValue(column.headerName || column.field, delimiterCharacter)).join(delimiterCharacter)}\\r\\n`;\n  return `${CSVHead}${CSVBody}`.trim();\n}","import { gridColumnDefinitionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns';\nimport { gridFilteredSortedRowIdsSelector } from '../filter';\nexport const getColumnsToExport = ({\n  apiRef,\n  options\n}) => {\n  const columns = gridColumnDefinitionsSelector(apiRef);\n\n  if (options.fields) {\n    return options.fields.map(field => columns.find(column => column.field === field)).filter(column => !!column);\n  }\n\n  const validColumns = options.allColumns ? columns : gridVisibleColumnDefinitionsSelector(apiRef);\n  return validColumns.filter(column => !column.disableExport);\n};\nexport const defaultGetRowsToExport = ({\n  apiRef\n}) => {\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  const selectedRows = apiRef.current.getSelectedRows();\n\n  if (selectedRows.size > 0) {\n    return filteredSortedRowIds.filter(id => selectedRows.has(id));\n  }\n\n  return filteredSortedRowIds;\n};","/**\n * Filter item definition interface.\n */\nvar GridLinkOperator;\n\n(function (GridLinkOperator) {\n  GridLinkOperator[\"And\"] = \"and\";\n  GridLinkOperator[\"Or\"] = \"or\";\n})(GridLinkOperator || (GridLinkOperator = {}));\n\nexport { GridLinkOperator };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"csvOptions\", \"printOptions\", \"excelOptions\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridToolbarExportContainer } from './GridToolbarExportContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridCsvExportMenuItem = props => {\n  const apiRef = useGridApiContext();\n  const {\n    hideMenu,\n    options\n  } = props;\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: () => {\n      apiRef.current.exportDataAsCsv(options);\n      hideMenu == null ? void 0 : hideMenu();\n    },\n    children: apiRef.current.getLocaleText('toolbarExportCSV')\n  });\n};\nexport const GridPrintExportMenuItem = props => {\n  const apiRef = useGridApiContext();\n  const {\n    hideMenu,\n    options\n  } = props;\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: () => {\n      apiRef.current.exportDataAsPrint(options);\n      hideMenu == null ? void 0 : hideMenu();\n    },\n    children: apiRef.current.getLocaleText('toolbarExportPrint')\n  });\n};\nconst GridToolbarExport = /*#__PURE__*/React.forwardRef(function GridToolbarExport(props, ref) {\n  const {\n    csvOptions = {},\n    printOptions = {},\n    excelOptions\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('exportMenu', [], {\n    excelOptions,\n    csvOptions,\n    printOptions\n  }).sort((a, b) => a.componentName > b.componentName ? 1 : -1);\n\n  if (preProcessedButtons.length === 0) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridToolbarExportContainer, _extends({}, other, {\n    ref: ref,\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button.component, {\n      key: index\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExport.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  csvOptions: PropTypes.object,\n  printOptions: PropTypes.object\n} : void 0;\nexport { GridToolbarExport };","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { exportAs } from '../../../utils/exportAs';\nimport { buildCSV } from './serializers/csvSerializer';\nimport { getColumnsToExport, defaultGetRowsToExport } from './utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridCsvExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const useGridCsvExport = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridCsvExport');\n  const getDataAsCsv = React.useCallback((options = {}) => {\n    var _options$getRowsToExp, _options$includeHeade;\n\n    logger.debug(`Get data as CSV`);\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const getRowsToExport = (_options$getRowsToExp = options.getRowsToExport) != null ? _options$getRowsToExp : defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    return buildCSV({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      getCellParams: apiRef.current.getCellParams,\n      delimiterCharacter: options.delimiter || ',',\n      includeHeaders: (_options$includeHeade = options.includeHeaders) != null ? _options$includeHeade : true\n    });\n  }, [logger, apiRef]);\n  const exportDataAsCsv = React.useCallback(options => {\n    logger.debug(`Export data as CSV`);\n    const csv = getDataAsCsv(options);\n    const blob = new Blob([options != null && options.utf8WithBom ? new Uint8Array([0xef, 0xbb, 0xbf]) : '', csv], {\n      type: 'text/csv'\n    });\n    exportAs(blob, 'csv', options == null ? void 0 : options.fileName);\n  }, [logger, getDataAsCsv]);\n  const csvExportApi = {\n    getDataAsCsv,\n    exportDataAsCsv\n  };\n  useGridApiMethod(apiRef, csvExportApi, 'GridCsvExportApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    var _options$csvOptions;\n\n    if ((_options$csvOptions = options.csvOptions) != null && _options$csvOptions.disableToolbarButton) {\n      return initialValue;\n    }\n\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridCsvExportMenuItem, {\n        options: options.csvOptions\n      }),\n      componentName: 'csvExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","/**\n * I have hesitated to use https://github.com/eligrey/FileSaver.js.\n * If we get bug reports that this project solves, we should consider using it.\n *\n * Related resources.\n * https://blog.logrocket.com/programmatic-file-downloads-in-the-browser-9a5186298d5c/\n * https://github.com/mbrn/filefy/blob/ec4ed0b7415d93be7158c23029f2ea1fa0b8e2d9/src/core/BaseBuilder.ts\n * https://unpkg.com/browse/@progress/kendo-file-saver@1.0.7/dist/es/save-as.js\n * https://github.com/ag-grid/ag-grid/blob/9565c219b6210aa85fa833c929d0728f9d163a91/community-modules/csv-export/src/csvExport/downloader.ts\n */\nexport function exportAs(blob, extension = 'csv', filename = document.title || 'untitled') {\n  const fullName = `${filename}.${extension}`; // Test download attribute first\n  // https://github.com/eligrey/FileSaver.js/issues/193\n\n  if ('download' in HTMLAnchorElement.prototype) {\n    // Create an object URL for the blob object\n    const url = URL.createObjectURL(blob); // Create a new anchor element\n\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fullName; // Programmatically trigger a click on the anchor element\n    // Useful if you want the download to happen automatically\n    // Without attaching the anchor element to the DOM\n\n    a.click(); // https://github.com/eligrey/FileSaver.js/issues/205\n\n    setTimeout(() => {\n      URL.revokeObjectURL(url);\n    });\n    return;\n  }\n\n  throw new Error('MUI: exportAs not supported');\n}","export const gridRowsMetaSelector = state => state.rowsMeta;","export const GridFeatureModeConstant = {\n  client: 'client',\n  server: 'server'\n};","import { GridLinkOperator } from '../../../models/gridFilterItem';\nexport const getDefaultGridFilterModel = () => ({\n  items: [],\n  linkOperator: GridLinkOperator.And,\n  quickFilterValues: [],\n  quickFilterLogicOperator: GridLinkOperator.And\n});","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterStrategyProcessor = (apiRef, strategyName, group, processor) => {\n  const registerPreProcessor = React.useCallback(() => {\n    apiRef.current.unstable_registerStrategyProcessor(strategyName, group, processor);\n  }, [apiRef, processor, group, strategyName]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridLinkOperator } from '../../../models';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridColumnFieldsSelector, gridColumnLookupSelector } from '../columns';\n\n/**\n * Adds default values to the optional fields of a filter items.\n * @param {GridFilterItem} item The raw filter item.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @return {GridFilterItem} The clean filter item with an uniq ID and an always-defined operatorValue.\n * TODO: Make the typing reflect the different between GridFilterInputItem and GridFilterItem.\n */\nexport const cleanFilterItem = (item, apiRef) => {\n  const cleanItem = _extends({}, item);\n\n  if (cleanItem.id == null) {\n    cleanItem.id = Math.round(Math.random() * 1e5);\n  }\n\n  if (cleanItem.operatorValue == null) {\n    // Selects a default operator\n    // We don't use `apiRef.current.getColumn` because it is not ready during state initialization\n    const column = gridColumnLookupSelector(apiRef)[cleanItem.columnField];\n    cleanItem.operatorValue = column && column.filterOperators[0].value;\n  }\n\n  return cleanItem;\n};\nconst filterModelDisableMultiColumnsFilteringWarning = buildWarning(['MUI: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\nconst filterModelMissingItemIdWarning = buildWarning(\"MUI: The 'id' field is required on `filterModel.items` when you use multiple filters.\", 'error');\nconst filterModelMissingItemOperatorWarning = buildWarning(['MUI: One of your filtering item have no `operatorValue` provided.', 'This property will become required on `@mui/x-data-grid@6.X`.']);\nexport const sanitizeFilterModel = (model, disableMultipleColumnsFiltering, apiRef) => {\n  const hasSeveralItems = model.items.length > 1;\n  let items;\n\n  if (hasSeveralItems && disableMultipleColumnsFiltering) {\n    filterModelDisableMultiColumnsFilteringWarning();\n    items = [model.items[0]];\n  } else {\n    items = model.items;\n  }\n\n  const hasItemsWithoutIds = hasSeveralItems && items.some(item => item.id == null);\n  const hasItemWithoutOperator = items.some(item => item.operatorValue == null);\n\n  if (hasItemsWithoutIds) {\n    filterModelMissingItemIdWarning();\n  }\n\n  if (hasItemWithoutOperator) {\n    filterModelMissingItemOperatorWarning();\n  }\n\n  if (hasItemWithoutOperator || hasItemsWithoutIds) {\n    return _extends({}, model, {\n      items: items.map(item => cleanFilterItem(item, apiRef))\n    });\n  }\n\n  if (model.items !== items) {\n    return _extends({}, model, {\n      items\n    });\n  }\n\n  return model;\n};\nexport const mergeStateWithFilterModel = (filterModel, disableMultipleColumnsFiltering, apiRef) => filteringState => _extends({}, filteringState, {\n  filterModel: sanitizeFilterModel(filterModel, disableMultipleColumnsFiltering, apiRef)\n});\n/**\n * Generates a method to easily check if a row is matching the current filter model.\n * @param {GridFilterModel} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\n\nexport const buildAggregatedFilterItemsApplier = (filterModel, apiRef) => {\n  const {\n    items,\n    linkOperator = GridLinkOperator.And\n  } = filterModel;\n\n  const getFilterCallbackFromItem = filterItem => {\n    if (!filterItem.columnField || !filterItem.operatorValue) {\n      return null;\n    }\n\n    const column = apiRef.current.getColumn(filterItem.columnField);\n\n    if (!column) {\n      return null;\n    }\n\n    let parsedValue;\n\n    if (column.valueParser) {\n      var _filterItem$value;\n\n      const parser = column.valueParser;\n      parsedValue = Array.isArray(filterItem.value) ? (_filterItem$value = filterItem.value) == null ? void 0 : _filterItem$value.map(x => parser(x)) : parser(filterItem.value);\n    } else {\n      parsedValue = filterItem.value;\n    }\n\n    const newFilterItem = _extends({}, filterItem, {\n      value: parsedValue\n    });\n\n    const filterOperators = column.filterOperators;\n\n    if (!(filterOperators != null && filterOperators.length)) {\n      throw new Error(`MUI: No filter operators found for column '${column.field}'.`);\n    }\n\n    const filterOperator = filterOperators.find(operator => operator.value === newFilterItem.operatorValue);\n\n    if (!filterOperator) {\n      throw new Error(`MUI: No filter operator found for column '${column.field}' and operator value '${newFilterItem.operatorValue}'.`);\n    }\n\n    const applyFilterOnRow = filterOperator.getApplyFilterFn(newFilterItem, column);\n\n    if (typeof applyFilterOnRow !== 'function') {\n      return null;\n    }\n\n    const fn = rowId => {\n      const cellParams = apiRef.current.getCellParams(rowId, newFilterItem.columnField);\n      return applyFilterOnRow(cellParams);\n    };\n\n    return {\n      fn,\n      item: newFilterItem\n    };\n  };\n\n  const appliers = items.map(getFilterCallbackFromItem).filter(callback => !!callback);\n\n  if (appliers.length === 0) {\n    return null;\n  }\n\n  return (rowId, shouldApplyFilter) => {\n    const filteredAppliers = shouldApplyFilter ? appliers.filter(applier => shouldApplyFilter(applier.item.columnField)) : appliers; // Return `false` as soon as we have a failing filter\n\n    if (linkOperator === GridLinkOperator.And) {\n      return filteredAppliers.every(applier => applier.fn(rowId));\n    } // Return `true` as soon as we have a passing filter\n\n\n    return filteredAppliers.some(applier => applier.fn(rowId));\n  };\n};\n/**\n * Generates a method to easily check if a row is matching the current quick filter.\n * @param {any[]} values The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\n\nexport const buildAggregatedQuickFilterApplier = (filterModel, apiRef) => {\n  const {\n    quickFilterValues = [],\n    quickFilterLogicOperator = GridLinkOperator.And\n  } = filterModel;\n\n  if (quickFilterValues.length === 0) {\n    return null;\n  }\n\n  const columnsFields = gridColumnFieldsSelector(apiRef);\n  const appliersPerColumnField = {};\n  columnsFields.forEach(field => {\n    const column = apiRef.current.getColumn(field);\n    const getApplyQuickFilterFn = column == null ? void 0 : column.getApplyQuickFilterFn;\n\n    if (!getApplyQuickFilterFn) {\n      return;\n    }\n\n    appliersPerColumnField[field] = quickFilterValues.map(value => getApplyQuickFilterFn(value, column, apiRef));\n  }); // If some value does not have an applier we ignore them\n\n  const sanitizedQuickFilterValues = quickFilterValues.filter((value, index) => Object.keys(appliersPerColumnField).some(field => appliersPerColumnField[field][index] != null));\n  return (rowId, shouldApplyFilter) => {\n    const usedCellParams = {};\n    const columnsFieldsToFilter = [];\n    Object.keys(appliersPerColumnField).forEach(columnField => {\n      if (!shouldApplyFilter || shouldApplyFilter(columnField)) {\n        usedCellParams[columnField] = apiRef.current.getCellParams(rowId, columnField);\n        columnsFieldsToFilter.push(columnField);\n      }\n    }); // Return `false` as soon as we have a quick filter value that does not match any column\n\n    if (quickFilterLogicOperator === GridLinkOperator.And) {\n      return sanitizedQuickFilterValues.every((value, index) => columnsFieldsToFilter.some(field => {\n        var _appliersPerColumnFie, _appliersPerColumnFie2;\n\n        if (appliersPerColumnField[field][index] == null) {\n          return false;\n        }\n\n        return (_appliersPerColumnFie = (_appliersPerColumnFie2 = appliersPerColumnField[field])[index]) == null ? void 0 : _appliersPerColumnFie.call(_appliersPerColumnFie2, usedCellParams[field]);\n      }));\n    } // Return `true` as soon as we have have a quick filter value that match any column\n\n\n    return sanitizedQuickFilterValues.some((value, index) => columnsFieldsToFilter.some(field => {\n      var _appliersPerColumnFie3, _appliersPerColumnFie4;\n\n      if (appliersPerColumnField[field][index] == null) {\n        return false;\n      }\n\n      return (_appliersPerColumnFie3 = (_appliersPerColumnFie4 = appliersPerColumnField[field])[index]) == null ? void 0 : _appliersPerColumnFie3.call(_appliersPerColumnFie4, usedCellParams[field]);\n    }));\n  };\n};\nexport const buildAggregatedFilterApplier = (filterModel, apiRef) => {\n  const isRowMatchingFilterItems = buildAggregatedFilterItemsApplier(filterModel, apiRef);\n  const isRowMatchingQuickFilter = buildAggregatedQuickFilterApplier(filterModel, apiRef);\n\n  if (isRowMatchingFilterItems == null && isRowMatchingQuickFilter == null) {\n    return null;\n  }\n\n  if (isRowMatchingFilterItems == null) {\n    return isRowMatchingQuickFilter;\n  }\n\n  if (isRowMatchingQuickFilter == null) {\n    return isRowMatchingFilterItems;\n  }\n\n  return (rowId, shouldApplyFilter) => isRowMatchingFilterItems(rowId, shouldApplyFilter) && isRowMatchingQuickFilter(rowId, shouldApplyFilter);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridFeatureModeConstant } from '../../../models/gridFeatureMode';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridFilterableColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { GridPreferencePanelsValue } from '../preferencesPanel/gridPreferencePanelsValue';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { gridFilterModelSelector, gridVisibleSortedRowEntriesSelector } from './gridFilterSelector';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { gridRowIdsSelector } from '../rows';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\nimport { buildAggregatedFilterApplier, sanitizeFilterModel, mergeStateWithFilterModel, cleanFilterItem } from './gridFilterUtils';\nimport { isDeepEqual } from '../../../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const filterStateInitializer = (state, props, apiRef) => {\n  var _ref, _props$filterModel, _props$initialState, _props$initialState$f;\n\n  const filterModel = (_ref = (_props$filterModel = props.filterModel) != null ? _props$filterModel : (_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$f = _props$initialState.filter) == null ? void 0 : _props$initialState$f.filterModel) != null ? _ref : getDefaultGridFilterModel();\n  return _extends({}, state, {\n    filter: {\n      filterModel: sanitizeFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef),\n      visibleRowsLookup: {},\n      filteredDescendantCountLookup: {}\n    }\n  });\n};\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n * @requires useGridRows (event)\n */\n\nexport const useGridFilter = (apiRef, props) => {\n  var _props$componentsProp2;\n\n  const logger = useGridLogger(apiRef, 'useGridFilter');\n  apiRef.current.unstable_registerControlState({\n    stateId: 'filter',\n    propModel: props.filterModel,\n    propOnChange: props.onFilterModelChange,\n    stateSelector: gridFilterModelSelector,\n    changeEvent: 'filterModelChange'\n  });\n  const updateFilteredRows = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const filterModel = gridFilterModelSelector(state, apiRef.current.instanceId);\n      const isRowMatchingFilters = props.filterMode === GridFeatureModeConstant.client ? buildAggregatedFilterApplier(filterModel, apiRef) : null;\n      const filteringResult = apiRef.current.unstable_applyStrategyProcessor('filtering', {\n        isRowMatchingFilters\n      });\n      return _extends({}, state, {\n        filter: _extends({}, state.filter, filteringResult)\n      });\n    });\n    apiRef.current.publishEvent('filteredRowsSet');\n  }, [props.filterMode, apiRef]);\n  /**\n   * API METHODS\n   */\n\n  const applyFilters = React.useCallback(() => {\n    updateFilteredRows();\n    apiRef.current.forceUpdate();\n  }, [apiRef, updateFilteredRows]);\n  const upsertFilterItem = React.useCallback(item => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = [...filterModel.items];\n    const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n\n    if (itemIndex === -1) {\n      items.push(item);\n    } else {\n      items[itemIndex] = item;\n    }\n\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItem');\n  }, [apiRef]);\n  const upsertFilterItems = React.useCallback(items => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const existingItems = [...filterModel.items];\n    items.forEach(item => {\n      const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n\n      if (itemIndex === -1) {\n        existingItems.push(item);\n      } else {\n        existingItems[itemIndex] = item;\n      }\n    });\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItems');\n  }, [apiRef]);\n  const deleteFilterItem = React.useCallback(itemToDelete => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = filterModel.items.filter(item => item.id !== itemToDelete.id);\n\n    if (items.length === filterModel.items.length) {\n      return;\n    }\n\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'deleteFilterItem');\n  }, [apiRef]);\n  const showFilterPanel = React.useCallback(targetColumnField => {\n    logger.debug('Displaying filter panel');\n\n    if (targetColumnField) {\n      const filterModel = gridFilterModelSelector(apiRef);\n      const filterItemsWithValue = filterModel.items.filter(item => item.value !== undefined);\n      let newFilterItems;\n      const filterItemOnTarget = filterItemsWithValue.find(item => item.columnField === targetColumnField);\n\n      if (filterItemOnTarget) {\n        newFilterItems = filterItemsWithValue;\n      } else if (props.disableMultipleColumnsFiltering) {\n        newFilterItems = [cleanFilterItem({\n          columnField: targetColumnField\n        }, apiRef)];\n      } else {\n        newFilterItems = [...filterItemsWithValue, cleanFilterItem({\n          columnField: targetColumnField\n        }, apiRef)];\n      }\n\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n\n    apiRef.current.showPreferences(GridPreferencePanelsValue.filters);\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const hideFilterPanel = React.useCallback(() => {\n    logger.debug('Hiding filter panel');\n    apiRef.current.hidePreferences();\n  }, [apiRef, logger]);\n  const setFilterLinkOperator = React.useCallback(linkOperator => {\n    const filterModel = gridFilterModelSelector(apiRef);\n\n    if (filterModel.linkOperator === linkOperator) {\n      return;\n    }\n\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      linkOperator\n    }), 'changeLogicOperator');\n  }, [apiRef]);\n  const setQuickFilterValues = React.useCallback(values => {\n    const filterModel = gridFilterModelSelector(apiRef);\n\n    if (isDeepEqual(filterModel.quickFilterValues, values)) {\n      return;\n    }\n\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      quickFilterValues: [...values]\n    }));\n  }, [apiRef]);\n  const setFilterModel = React.useCallback((model, reason) => {\n    const currentModel = gridFilterModelSelector(apiRef);\n\n    if (currentModel !== model) {\n      logger.debug('Setting filter model');\n      apiRef.current.unstable_updateControlState('filter', mergeStateWithFilterModel(model, props.disableMultipleColumnsFiltering, apiRef), reason);\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const getVisibleRowModels = React.useCallback(() => {\n    const visibleSortedRows = gridVisibleSortedRowEntriesSelector(apiRef);\n    return new Map(visibleSortedRows.map(row => [row.id, row.model]));\n  }, [apiRef]);\n  const filterApi = {\n    setFilterLinkOperator,\n    unstable_applyFilters: applyFilters,\n    deleteFilterItem,\n    upsertFilterItem,\n    upsertFilterItems,\n    setFilterModel,\n    showFilterPanel,\n    hideFilterPanel,\n    getVisibleRowModels,\n    setQuickFilterValues\n  };\n  useGridApiMethod(apiRef, filterApi, 'GridFilterApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback(prevState => {\n    const filterModelToExport = gridFilterModelSelector(apiRef);\n\n    if (filterModelToExport.items.length === 0 && filterModelToExport.linkOperator === getDefaultGridFilterModel().linkOperator) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      filter: {\n        filterModel: filterModelToExport\n      }\n    });\n  }, [apiRef]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n\n    const filterModel = (_context$stateToResto = context.stateToRestore.filter) == null ? void 0 : _context$stateToResto.filterModel;\n\n    if (filterModel == null) {\n      return params;\n    }\n\n    apiRef.current.unstable_updateControlState('filter', mergeStateWithFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef), 'restoreState');\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.unstable_applyFilters]\n    });\n  }, [apiRef, props.disableMultipleColumnsFiltering]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.filters) {\n      var _props$componentsProp;\n\n      const FilterPanel = props.components.FilterPanel;\n      return /*#__PURE__*/_jsx(FilterPanel, _extends({}, (_props$componentsProp = props.componentsProps) == null ? void 0 : _props$componentsProp.filterPanel));\n    }\n\n    return initialValue;\n  }, [props.components.FilterPanel, (_props$componentsProp2 = props.componentsProps) == null ? void 0 : _props$componentsProp2.filterPanel]);\n  const flatFilteringMethod = React.useCallback(params => {\n    if (props.filterMode === GridFeatureModeConstant.client && params.isRowMatchingFilters) {\n      const rowIds = gridRowIdsSelector(apiRef);\n      const filteredRowsLookup = {};\n\n      for (let i = 0; i < rowIds.length; i += 1) {\n        const rowId = rowIds[i];\n        filteredRowsLookup[rowId] = params.isRowMatchingFilters(rowId);\n      }\n\n      return {\n        filteredRowsLookup,\n        // For flat tree, the `visibleRowsLookup` and the `filteredRowsLookup` since no row is collapsed.\n        visibleRowsLookup: filteredRowsLookup,\n        filteredDescendantCountLookup: {}\n      };\n    }\n\n    return {\n      visibleRowsLookup: {},\n      filteredRowsLookup: {},\n      filteredDescendantCountLookup: {}\n    };\n  }, [apiRef, props.filterMode]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'filtering', flatFilteringMethod);\n  /**\n   * EVENTS\n   */\n\n  const handleColumnsChange = React.useCallback(() => {\n    logger.debug('onColUpdated - GridColumns changed, applying filters');\n    const filterModel = gridFilterModelSelector(apiRef);\n    const filterableColumnsLookup = gridFilterableColumnLookupSelector(apiRef);\n    const newFilterItems = filterModel.items.filter(item => item.columnField && filterableColumnsLookup[item.columnField]);\n\n    if (newFilterItems.length < filterModel.items.length) {\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n  }, [apiRef, logger]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'filtering') {\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef]); // Do not call `apiRef.current.forceUpdate` to avoid re-render before updating the sorted rows.\n  // Otherwise, the state is not consistent during the render\n\n  useGridApiEventHandler(apiRef, 'rowsSet', updateFilteredRows);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', apiRef.current.unstable_applyFilters);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  /**\n   * 1ST RENDER\n   */\n\n  useFirstRender(() => {\n    apiRef.current.unstable_applyFilters();\n  });\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (props.filterModel !== undefined) {\n      apiRef.current.setFilterModel(props.filterModel);\n    }\n  }, [apiRef, logger, props.filterModel]);\n};","import * as React from 'react';\nimport { gridPaginationRowRangeSelector, gridPaginatedVisibleSortedGridRowEntriesSelector } from '../features/pagination/gridPaginationSelector';\nimport { gridVisibleSortedRowEntriesSelector } from '../features/filter/gridFilterSelector';\nexport const getVisibleRows = (apiRef, props) => {\n  let rows;\n  let range;\n\n  if (props.pagination && props.paginationMode === 'client') {\n    range = gridPaginationRowRangeSelector(apiRef);\n    rows = gridPaginatedVisibleSortedGridRowEntriesSelector(apiRef);\n  } else {\n    rows = gridVisibleSortedRowEntriesSelector(apiRef);\n\n    if (rows.length === 0) {\n      range = null;\n    } else {\n      range = {\n        firstRowIndex: 0,\n        lastRowIndex: rows.length - 1\n      };\n    }\n  }\n\n  return {\n    rows,\n    range\n  };\n};\n/**\n * Computes the list of rows that are reachable by scroll.\n * Depending on whether pagination is enabled, it will return the rows in the current page.\n * - If the pagination is disabled or in server mode, it equals all the visible rows.\n * - If the row tree has several layers, it contains up to `state.pageSize` top level rows and all their descendants.\n * - If the row tree is flat, it only contains up to `state.pageSize` rows.\n */\n\nexport const useGridVisibleRows = (apiRef, props) => {\n  const response = getVisibleRows(apiRef, props);\n  return React.useMemo(() => ({\n    rows: response.rows,\n    range: response.range\n  }), [response.rows, response.range]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { ownerDocument } from '@mui/material/utils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { gridFocusCellSelector } from './gridFocusStateSelector';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { clamp } from '../../../utils/utils';\nexport const focusStateInitializer = state => _extends({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null\n  }\n});\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\n\nexport const useGridFocus = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = gridFocusCellSelector(apiRef);\n\n    if ((focusedCell == null ? void 0 : focusedCell.id) === id && (focusedCell == null ? void 0 : focusedCell.field) === field) {\n      return;\n    }\n\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate(); // The row might have been deleted\n\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    if (cell) {\n      apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n    }\n\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          cell: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    let rowIndexToFocus = apiRef.current.getRowIndexRelativeToVisibleRows(id);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n\n      if (rowIndexToFocus < currentPage.rows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPage.rows.length - 1);\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const rowToFocus = currentPage.rows[rowIndexToFocus];\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || isNavigationKey(event.key)) {\n      return;\n    }\n\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback(() => {\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => _extends({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseUp = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = gridFocusCellSelector(apiRef);\n\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n\n      return;\n    }\n\n    if ((cellParams == null ? void 0 : cellParams.id) === focusedCell.id && (cellParams == null ? void 0 : cellParams.field) === focusedCell.field) {\n      return;\n    }\n\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n\n    if (cellElement != null && cellElement.contains(event.target)) {\n      return;\n    } // The row might have been deleted during the click\n\n\n    if (!apiRef.current.getRow(focusedCell.id)) {\n      return;\n    } // There's a focused cell but another cell was clicked\n    // Publishes an event to notify that the focus was lost\n\n\n    apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(focusedCell.id, focusedCell.field), event);\n\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null\n        }\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n\n    const cell = gridFocusCellSelector(apiRef);\n\n    if ((cell == null ? void 0 : cell.id) !== params.id || (cell == null ? void 0 : cell.field) !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = gridFocusCellSelector(apiRef); // If the focused cell is in a row which does not exist anymore, then remove the focus\n\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null\n        }\n      }));\n    }\n  }, [apiRef]);\n  useGridApiMethod(apiRef, {\n    setCellFocus,\n    setColumnHeaderFocus,\n    unstable_moveFocusToRelativeCell: moveFocusToRelativeCell\n  }, 'GridFocusApi');\n  React.useEffect(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('click', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('click', handleDocumentClick);\n    };\n  }, [apiRef, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseUp', handleCellMouseUp);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n};","// Can't import from pro package - hence duplication\nexport const GRID_DETAIL_PANEL_TOGGLE_FIELD = '__detail_panel_toggle__';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler, useGridSelector } from '../../utils';\nimport { gridPageSizeSelector } from './gridPaginationSelector';\nimport { gridDensityRowHeightSelector } from '../density';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\n\nconst mergeStateWithPageSize = pageSize => state => _extends({}, state, {\n  pagination: _extends({}, state.pagination, {\n    pageSize\n  })\n});\n/**\n * @requires useGridDimensions (event) - can be after\n */\n\n\nexport const useGridPageSize = (apiRef, props) => {\n  var _props$initialState2, _props$initialState2$;\n\n  const logger = useGridLogger(apiRef, 'useGridPageSize');\n  const rowHeight = useGridSelector(apiRef, gridDensityRowHeightSelector);\n  apiRef.current.unstable_registerControlState({\n    stateId: 'pageSize',\n    propModel: props.pageSize,\n    propOnChange: props.onPageSizeChange,\n    stateSelector: gridPageSizeSelector,\n    changeEvent: 'pageSizeChange'\n  });\n  /**\n   * API METHODS\n   */\n\n  const setPageSize = React.useCallback(pageSize => {\n    if (pageSize === gridPageSizeSelector(apiRef)) {\n      return;\n    }\n\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setState(mergeStateWithPageSize(pageSize));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n  const pageSizeApi = {\n    setPageSize\n  };\n  useGridApiMethod(apiRef, pageSizeApi, 'GridPageSizeApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback(prevState => {\n    var _props$initialState, _props$initialState$p;\n\n    const pageSizeToExport = gridPageSizeSelector(apiRef);\n    const shouldExportPageSize = // Always export if the page size is controlled\n    props.pageSize != null || // Always export if the page size has been initialized\n    ((_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$p = _props$initialState.pagination) == null ? void 0 : _props$initialState$p.pageSize) != null || // Export if the page size value is not equal to the default value\n    pageSizeToExport !== defaultPageSize(props.autoPageSize);\n\n    if (!shouldExportPageSize) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        pageSize: pageSizeToExport\n      })\n    });\n  }, [apiRef, props.pageSize, (_props$initialState2 = props.initialState) == null ? void 0 : (_props$initialState2$ = _props$initialState2.pagination) == null ? void 0 : _props$initialState2$.pageSize, props.autoPageSize]);\n  /**\n   * TODO: Add error if `prop.autoHeight = true`\n   */\n\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n\n    const pageSize = (_context$stateToResto = context.stateToRestore.pagination) == null ? void 0 : _context$stateToResto.pageSize;\n\n    if (pageSize != null) {\n      apiRef.current.setState(mergeStateWithPageSize(pageSize));\n    }\n\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  /**\n   * EVENTS\n   */\n\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    const dimensions = apiRef.current.getRootDimensions();\n\n    if (!props.autoPageSize || !dimensions) {\n      return;\n    }\n\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (props.pageSize != null && !props.autoPageSize) {\n      apiRef.current.setPageSize(props.pageSize);\n    }\n  }, [apiRef, props.autoPageSize, props.pageSize]);\n  React.useEffect(() => {\n    handleUpdateAutoPageSize();\n  }, [handleUpdateAutoPageSize]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { gridVisibleTopLevelRowCountSelector } from '../filter';\nimport { gridPageSelector, gridPageSizeSelector } from './gridPaginationSelector';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { buildWarning } from '../../../utils/warning';\nexport const getPageCount = (rowCount, pageSize) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n\n  return 0;\n};\n\nconst applyValidPage = paginationState => {\n  if (!paginationState.pageCount) {\n    return paginationState;\n  }\n\n  return _extends({}, paginationState, {\n    page: Math.max(Math.min(paginationState.page, paginationState.pageCount - 1), 0)\n  });\n};\n\nconst mergeStateWithPage = page => state => _extends({}, state, {\n  pagination: applyValidPage(_extends({}, state.pagination, {\n    page\n  }))\n});\n\nconst noRowCountInServerMode = buildWarning([\"MUI: the 'rowCount' prop is undefined while using paginationMode='server'\", 'For more detail, see http://mui.com/components/data-grid/pagination/#basic-implementation'], 'error');\n/**\n * @requires useGridPageSize (event)\n */\n\nexport const useGridPage = (apiRef, props) => {\n  var _props$initialState2, _props$initialState2$;\n\n  const logger = useGridLogger(apiRef, 'useGridPage');\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridVisibleTopLevelRowCountSelector);\n  apiRef.current.unstable_registerControlState({\n    stateId: 'page',\n    propModel: props.page,\n    propOnChange: props.onPageChange,\n    stateSelector: gridPageSelector,\n    changeEvent: 'pageChange'\n  });\n  /**\n   * API METHODS\n   */\n\n  const setPage = React.useCallback(page => {\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setState(mergeStateWithPage(page));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n  const pageApi = {\n    setPage\n  };\n  useGridApiMethod(apiRef, pageApi, 'GridPageApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback(prevState => {\n    var _props$initialState, _props$initialState$p;\n\n    const pageToExport = gridPageSelector(apiRef);\n    const shouldExportPage = // Always export if the page is controlled\n    props.page != null || // Always export if the page has been initialized\n    ((_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$p = _props$initialState.pagination) == null ? void 0 : _props$initialState$p.page) != null || // Export if the page value is not equal to the default value\n    pageToExport !== 0;\n\n    if (!shouldExportPage) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        page: pageToExport\n      })\n    });\n  }, [apiRef, props.page, (_props$initialState2 = props.initialState) == null ? void 0 : (_props$initialState2$ = _props$initialState2.pagination) == null ? void 0 : _props$initialState2$.page]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto, _context$stateToResto2;\n\n    // We apply the constraint even if the page did not change in case the pageSize changed.\n    const page = (_context$stateToResto = (_context$stateToResto2 = context.stateToRestore.pagination) == null ? void 0 : _context$stateToResto2.page) != null ? _context$stateToResto : gridPageSelector(apiRef);\n    apiRef.current.setState(mergeStateWithPage(page));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  /**\n   * EVENTS\n   */\n\n  const handlePageSizeChange = pageSize => {\n    apiRef.current.setState(state => {\n      const pageCount = getPageCount(state.pagination.rowCount, pageSize);\n      return _extends({}, state, {\n        pagination: applyValidPage(_extends({}, state.pagination, {\n          pageCount,\n          page: state.pagination.page\n        }))\n      });\n    });\n    apiRef.current.forceUpdate();\n  };\n\n  const handlePageChange = () => apiRef.current.scrollToIndexes({\n    rowIndex: gridPageSelector(apiRef) * gridPageSizeSelector(apiRef)\n  });\n\n  useGridApiEventHandler(apiRef, 'pageSizeChange', handlePageSizeChange);\n  useGridApiEventHandler(apiRef, 'pageChange', handlePageChange);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (props.paginationMode === 'server' && props.rowCount == null) {\n        noRowCountInServerMode();\n      }\n    }\n  }, [props.rowCount, props.paginationMode]);\n  React.useEffect(() => {\n    apiRef.current.setState(state => {\n      const rowCount = props.rowCount !== undefined ? props.rowCount : visibleTopLevelRowCount;\n      const pageCount = getPageCount(rowCount, state.pagination.pageSize);\n      const page = props.page == null ? state.pagination.page : props.page;\n      return _extends({}, state, {\n        pagination: applyValidPage(_extends({}, state.pagination, {\n          page,\n          rowCount,\n          pageCount\n        }))\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [visibleTopLevelRowCount, props.rowCount, props.page, props.paginationMode, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { useGridPageSize, defaultPageSize } from './useGridPageSize';\nimport { useGridPage, getPageCount } from './useGridPage';\nexport const paginationStateInitializer = (state, props) => {\n  var _props$initialState, _props$initialState$p, _ref, _props$page, _props$initialState2, _props$initialState2$, _props$rowCount, _props$rowCount2;\n\n  let pageSize;\n\n  if (props.pageSize != null) {\n    pageSize = props.pageSize;\n  } else if (((_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$p = _props$initialState.pagination) == null ? void 0 : _props$initialState$p.pageSize) != null) {\n    pageSize = props.initialState.pagination.pageSize;\n  } else {\n    pageSize = defaultPageSize(props.autoPageSize);\n  }\n\n  return _extends({}, state, {\n    pagination: {\n      pageSize,\n      page: (_ref = (_props$page = props.page) != null ? _props$page : (_props$initialState2 = props.initialState) == null ? void 0 : (_props$initialState2$ = _props$initialState2.pagination) == null ? void 0 : _props$initialState2$.page) != null ? _ref : 0,\n      pageCount: getPageCount((_props$rowCount = props.rowCount) != null ? _props$rowCount : 0, pageSize),\n      rowCount: (_props$rowCount2 = props.rowCount) != null ? _props$rowCount2 : 0\n    }\n  });\n};\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\n\nexport const useGridPagination = (apiRef, props) => {\n  useGridPageSize(apiRef, props);\n  useGridPage(apiRef, props);\n};","export const gridPreferencePanelStateSelector = state => state.preferencePanel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPreferencePanelStateSelector } from './gridPreferencePanelSelector';\nexport const preferencePanelStateInitializer = (state, props) => {\n  var _props$initialState$p, _props$initialState;\n\n  return _extends({}, state, {\n    preferencePanel: (_props$initialState$p = (_props$initialState = props.initialState) == null ? void 0 : _props$initialState.preferencePanel) != null ? _props$initialState$p : {\n      open: false\n    }\n  });\n};\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\n\nexport const useGridPreferencesPanel = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n  const hideTimeout = React.useRef();\n  const immediateTimeout = React.useRef();\n  /**\n   * API METHODS\n   */\n\n  const hidePreferences = React.useCallback(() => {\n    logger.debug('Hiding Preferences Panel');\n    const preferencePanelState = gridPreferencePanelStateSelector(apiRef.current.state);\n\n    if (preferencePanelState.openedPanelValue) {\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n    }\n\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: {\n        open: false\n      }\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]); // This is to prevent the preferences from closing when you open a select box or another panel,\n  // The issue is in MUI core V4 => Fixed in V5\n\n  const doNotHidePanel = React.useCallback(() => {\n    immediateTimeout.current = setTimeout(() => clearTimeout(hideTimeout.current), 0);\n  }, []); // This is a hack for the issue with Core V4, by delaying hiding the panel on the clickAwayListener,\n  // we can cancel the action if the trigger element still need the panel...\n\n  const hidePreferencesDelayed = React.useCallback(() => {\n    hideTimeout.current = setTimeout(hidePreferences, 100);\n  }, [hidePreferences]);\n  const showPreferences = React.useCallback(newValue => {\n    logger.debug('Opening Preferences Panel');\n    doNotHidePanel();\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: _extends({}, state.preferencePanel, {\n        open: true,\n        openedPanelValue: newValue\n      })\n    }));\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, doNotHidePanel, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences,\n    hidePreferences: hidePreferencesDelayed\n  }, 'ColumnMenuApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback(prevState => {\n    const preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n\n    if (!preferencePanelToExport.open && !preferencePanelToExport.openedPanelValue) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const preferencePanel = context.stateToRestore.preferencePanel;\n\n    if (preferencePanel != null) {\n      apiRef.current.setState(state => _extends({}, state, {\n        preferencePanel\n      }));\n    }\n\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(hideTimeout.current);\n      clearTimeout(immediateTimeout.current);\n    };\n  }, []);\n};","// TODO v6: rename to gridEditingStateSelector\nexport const gridEditRowsStateSelector = state => state.editRows;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useEventCallback } from '@mui/material/utils';\nimport { useGridApiOptionHandler, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { isKeyboardEvent, isPrintableKey, isCellEnterEditModeKeys, isCellExitEditModeKeys, isCellEditCommitKeys, isDeleteKeys } from '../../../utils/keyboardUtils';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\n\nfunction isPromise(promise) {\n  return typeof promise.then === 'function';\n}\n\nexport const useCellEditing = (apiRef, props) => {\n  var _props$experimentalFe2;\n\n  const logger = useGridLogger(apiRef, 'useGridEditRows');\n\n  const buildCallback = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n\n  const setCellMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) === mode) {\n      return;\n    }\n\n    logger.debug(`Switching cell id: ${id} field: ${field} to mode: ${mode}`);\n    apiRef.current.setState(state => {\n      const newEditRowsState = _extends({}, state.editRows);\n\n      newEditRowsState[id] = _extends({}, newEditRowsState[id]);\n\n      if (mode === GridCellModes.Edit) {\n        newEditRowsState[id][field] = {\n          value: apiRef.current.getCellValue(id, field)\n        };\n      } else {\n        delete newEditRowsState[id][field];\n\n        if (!Object.keys(newEditRowsState[id]).length) {\n          delete newEditRowsState[id];\n        }\n      }\n\n      return _extends({}, state, {\n        editRows: newEditRowsState\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('cellModeChange', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger]);\n  const getCellMode = React.useCallback((id, field) => {\n    const editRowsState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editRowsState[id] && editRowsState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]); // TODO v6: it should always return a promise\n\n  const commitCellChange = React.useCallback((params, event = {}) => {\n    var _props$experimentalFe;\n\n    const {\n      id,\n      field\n    } = params;\n    apiRef.current.unstable_runPendingEditCellValueMutation(id, field);\n    const model = apiRef.current.getEditRowsModel();\n\n    if (!model[id] || !model[id][field]) {\n      throw new Error(`MUI: Cell at id: ${id} and field: ${field} is not in edit mode.`);\n    }\n\n    const editCellProps = model[id][field];\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n\n    if ((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.preventCommitWhileValidating) {\n      const cellProps = model[id][field];\n\n      if (cellProps.isValidating || cellProps.error) {\n        return false;\n      }\n    }\n\n    const commitParams = _extends({}, params, {\n      value: editCellProps.value\n    });\n\n    let hasError = !!editCellProps.error;\n\n    if (!hasError && typeof column.preProcessEditCellProps === 'function') {\n      const result = column.preProcessEditCellProps({\n        id,\n        row,\n        props: editCellProps\n      });\n\n      if (isPromise(result)) {\n        return result.then(newEditCellProps => {\n          apiRef.current.unstable_setEditCellProps({\n            id,\n            field,\n            props: newEditCellProps\n          });\n\n          if (newEditCellProps.error) {\n            return false;\n          }\n\n          apiRef.current.publishEvent('cellEditCommit', commitParams, event);\n          return true;\n        });\n      }\n\n      apiRef.current.unstable_setEditCellProps({\n        id,\n        field,\n        props: result\n      });\n      hasError = !!result.error;\n    }\n\n    if (!hasError) {\n      apiRef.current.publishEvent('cellEditCommit', commitParams, event);\n      return true;\n    }\n\n    return false;\n  }, [apiRef, (_props$experimentalFe2 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe2.preventCommitWhileValidating]);\n  const setCellEditingEditCellValue = React.useCallback(params => {\n    const column = apiRef.current.getColumn(params.field);\n    const row = apiRef.current.getRow(params.id);\n    return new Promise(resolve => {\n      let newEditCellProps = {\n        value: params.value\n      };\n      const model = apiRef.current.getEditRowsModel();\n      const editCellProps = model[params.id][params.field];\n\n      if (typeof column.preProcessEditCellProps !== 'function') {\n        apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n          props: newEditCellProps\n        }));\n        resolve(true);\n        return;\n      } // setEditCellProps runs the value parser and returns the updated props\n\n\n      newEditCellProps = apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n        props: _extends({}, editCellProps, {\n          isValidating: true\n        })\n      }));\n      Promise.resolve(column.preProcessEditCellProps({\n        id: params.id,\n        row,\n        props: _extends({}, newEditCellProps, {\n          value: apiRef.current.unstable_parseValue(params.id, params.field, params.value)\n        })\n      })).then(newEditCellPropsProcessed => {\n        apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n          props: _extends({}, newEditCellPropsProcessed, {\n            isValidating: false\n          })\n        }));\n        resolve(!newEditCellPropsProcessed.error);\n      });\n    });\n  }, [apiRef]);\n  const cellEditingApi = {\n    setCellMode,\n    getCellMode,\n    commitCellChange,\n    unstable_setCellEditingEditCellValue: setCellEditingEditCellValue\n  };\n  useGridApiMethod(apiRef, cellEditingApi, 'EditRowApi');\n  const handleCellKeyDown = React.useCallback(async (params, event) => {\n    // Wait until IME is settled for Asian languages like Japanese and Chinese\n    // TODO: `event.which` is depricated but this is a temporary workaround\n    if (event.which === 229) {\n      return;\n    }\n\n    const {\n      id,\n      field,\n      cellMode,\n      isEditable\n    } = params;\n\n    if (!isEditable) {\n      return;\n    }\n\n    const isEditMode = cellMode === GridCellModes.Edit;\n    const isModifierKeyPressed = event.ctrlKey || event.metaKey || event.altKey;\n\n    if (!isEditMode && isCellEnterEditModeKeys(event.key) && !isModifierKeyPressed && !(event.key === ' ' && event.shiftKey)) {\n      apiRef.current.publishEvent('cellEditStart', params, event);\n    }\n\n    if (!isEditMode && isDeleteKeys(event.key)) {\n      apiRef.current.setEditCellValue({\n        id,\n        field,\n        value: ''\n      });\n      apiRef.current.commitCellChange({\n        id,\n        field\n      }, event);\n      apiRef.current.publishEvent('cellEditStop', params, event);\n    }\n\n    if (isEditMode && isCellEditCommitKeys(event.key)) {\n      const commitParams = {\n        id,\n        field\n      };\n      const isValid = await apiRef.current.commitCellChange(commitParams, event);\n\n      if (!isValid) {\n        return;\n      }\n    }\n\n    if (isEditMode && isCellExitEditModeKeys(event.key)) {\n      apiRef.current.publishEvent('cellEditStop', params, event);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    apiRef.current.publishEvent('cellEditStart', params, event);\n  }, [apiRef]);\n\n  const commitPropsAndExit = async (params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n\n    await apiRef.current.commitCellChange(params, event);\n    apiRef.current.publishEvent('cellEditStop', params, event);\n  };\n\n  const handleCellFocusOut = useEventCallback((params, event) => {\n    commitPropsAndExit(params, event);\n  });\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    if (!cell) {\n      return;\n    }\n\n    const params = apiRef.current.getCellParams(cell.id, cell.field);\n    commitPropsAndExit(params, {});\n  });\n  const handleCellEditStart = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    apiRef.current.setCellMode(params.id, params.field, GridCellModes.Edit);\n\n    if (isKeyboardEvent(event) && isPrintableKey(event.key)) {\n      apiRef.current.unstable_setEditCellProps({\n        id: params.id,\n        field: params.field,\n        props: {\n          value: ''\n        }\n      });\n    }\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback((params, event) => {\n    apiRef.current.setCellMode(params.id, params.field, GridCellModes.View);\n\n    if (!isKeyboardEvent(event)) {\n      return;\n    }\n\n    if (isCellEditCommitKeys(event.key)) {\n      apiRef.current.publishEvent('cellNavigationKeyDown', params, event);\n      return;\n    }\n\n    if (event.key === 'Escape' || isDeleteKeys(event.key)) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleCellEditCommit = React.useCallback(params => {\n    const {\n      id,\n      field\n    } = params;\n    const model = apiRef.current.getEditRowsModel();\n    const {\n      value\n    } = model[id][field];\n    logger.debug(`Setting cell id: ${id} field: ${field} to value: ${value == null ? void 0 : value.toString()}`);\n    const row = apiRef.current.getRow(id);\n\n    if (row) {\n      const column = apiRef.current.getColumn(params.field);\n\n      let rowUpdate = _extends({}, row, {\n        [field]: value\n      });\n\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter({\n          row,\n          value\n        });\n      }\n\n      apiRef.current.updateRows([rowUpdate]);\n    }\n  }, [apiRef, logger]);\n  const handleEditCellPropsChange = React.useCallback(params => {\n    const row = apiRef.current.getRow(params.id);\n    const column = apiRef.current.getColumn(params.field);\n    const editCellProps = column.preProcessEditCellProps ? column.preProcessEditCellProps({\n      id: params.id,\n      row,\n      props: params.props\n    }) : params.props;\n\n    if (isPromise(editCellProps)) {\n      editCellProps.then(newEditCellProps => {\n        apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n          props: newEditCellProps\n        }));\n      });\n    } else {\n      apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n        props: editCellProps\n      }));\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', buildCallback(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', buildCallback(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', buildCallback(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', buildCallback(handleColumnHeaderDragStart));\n  useGridApiEventHandler(apiRef, 'cellEditStart', buildCallback(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', buildCallback(handleCellEditStop));\n  useGridApiEventHandler(apiRef, 'cellEditCommit', buildCallback(handleCellEditCommit));\n  useGridApiEventHandler(apiRef, 'editCellPropsChange', buildCallback(handleEditCellPropsChange));\n  useGridApiOptionHandler(apiRef, 'cellEditCommit', props.onCellEditCommit);\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', props.onCellEditStop);\n};","// TODO v6 - remove\n\n/**\n * Params passed to `apiRef.current.setEditCellValue`.\n */\n// TODO v6 - remove\n// TODO v6 - remove\nvar GridCellEditStartReasons;\n/**\n * Params passed to the `cellEditStart` event.\n */\n\n(function (GridCellEditStartReasons) {\n  GridCellEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridCellEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridCellEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n})(GridCellEditStartReasons || (GridCellEditStartReasons = {}));\n\nvar GridCellEditStopReasons;\n/**\n * Params passed to the `cellEditStop event.\n */\n\n(function (GridCellEditStopReasons) {\n  GridCellEditStopReasons[\"cellFocusOut\"] = \"cellFocusOut\";\n  GridCellEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridCellEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridCellEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n})(GridCellEditStopReasons || (GridCellEditStopReasons = {}));\n\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridCellEditStartReasons, GridCellEditStopReasons };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nimport { useCellEditing } from './useGridCellEditing.old';\nimport { useGridRowEditing } from './useGridRowEditing.old';\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\n/**\n * @requires useGridFocus - can be after, async only\n * @requires useGridParamsApi (method)\n * @requires useGridColumns (state)\n */\n\nexport function useGridEditing(apiRef, props) {\n  var _props$experimentalFe2;\n\n  const logger = useGridLogger(apiRef, 'useGridEditRows');\n  useCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  apiRef.current.unstable_registerControlState({\n    stateId: 'editRows',\n    propModel: props.editRowsModel,\n    propOnChange: props.onEditRowsModelChange,\n    stateSelector: gridEditRowsStateSelector,\n    changeEvent: 'editRowsModelChange'\n  });\n  const isCellEditable = React.useCallback(params => !params.rowNode.isAutoGenerated && !!params.colDef.editable && !!params.colDef.renderEditCell && (!props.isCellEditable || props.isCellEditable(params)), // eslint-disable-next-line react-hooks/exhaustive-deps\n  [props.isCellEditable]);\n\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    const callbackToRunImmediately = () => {\n      callback();\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      delete debounceMap.current[id][field];\n    };\n\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, callbackToRunImmediately];\n  };\n\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, callback] = debounceMap.current[id][debouncedField];\n        callback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, callback] = debounceMap.current[id][field];\n      callback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback((params, event = {}) => {\n    maybeDebounce(params.id, params.field, params.debounceMs, () => {\n      var _props$experimentalFe;\n\n      if ((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.preventCommitWhileValidating) {\n        if (props.editMode === 'row') {\n          return apiRef.current.unstable_setRowEditingEditCellValue(params);\n        }\n\n        return apiRef.current.unstable_setCellEditingEditCellValue(params);\n      }\n\n      const newParams = {\n        id: params.id,\n        field: params.field,\n        props: {\n          value: params.value\n        }\n      };\n      return apiRef.current.publishEvent('editCellPropsChange', newParams, event);\n    });\n  }, [apiRef, props.editMode, (_props$experimentalFe2 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe2.preventCommitWhileValidating]);\n  const parseValue = React.useCallback((id, field, value) => {\n    const column = apiRef.current.getColumn(field);\n    return column.valueParser ? column.valueParser(value, apiRef.current.getCellParams(id, field)) : value;\n  }, [apiRef]);\n  const setEditCellProps = React.useCallback(params => {\n    const {\n      id,\n      field,\n      props: editProps\n    } = params;\n    logger.debug(`Setting cell props on id: ${id} field: ${field}`);\n    apiRef.current.setState(state => {\n      const editRowsModel = _extends({}, state.editRows);\n\n      editRowsModel[id] = _extends({}, state.editRows[id]);\n      editRowsModel[id][field] = _extends({}, editProps, {\n        value: parseValue(id, field, editProps.value)\n      });\n      return _extends({}, state, {\n        editRows: editRowsModel\n      });\n    });\n    apiRef.current.forceUpdate();\n    const editRowsState = gridEditRowsStateSelector(apiRef.current.state);\n    return editRowsState[id][field];\n  }, [apiRef, logger, parseValue]);\n  const setEditRowsModel = React.useCallback(model => {\n    const currentModel = gridEditRowsStateSelector(apiRef.current.state);\n\n    if (currentModel !== model) {\n      logger.debug(`Setting editRows model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        editRows: model\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const getEditRowsModel = React.useCallback(() => gridEditRowsStateSelector(apiRef.current.state), [apiRef]);\n  const preventTextSelection = React.useCallback((params, event) => {\n    const isMoreThanOneClick = event.detail > 1;\n\n    if (params.isEditable && params.cellMode === GridCellModes.View && isMoreThanOneClick) {\n      // If we click more than one time, then we prevent the default behavior of selecting the text cell.\n      event.preventDefault();\n    }\n  }, []);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', preventTextSelection);\n  useGridApiOptionHandler(apiRef, 'editCellPropsChange', props.onEditCellPropsChange); // TODO v6: remove, use `preProcessEditCellProps` instead\n\n  const editingSharedApi = {\n    isCellEditable,\n    setEditRowsModel,\n    getEditRowsModel,\n    setEditCellValue,\n    unstable_setEditCellProps: setEditCellProps,\n    unstable_parseValue: parseValue,\n    unstable_runPendingEditCellValueMutation: runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'EditRowApi');\n  React.useEffect(() => {\n    if (props.editRowsModel !== undefined) {\n      apiRef.current.setEditRowsModel(props.editRowsModel);\n    }\n  }, [apiRef, props.editRowsModel]);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useEventCallback } from '@mui/material/utils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { GridRowModes, GridEditModes, GridCellModes } from '../../../models/gridEditRowModel';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { useGridApiOptionHandler, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nexport const useGridRowEditing = (apiRef, props) => {\n  var _props$experimentalFe2, _props$experimentalFe4;\n\n  const focusTimeout = React.useRef(null);\n  const nextFocusedCell = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n\n  const buildCallback = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n\n  const setRowMode = React.useCallback((id, mode) => {\n    if (mode === apiRef.current.getRowMode(id)) {\n      return;\n    }\n\n    apiRef.current.setState(state => {\n      const newEditRowsState = _extends({}, state.editRows);\n\n      if (mode === GridRowModes.Edit) {\n        newEditRowsState[id] = {};\n        columns.forEach(column => {\n          const cellParams = apiRef.current.getCellParams(id, column.field);\n\n          if (cellParams.isEditable) {\n            newEditRowsState[id][column.field] = {\n              value: cellParams.value\n            };\n          }\n        });\n      } else {\n        delete newEditRowsState[id];\n      }\n\n      return _extends({}, state, {\n        editRows: newEditRowsState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, columns]);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n\n    const editRowsState = gridEditRowsStateSelector(apiRef.current.state);\n    return editRowsState[id] ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const commitRowChange = React.useCallback((id, event = {}) => {\n    var _props$experimentalFe;\n\n    if (props.editMode === GridEditModes.Cell) {\n      throw new Error(`MUI: You can't commit changes when the edit mode is 'cell'.`);\n    }\n\n    apiRef.current.unstable_runPendingEditCellValueMutation(id);\n    const model = apiRef.current.getEditRowsModel();\n    const editRowProps = model[id];\n\n    if (!editRowProps) {\n      throw new Error(`MUI: Row at id: ${id} is not being edited.`);\n    }\n\n    if ((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.preventCommitWhileValidating) {\n      const isValid = Object.keys(editRowProps).reduce((acc, field) => {\n        return acc && !editRowProps[field].isValidating && !editRowProps[field].error;\n      }, true);\n\n      if (!isValid) {\n        return false;\n      }\n    }\n\n    const hasFieldWithError = Object.values(editRowProps).some(value => !!value.error);\n\n    if (hasFieldWithError) {\n      return false;\n    }\n\n    const fieldsWithValidator = Object.keys(editRowProps).filter(field => {\n      const column = apiRef.current.getColumn(field);\n      return typeof column.preProcessEditCellProps === 'function';\n    });\n\n    if (fieldsWithValidator.length > 0) {\n      const row = apiRef.current.getRow(id);\n      const validatorErrors = fieldsWithValidator.map(async field => {\n        const column = apiRef.current.getColumn(field);\n        const newEditCellProps = await Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: editRowProps[field]\n        }));\n        apiRef.current.unstable_setEditCellProps({\n          id,\n          field,\n          props: newEditCellProps\n        });\n        return newEditCellProps.error;\n      });\n      return Promise.all(validatorErrors).then(errors => {\n        if (errors.some(error => !!error)) {\n          return false;\n        }\n\n        apiRef.current.publishEvent('rowEditCommit', id, event);\n        return true;\n      });\n    }\n\n    apiRef.current.publishEvent('rowEditCommit', id, event);\n    return true;\n  }, [apiRef, props.editMode, (_props$experimentalFe2 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe2.preventCommitWhileValidating]);\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const model = apiRef.current.getEditRowsModel();\n    const editRow = model[params.id];\n    const row = apiRef.current.getRow(params.id);\n    let isValid = true;\n    return new Promise(resolve => {\n      Object.keys(editRow).forEach(async field => {\n        const column = apiRef.current.getColumn(field);\n        let editCellProps = field === params.field ? {\n          value: params.value\n        } : editRow[field]; // setEditCellProps runs the value parser and returns the updated props\n\n        editCellProps = apiRef.current.unstable_setEditCellProps({\n          id: params.id,\n          field,\n          props: _extends({}, editCellProps, {\n            isValidating: true\n          })\n        });\n\n        if (column.preProcessEditCellProps) {\n          editCellProps = await Promise.resolve(column.preProcessEditCellProps({\n            id: params.id,\n            row,\n            props: _extends({}, editCellProps, {\n              value: field === params.field ? apiRef.current.unstable_parseValue(params.id, field, params.value) : editCellProps.value\n            })\n          }));\n        }\n\n        if (editCellProps.error) {\n          isValid = false;\n        }\n\n        apiRef.current.unstable_setEditCellProps({\n          id: params.id,\n          field,\n          props: _extends({}, editCellProps, {\n            isValidating: false\n          })\n        });\n      });\n      resolve(isValid);\n    });\n  }, [apiRef]);\n  const rowEditingApi = {\n    setRowMode,\n    getRowMode,\n    commitRowChange,\n    unstable_setRowEditingEditCellValue: setRowEditingEditCellValue\n  };\n  useGridApiMethod(apiRef, rowEditingApi, 'EditRowApi');\n  const handleCellKeyDown = React.useCallback(async (params, event) => {\n    // Wait until IME is settled for Asian languages like Japanese and Chinese\n    // TODO: `event.which` is depricated but this is a temporary workaround\n    if (event.which === 229) {\n      return;\n    }\n\n    const {\n      cellMode,\n      isEditable\n    } = params;\n\n    if (!isEditable) {\n      return;\n    }\n\n    const isEditMode = cellMode === GridCellModes.Edit;\n    const rowParams = apiRef.current.getRowParams(params.id);\n\n    if (isEditMode) {\n      if (event.key === 'Enter') {\n        var _props$experimentalFe3;\n\n        // TODO: check the return before firing 'rowEditStop'\n        // On cell editing, it won't exits the edit mode with error\n        const isValid = await apiRef.current.commitRowChange(params.id);\n\n        if (!isValid && (_props$experimentalFe3 = props.experimentalFeatures) != null && _props$experimentalFe3.preventCommitWhileValidating) {\n          return;\n        }\n\n        apiRef.current.publishEvent('rowEditStop', rowParams, event);\n      } else if (event.key === 'Escape') {\n        apiRef.current.publishEvent('rowEditStop', rowParams, event);\n      }\n    } else if (event.key === 'Enter') {\n      apiRef.current.publishEvent('rowEditStart', rowParams, event);\n    }\n  }, [apiRef, (_props$experimentalFe4 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe4.preventCommitWhileValidating]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    const rowParams = apiRef.current.getRowParams(params.id);\n    apiRef.current.publishEvent('rowEditStart', rowParams, event);\n  }, [apiRef]);\n  const handleEditCellPropsChange = React.useCallback(params => {\n    const row = apiRef.current.getRow(params.id);\n    const model = apiRef.current.getEditRowsModel();\n    const editRow = model[params.id];\n    Object.keys(editRow).forEach(async field => {\n      const column = apiRef.current.getColumn(field);\n\n      if (column.preProcessEditCellProps) {\n        const editCellProps = field === params.field ? params.props : editRow[field];\n        const newEditCellProps = await Promise.resolve(column.preProcessEditCellProps({\n          id: params.id,\n          row,\n          props: editCellProps\n        }));\n        apiRef.current.unstable_setEditCellProps({\n          id: params.id,\n          field,\n          props: newEditCellProps\n        });\n      } else if (field === params.field) {\n        apiRef.current.unstable_setEditCellProps(params);\n      }\n    });\n  }, [apiRef]);\n  const handleRowEditStart = React.useCallback(params => {\n    apiRef.current.setRowMode(params.id, GridRowModes.Edit);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback((params, event) => {\n    apiRef.current.setRowMode(params.id, GridRowModes.View);\n\n    if (event.key === 'Enter') {\n      apiRef.current.publishEvent('cellNavigationKeyDown', params, event);\n    }\n  }, [apiRef]);\n  const handleRowEditCommit = React.useCallback(id => {\n    const model = apiRef.current.getEditRowsModel();\n    const editRow = model[id];\n\n    if (!editRow) {\n      throw new Error(`MUI: Row at id: ${id} is not being edited.`);\n    }\n\n    const row = apiRef.current.getRow(id);\n\n    if (row) {\n      let rowUpdate = _extends({}, row);\n\n      Object.keys(editRow).forEach(field => {\n        const column = apiRef.current.getColumn(field);\n        const value = editRow[field].value;\n\n        if (column.valueSetter) {\n          rowUpdate = column.valueSetter({\n            row: rowUpdate,\n            value\n          });\n        } else {\n          rowUpdate[field] = value;\n        }\n      });\n      apiRef.current.updateRows([rowUpdate]);\n    }\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n\n  const commitPropsAndExit = async (params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(async () => {\n      var _nextFocusedCell$curr;\n\n      if (((_nextFocusedCell$curr = nextFocusedCell.current) == null ? void 0 : _nextFocusedCell$curr.id) !== params.id) {\n        await apiRef.current.commitRowChange(params.id, event);\n        const rowParams = apiRef.current.getRowParams(params.id);\n        apiRef.current.publishEvent('rowEditStop', rowParams, event);\n      }\n    });\n  };\n\n  const handleCellFocusOut = useEventCallback((params, event) => {\n    commitPropsAndExit(params, event);\n  });\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    if (!cell) {\n      return;\n    }\n\n    const params = apiRef.current.getCellParams(cell.id, cell.field);\n    commitPropsAndExit(params, {});\n  });\n  useGridApiEventHandler(apiRef, 'cellKeyDown', buildCallback(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', buildCallback(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'editCellPropsChange', buildCallback(handleEditCellPropsChange));\n  useGridApiEventHandler(apiRef, 'rowEditStart', buildCallback(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', buildCallback(handleRowEditStop));\n  useGridApiEventHandler(apiRef, 'rowEditCommit', buildCallback(handleRowEditCommit));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', buildCallback(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', buildCallback(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', buildCallback(handleColumnHeaderDragStart));\n  useGridApiOptionHandler(apiRef, 'rowEditCommit', props.onRowEditCommit);\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"field\"],\n      _excluded2 = [\"id\", \"field\"];\nimport * as React from 'react';\nimport { useGridApiEventHandler, useGridApiOptionHandler, GridSignature } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridCellModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nimport { isPrintableKey } from '../../../utils/keyboardUtils';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridRowsIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { GridCellEditStartReasons, GridCellEditStopReasons } from '../../../models/params/gridEditCellParams';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, e.g. `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see http://mui.com/components/data-grid/editing/#persistence.'], 'error');\nexport const useGridCellEditing = (apiRef, props) => {\n  const [cellModesModel, setCellModesModel] = React.useState({});\n  const prevCellModesModel = React.useRef({});\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    cellModesModel: cellModesModelProp,\n    onCellModesModelChange,\n    signature\n  } = props;\n\n  const runIfEditModeIsCell = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) !== mode) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    if (params.cellMode === GridCellModes.Edit) {\n      return;\n    }\n\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStartReasons.cellDoubleClick\n    });\n\n    apiRef.current.publishEvent('cellEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStopReasons.cellFocusOut\n    });\n\n    apiRef.current.publishEvent('cellEditStop', newParams, event);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is depricated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n\n      let reason;\n\n      if (event.key === 'Escape') {\n        reason = GridCellEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        reason = event.shiftKey ? GridCellEditStopReasons.shiftTabKeyDown : GridCellEditStopReasons.tabKeyDown;\n        event.preventDefault(); // Prevent going to the next element in the tab sequence\n      }\n\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n\n        apiRef.current.publishEvent('cellEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n\n      if (isPrintableKey(event.key)) {\n        if (event.shiftKey || event.ctrlKey || event.metaKey || event.altKey) {\n          return;\n        }\n\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Delete') {\n        reason = GridCellEditStartReasons.deleteKeyDown;\n      }\n\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n\n        apiRef.current.publishEvent('cellEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleCellEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startCellEditModeParams = {\n      id,\n      field\n    };\n\n    if (reason === GridCellEditStartReasons.deleteKeyDown || reason === GridCellEditStartReasons.printableKeyDown) {\n      startCellEditModeParams.deleteValue = true;\n    }\n\n    apiRef.current.startCellEditMode(startCellEditModeParams);\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    let cellToFocusAfter;\n\n    if (reason === GridCellEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridCellEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridCellEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n\n    let ignoreModifications = reason === 'escapeKeyDown';\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n\n    if (editingState[id][field].isProcessingProps) {\n      // The user wants to stop editing the cell but we can't wait for the props to be processed.\n      // In this case, discard the modifications.\n      ignoreModifications = true;\n    }\n\n    apiRef.current.stopCellEditMode({\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsCell(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsCell(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsCell(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellEditStart', runIfEditModeIsCell(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', runIfEditModeIsCell(handleCellEditStop));\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', props.onCellEditStop);\n  const getCellMode = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && editingState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]);\n  const updateCellModesModel = React.useCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.cellModesModel;\n\n    if (onCellModesModelChange && isNewModelDifferentFromProp) {\n      const details = signature === GridSignature.DataGridPro ? {\n        api: apiRef.current\n      } : {};\n      onCellModesModelChange(newModel, details);\n    }\n\n    if (props.cellModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n\n    setCellModesModel(newModel);\n    apiRef.current.publishEvent('cellModesModelChange', newModel);\n  }, [apiRef, onCellModesModelChange, props.cellModesModel, signature]);\n  const updateFieldInCellModesModel = React.useCallback((id, field, newProps) => {\n    const newModel = _extends({}, cellModesModel);\n\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newModel[id], {\n        [field]: _extends({}, newProps)\n      });\n    } else {\n      const _cellModesModel$id = cellModesModel[id],\n            otherFields = _objectWithoutPropertiesLoose(_cellModesModel$id, [field].map(_toPropertyKey)); // Ensure that we have a new object, not a reference\n\n\n      newModel[id] = otherFields;\n\n      if (Object.keys(newModel[id]).length === 0) {\n        delete newModel[id];\n      }\n    }\n\n    updateCellModesModel(newModel);\n  }, [cellModesModel, updateCellModesModel]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startCellEditMode = React.useCallback(params => {\n    const {\n      id,\n      field\n    } = params,\n          other = _objectWithoutPropertiesLoose(params, _excluded);\n\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.View);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.Edit\n    }, other));\n  }, [throwIfNotEditable, throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStartCellEditMode = React.useCallback(params => {\n    const {\n      id,\n      field,\n      deleteValue\n    } = params;\n    const newProps = {\n      value: deleteValue ? '' : apiRef.current.getCellValue(id, field),\n      error: false,\n      isProcessingProps: false\n    };\n    updateOrDeleteFieldState(id, field, newProps);\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef, updateOrDeleteFieldState]);\n  const stopCellEditMode = React.useCallback(params => {\n    const {\n      id,\n      field\n    } = params,\n          other = _objectWithoutPropertiesLoose(params, _excluded2);\n\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.View\n    }, other));\n  }, [throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStopCellEditMode = React.useCallback(async params => {\n    const {\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter = 'none'\n    } = params;\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    apiRef.current.unstable_runPendingEditCellValueMutation(id, field);\n\n    const finishCellEditMode = () => {\n      if (cellToFocusAfter !== 'none') {\n        apiRef.current.unstable_moveFocusToRelativeCell(id, field, cellToFocusAfter);\n      }\n\n      updateOrDeleteFieldState(id, field, null);\n      updateFieldInCellModesModel(id, field, null);\n    };\n\n    if (ignoreModifications) {\n      finishCellEditMode();\n      return;\n    }\n\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      error,\n      isProcessingProps\n    } = editingState[id][field];\n\n    if (error || isProcessingProps) {\n      // Attempt to change cell mode to \"view\" was not successful\n      // Update previous mode to allow another attempt\n      prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n      return;\n    }\n\n    const rowUpdate = apiRef.current.unstable_getRowWithUpdatedValuesFromCellEditing(id, field);\n\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else {\n          missingOnProcessRowUpdateErrorWarning();\n        }\n      };\n\n      try {\n        const row = apiRef.current.getRow(id);\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishCellEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishCellEditMode();\n    }\n  }, [apiRef, onProcessRowUpdateError, processRowUpdate, throwIfNotInMode, updateFieldInCellModesModel, updateOrDeleteFieldState]);\n  const setCellEditingEditCellValue = React.useCallback(async params => {\n    const {\n      id,\n      field,\n      value\n    } = params;\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n\n    if (column.valueParser) {\n      parsedValue = column.valueParser(value, apiRef.current.getCellParams(id, field));\n    }\n\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue\n    });\n\n    if (column.preProcessEditCellProps) {\n      const hasChanged = value !== editingState[id][field].value;\n      newProps = _extends({}, newProps, {\n        isProcessingProps: true\n      });\n      updateOrDeleteFieldState(id, field, newProps);\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row,\n        props: newProps,\n        hasChanged\n      }));\n    } // Check again if the cell is in edit mode because the user may have\n    // discarded the changes while the props were being processed.\n\n\n    if (apiRef.current.getCellMode(id, field) === GridCellModes.View) {\n      return false;\n    }\n\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    newProps = _extends({}, newProps, {\n      isProcessingProps: false\n    }); // We don't update the value with the one coming from the props pre-processing\n    // because when the promise resolves it may be already outdated. The only\n    // exception to this rule is when there's no pre-processing.\n\n    newProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n    updateOrDeleteFieldState(id, field, newProps);\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return !editingState[id][field].error;\n  }, [apiRef, throwIfNotEditable, throwIfNotInMode, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromCellEditing = React.useCallback((id, field) => {\n    const column = apiRef.current.getColumn(field);\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      value\n    } = editingState[id][field];\n    const row = apiRef.current.getRow(id);\n    return column.valueSetter ? column.valueSetter({\n      value,\n      row\n    }) : _extends({}, row, {\n      [field]: value\n    });\n  }, [apiRef]);\n  const editingApi = {\n    getCellMode,\n    startCellEditMode,\n    stopCellEditMode,\n    unstable_setCellEditingEditCellValue: setCellEditingEditCellValue,\n    unstable_getRowWithUpdatedValuesFromCellEditing: getRowWithUpdatedValuesFromCellEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'EditingApi');\n  React.useEffect(() => {\n    if (cellModesModelProp) {\n      updateCellModesModel(cellModesModelProp);\n    }\n  }, [cellModesModelProp, updateCellModesModel]);\n  React.useEffect(() => {\n    const idToIdLookup = gridRowsIdToIdLookupSelector(apiRef); // Update the ref here because updateStateToStopCellEditMode may change it later\n\n    const copyOfPrevCellModes = prevCellModesModel.current;\n    prevCellModesModel.current = cellModesModel;\n    Object.entries(cellModesModel).forEach(([id, fields]) => {\n      Object.entries(fields).forEach(([field, params]) => {\n        var _copyOfPrevCellModes$, _copyOfPrevCellModes$2, _idToIdLookup$id;\n\n        const prevMode = ((_copyOfPrevCellModes$ = copyOfPrevCellModes[id]) == null ? void 0 : (_copyOfPrevCellModes$2 = _copyOfPrevCellModes$[field]) == null ? void 0 : _copyOfPrevCellModes$2.mode) || GridCellModes.View;\n        const originalId = (_idToIdLookup$id = idToIdLookup[id]) != null ? _idToIdLookup$id : id;\n\n        if (params.mode === GridCellModes.Edit && prevMode === GridCellModes.View) {\n          updateStateToStartCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        } else if (params.mode === GridCellModes.View && prevMode === GridCellModes.Edit) {\n          updateStateToStopCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        }\n      });\n    });\n  }, [apiRef, cellModesModel, updateStateToStartCellEditMode, updateStateToStopCellEditMode]);\n};","/**\n * Object passed as parameter in the row callbacks.\n */\n\n/**\n * Object passed as parameter in the row `getRowClassName` callback prop.\n */\n\n/**\n * Object passed as parameter in the row `getRowHeight` callback prop.\n */\n\n/**\n * The getRowHeight return value.\n */\nvar GridRowEditStartReasons;\n/**\n * Params passed to the `rowEditStart` event.\n */\n\n(function (GridRowEditStartReasons) {\n  GridRowEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridRowEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridRowEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n})(GridRowEditStartReasons || (GridRowEditStartReasons = {}));\n\nvar GridRowEditStopReasons;\n\n(function (GridRowEditStopReasons) {\n  GridRowEditStopReasons[\"rowFocusOut\"] = \"rowFocusOut\";\n  GridRowEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridRowEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridRowEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n})(GridRowEditStopReasons || (GridRowEditStopReasons = {}));\n\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridRowEditStartReasons, GridRowEditStopReasons };","import _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\"],\n      _excluded2 = [\"id\"];\nimport * as React from 'react';\nimport { useGridApiEventHandler, useGridApiOptionHandler, GridSignature } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridRowModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nimport { isPrintableKey } from '../../../utils/keyboardUtils';\nimport { gridColumnFieldsSelector } from '../columns/gridColumnsSelector';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridRowsIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { GridRowEditStopReasons, GridRowEditStartReasons } from '../../../models/params/gridRowParams';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, e.g. `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see http://mui.com/components/data-grid/editing/#persistence.'], 'error');\nexport const useGridRowEditing = (apiRef, props) => {\n  const [rowModesModel, setRowModesModel] = React.useState({});\n  const prevRowModesModel = React.useRef({});\n  const focusTimeout = React.useRef(null);\n  const nextFocusedCell = React.useRef(null);\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    rowModesModel: rowModesModelProp,\n    onRowModesModelChange,\n    signature\n  } = props;\n\n  const runIfEditModeIsRow = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, mode) => {\n    if (apiRef.current.getRowMode(id) !== mode) {\n      throw new Error(`MUI: The row with id=${id} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.Edit) {\n      return;\n    }\n\n    const rowParams = apiRef.current.getRowParams(params.id);\n\n    const newParams = _extends({}, rowParams, {\n      field: params.field,\n      reason: GridRowEditStartReasons.cellDoubleClick\n    });\n\n    apiRef.current.publishEvent('rowEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n      return;\n    } // The mechanism to detect if we can stop editing a row is different from\n    // the cell editing. Instead of triggering it when clicking outside a cell,\n    // we must check if another cell in the same row was not clicked. To achieve\n    // that, first we keep track of all cells that gained focus. When a cell loses\n    // focus we check if the next cell that received focus is from a different row.\n\n\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(() => {\n      var _nextFocusedCell$curr;\n\n      focusTimeout.current = null;\n\n      if (((_nextFocusedCell$curr = nextFocusedCell.current) == null ? void 0 : _nextFocusedCell$curr.id) !== params.id) {\n        // The row might have been deleted during the click\n        if (!apiRef.current.getRow(params.id)) {\n          return;\n        }\n\n        const rowParams = apiRef.current.getRowParams(params.id);\n\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason: GridRowEditStopReasons.rowFocusOut\n        });\n\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    });\n  }, [apiRef]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(focusTimeout.current);\n    };\n  }, []);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridRowModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is depricated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n\n      let reason;\n\n      if (event.key === 'Escape') {\n        reason = GridRowEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        const columnFields = gridColumnFieldsSelector(apiRef).filter(field => apiRef.current.isCellEditable(apiRef.current.getCellParams(params.id, field)));\n\n        if (event.shiftKey) {\n          if (params.field === columnFields[0]) {\n            // Exit if user pressed Shift+Tab on the first field\n            reason = GridRowEditStopReasons.shiftTabKeyDown;\n          }\n        } else if (params.field === columnFields[columnFields.length - 1]) {\n          // Exit if user pressed Tab on the last field\n          reason = GridRowEditStopReasons.tabKeyDown;\n        }\n\n        if (reason) {\n          event.preventDefault(); // Prevent going to the next element in the tab sequence\n        }\n      }\n\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n\n        const newParams = _extends({}, rowParams, {\n          reason,\n          field: params.field\n        });\n\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n\n      if (isPrintableKey(event.key)) {\n        if (event.shiftKey || event.ctrlKey || event.metaKey || event.altKey) {\n          return;\n        }\n\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Delete') {\n        reason = GridRowEditStartReasons.deleteKeyDown;\n      }\n\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason\n        });\n\n        apiRef.current.publishEvent('rowEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleRowEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startRowEditModeParams = {\n      id,\n      fieldToFocus: field\n    };\n\n    if (reason === GridRowEditStartReasons.deleteKeyDown || reason === GridRowEditStartReasons.printableKeyDown) {\n      startRowEditModeParams.deleteValue = !!field;\n    }\n\n    apiRef.current.startRowEditMode(startRowEditModeParams);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback(params => {\n    const {\n      id,\n      reason,\n      field\n    } = params;\n    apiRef.current.unstable_runPendingEditCellValueMutation(id);\n    let cellToFocusAfter;\n\n    if (reason === GridRowEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridRowEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridRowEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n\n    let ignoreModifications = reason === 'escapeKeyDown';\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n\n    if (!ignoreModifications) {\n      // The user wants to stop editing the cell but we can't wait for the props to be processed.\n      // In this case, discard the modifications if any field is processing its props.\n      ignoreModifications = Object.values(editingState[id]).some(fieldProps => {\n        return fieldProps.isProcessingProps;\n      });\n    }\n\n    apiRef.current.stopRowEditMode({\n      id,\n      ignoreModifications,\n      field,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsRow(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', runIfEditModeIsRow(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsRow(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsRow(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'rowEditStart', runIfEditModeIsRow(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', runIfEditModeIsRow(handleRowEditStop));\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && Object.keys(editingState[id]).length > 0;\n    return isEditing ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const updateRowModesModel = React.useCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.rowModesModel;\n\n    if (onRowModesModelChange && isNewModelDifferentFromProp) {\n      const details = signature === GridSignature.DataGridPro ? {\n        api: apiRef.current\n      } : {};\n      onRowModesModelChange(newModel, details);\n    }\n\n    if (props.rowModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n\n    setRowModesModel(newModel);\n    apiRef.current.publishEvent('rowModesModelChange', newModel);\n  }, [apiRef, onRowModesModelChange, props.rowModesModel, signature]);\n  const updateRowInRowModesModel = React.useCallback((id, newProps) => {\n    const newModel = _extends({}, rowModesModel);\n\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newProps);\n    } else {\n      delete newModel[id];\n    }\n\n    updateRowModesModel(newModel);\n  }, [rowModesModel, updateRowModesModel]);\n  const updateOrDeleteRowState = React.useCallback((id, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n\n      if (newProps !== null) {\n        newEditingState[id] = newProps;\n      } else {\n        delete newEditingState[id];\n      }\n\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startRowEditMode = React.useCallback(params => {\n    const {\n      id\n    } = params,\n          other = _objectWithoutPropertiesLoose(params, _excluded);\n\n    throwIfNotInMode(id, GridRowModes.View);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.Edit\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStartRowEditMode = React.useCallback(params => {\n    const {\n      id,\n      fieldToFocus,\n      deleteValue\n    } = params;\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const newProps = columnFields.reduce((acc, field) => {\n      const cellParams = apiRef.current.getCellParams(id, field);\n\n      if (!cellParams.isEditable) {\n        return acc;\n      }\n\n      const shouldDeleteValue = deleteValue && fieldToFocus === field;\n      acc[field] = {\n        value: shouldDeleteValue ? '' : apiRef.current.getCellValue(id, field),\n        error: false,\n        isProcessingProps: false\n      };\n      return acc;\n    }, {});\n    updateOrDeleteRowState(id, newProps);\n\n    if (fieldToFocus) {\n      apiRef.current.setCellFocus(id, fieldToFocus);\n    }\n  }, [apiRef, updateOrDeleteRowState]);\n  const stopRowEditMode = React.useCallback(params => {\n    const {\n      id\n    } = params,\n          other = _objectWithoutPropertiesLoose(params, _excluded2);\n\n    throwIfNotInMode(id, GridRowModes.Edit);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.View\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStopRowEditMode = React.useCallback(params => {\n    const {\n      id,\n      ignoreModifications,\n      field: focusedField,\n      cellToFocusAfter = 'none'\n    } = params;\n    apiRef.current.unstable_runPendingEditCellValueMutation(id);\n\n    const finishRowEditMode = () => {\n      if (cellToFocusAfter !== 'none' && focusedField) {\n        apiRef.current.unstable_moveFocusToRelativeCell(id, focusedField, cellToFocusAfter);\n      }\n\n      updateOrDeleteRowState(id, null);\n      updateRowInRowModesModel(id, null);\n    };\n\n    if (ignoreModifications) {\n      finishRowEditMode();\n      return;\n    }\n\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    const isSomeFieldProcessingProps = Object.values(editingState[id]).some(fieldProps => fieldProps.isProcessingProps);\n\n    if (isSomeFieldProcessingProps) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      return;\n    }\n\n    const hasSomeFieldWithError = Object.values(editingState[id]).some(fieldProps => fieldProps.error);\n\n    if (hasSomeFieldWithError) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      return;\n    }\n\n    const rowUpdate = apiRef.current.unstable_getRowWithUpdatedValuesFromRowEditing(id);\n\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevRowModesModel.current[id].mode = GridRowModes.Edit;\n\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else {\n          missingOnProcessRowUpdateErrorWarning();\n        }\n      };\n\n      try {\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishRowEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishRowEditMode();\n    }\n  }, [apiRef, onProcessRowUpdateError, processRowUpdate, updateOrDeleteRowState, updateRowInRowModesModel]);\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      value\n    } = params;\n    throwIfNotEditable(id, field);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n\n    if (column.valueParser) {\n      parsedValue = column.valueParser(value, apiRef.current.getCellParams(id, field));\n    }\n\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue\n    });\n\n    if (!column.preProcessEditCellProps) {\n      updateOrDeleteFieldState(id, field, newProps);\n    }\n\n    return new Promise(resolve => {\n      const promises = [];\n\n      if (column.preProcessEditCellProps) {\n        const hasChanged = newProps.value !== editingState[id][field].value;\n        newProps = _extends({}, newProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, field, newProps);\n\n        const _editingState$id = editingState[id],\n              otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id, [field].map(_toPropertyKey));\n\n        const promise = Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: newProps,\n          hasChanged,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          }); // We don't reuse the value from the props pre-processing because when the\n          // promise resolves it may be already outdated. The only exception to this rule\n          // is when there's no pre-processing.\n\n          processedProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n          updateOrDeleteFieldState(id, field, processedProps);\n        });\n        promises.push(promise);\n      }\n\n      Object.entries(editingState[id]).forEach(([thisField, fieldProps]) => {\n        if (thisField === field) {\n          return;\n        }\n\n        const fieldColumn = apiRef.current.getColumn(thisField);\n\n        if (!fieldColumn.preProcessEditCellProps) {\n          return;\n        }\n\n        fieldProps = _extends({}, fieldProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, thisField, fieldProps);\n        editingState = gridEditRowsStateSelector(apiRef.current.state);\n\n        const _editingState$id2 = editingState[id],\n              otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id2, [thisField].map(_toPropertyKey));\n\n        const promise = Promise.resolve(fieldColumn.preProcessEditCellProps({\n          id,\n          row,\n          props: fieldProps,\n          hasChanged: false,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          updateOrDeleteFieldState(id, thisField, processedProps);\n        });\n        promises.push(promise);\n      });\n      Promise.all(promises).then(() => {\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          resolve(!editingState[id][field].error);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }, [apiRef, throwIfNotEditable, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromRowEditing = React.useCallback(id => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n\n    let rowUpdate = _extends({}, row);\n\n    Object.entries(editingState[id]).forEach(([field, fieldProps]) => {\n      const column = apiRef.current.getColumn(field);\n\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter({\n          value: fieldProps.value,\n          row: rowUpdate\n        });\n      } else {\n        rowUpdate[field] = fieldProps.value;\n      }\n    });\n    return rowUpdate;\n  }, [apiRef]);\n  const editingApi = {\n    getRowMode,\n    startRowEditMode,\n    stopRowEditMode,\n    unstable_setRowEditingEditCellValue: setRowEditingEditCellValue,\n    unstable_getRowWithUpdatedValuesFromRowEditing: getRowWithUpdatedValuesFromRowEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'EditingApi');\n  React.useEffect(() => {\n    if (rowModesModelProp) {\n      updateRowModesModel(rowModesModelProp);\n    }\n  }, [rowModesModelProp, updateRowModesModel]);\n  React.useEffect(() => {\n    const idToIdLookup = gridRowsIdToIdLookupSelector(apiRef); // Update the ref here because updateStateToStopRowEditMode may change it later\n\n    const copyOfPrevRowModesModel = prevRowModesModel.current;\n    prevRowModesModel.current = rowModesModel;\n    Object.entries(rowModesModel).forEach(([id, params]) => {\n      var _copyOfPrevRowModesMo, _idToIdLookup$id;\n\n      const prevMode = ((_copyOfPrevRowModesMo = copyOfPrevRowModesModel[id]) == null ? void 0 : _copyOfPrevRowModesMo.mode) || GridRowModes.View;\n      const originalId = (_idToIdLookup$id = idToIdLookup[id]) != null ? _idToIdLookup$id : id;\n\n      if (params.mode === GridRowModes.Edit && prevMode === GridRowModes.View) {\n        updateStateToStartRowEditMode(_extends({\n          id: originalId\n        }, params));\n      } else if (params.mode === GridRowModes.View && prevMode === GridRowModes.Edit) {\n        updateStateToStopRowEditMode(_extends({\n          id: originalId\n        }, params));\n      }\n    });\n  }, [apiRef, rowModesModel, updateStateToStartRowEditMode, updateStateToStopRowEditMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridCellEditing } from './useGridCellEditing.new';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { useGridRowEditing } from './useGridRowEditing.new';\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (params.rowNode.isAutoGenerated) {\n      return false;\n    }\n\n    if (!params.colDef.editable) {\n      return false;\n    }\n\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n\n    return true;\n  }, [isCellEditableProp]);\n\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    } // To run the callback immediatelly without waiting the timeout\n\n\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.unstable_setRowEditingEditCellValue : apiRef.current.unstable_setCellEditingEditCellValue; // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.unstable_getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.unstable_getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    unstable_runPendingEditCellValueMutation: runPendingEditCellValueMutation,\n    unstable_getRowWithUpdatedValues: getRowWithUpdatedValues\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'EditingApi');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"rowsBeforePartialUpdates\"];\n\n/**\n * A helper function to check if the id provided is valid.\n * @param {GridRowId} id Id as [[GridRowId]].\n * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].\n * @param {string} detailErrorMessage A custom error message to display for invalid IDs\n */\nexport function checkGridRowIdIsValid(id, row, detailErrorMessage = 'A row was provided without id in the rows prop:') {\n  if (id == null) {\n    throw new Error(['MUI: The data grid component requires all rows to have a unique `id` property.', 'Alternatively, you can use the `getRowId` prop to specify a custom id for each row.', detailErrorMessage, JSON.stringify(row)].join('\\n'));\n  }\n}\nexport const getRowIdFromRowModel = (rowModel, getRowId, detailErrorMessage) => {\n  const id = getRowId ? getRowId(rowModel) : rowModel.id;\n  checkGridRowIdIsValid(id, rowModel, detailErrorMessage);\n  return id;\n};\nexport const createRowsInternalCache = ({\n  rows,\n  getRowId,\n  loading\n}) => {\n  const cache = {\n    rowsBeforePartialUpdates: rows,\n    loadingPropBeforePartialUpdates: loading,\n    idRowsLookup: {},\n    idToIdLookup: {},\n    ids: []\n  };\n\n  for (let i = 0; i < rows.length; i += 1) {\n    const row = rows[i];\n    const id = getRowIdFromRowModel(row, getRowId);\n    cache.idRowsLookup[id] = row;\n    cache.idToIdLookup[id] = id;\n    cache.ids.push(id);\n  }\n\n  return cache;\n};\nexport const getRowsStateFromCache = ({\n  apiRef,\n  previousTree,\n  rowCountProp,\n  loadingProp\n}) => {\n  const _apiRef$current$unsta = apiRef.current.unstable_caches.rows,\n        cacheForGrouping = _objectWithoutPropertiesLoose(_apiRef$current$unsta, _excluded);\n\n  const rowCount = rowCountProp != null ? rowCountProp : 0;\n  const groupingResponse = apiRef.current.unstable_applyStrategyProcessor('rowTreeCreation', _extends({}, cacheForGrouping, {\n    previousTree\n  }));\n  const processedGroupingResponse = apiRef.current.unstable_applyPipeProcessors('hydrateRows', groupingResponse);\n  const dataTopLevelRowCount = processedGroupingResponse.treeDepth === 1 ? processedGroupingResponse.ids.length : Object.values(processedGroupingResponse.tree).filter(node => node.parent == null).length;\n  return _extends({}, processedGroupingResponse, {\n    groupingResponseBeforeRowHydration: groupingResponse,\n    loading: loadingProp,\n    totalRowCount: Math.max(rowCount, processedGroupingResponse.ids.length),\n    totalTopLevelRowCount: Math.max(rowCount, dataTopLevelRowCount)\n  });\n};\nexport const getTreeNodeDescendants = (tree, parentId, skipAutoGeneratedRows) => {\n  var _tree$parentId;\n\n  const children = (_tree$parentId = tree[parentId]) == null ? void 0 : _tree$parentId.children;\n\n  if (children == null) {\n    return [];\n  }\n\n  const validDescendants = [];\n\n  for (let i = 0; i < children.length; i += 1) {\n    const child = children[i];\n    const childNode = tree[child];\n\n    if (!skipAutoGeneratedRows || !childNode.isAutoGenerated) {\n      validDescendants.push(child);\n    }\n\n    validDescendants.push(...getTreeNodeDescendants(tree, childNode.id, skipAutoGeneratedRows));\n  }\n\n  return validDescendants;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowCountSelector, gridRowsLookupSelector, gridRowTreeSelector, gridRowIdsSelector, gridRowGroupingNameSelector } from './gridRowsSelector';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridSortedRowIdsSelector } from '../sorting/gridSortingSelector';\nimport { gridFilteredRowsLookupSelector } from '../filter/gridFilterSelector';\nimport { getTreeNodeDescendants, createRowsInternalCache, getRowsStateFromCache, getRowIdFromRowModel } from './gridRowsUtils';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nexport const rowsStateInitializer = (state, props, apiRef) => {\n  apiRef.current.unstable_caches.rows = createRowsInternalCache({\n    rows: props.rows,\n    getRowId: props.getRowId,\n    loading: props.loading\n  });\n  return _extends({}, state, {\n    rows: getRowsStateFromCache({\n      apiRef,\n      previousTree: null,\n      rowCountProp: props.rowCount,\n      loadingProp: props.loading\n    })\n  });\n};\nexport const useGridRows = (apiRef, props) => {\n  if (process.env.NODE_ENV !== 'production') {\n    // Freeze rows for immutability\n    Object.freeze(props.rows);\n  }\n\n  const logger = useGridLogger(apiRef, 'useGridRows');\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const lastUpdateMs = React.useRef(Date.now());\n  const timeout = React.useRef(null);\n  const getRow = React.useCallback(id => {\n    var _ref;\n\n    return (_ref = gridRowsLookupSelector(apiRef)[id]) != null ? _ref : null;\n  }, [apiRef]);\n  const lookup = React.useMemo(() => currentPage.rows.reduce((acc, {\n    id\n  }, index) => {\n    acc[id] = index;\n    return acc;\n  }, {}), [currentPage.rows]);\n  const throttledRowsChange = React.useCallback((newCache, throttle) => {\n    const run = () => {\n      timeout.current = null;\n      lastUpdateMs.current = Date.now();\n      apiRef.current.setState(state => _extends({}, state, {\n        rows: getRowsStateFromCache({\n          apiRef,\n          previousTree: gridRowTreeSelector(apiRef),\n          rowCountProp: props.rowCount,\n          loadingProp: props.loading\n        })\n      }));\n      apiRef.current.publishEvent('rowsSet');\n      apiRef.current.forceUpdate();\n    };\n\n    if (timeout.current) {\n      clearTimeout(timeout.current);\n      timeout.current = null;\n    }\n\n    apiRef.current.unstable_caches.rows = newCache;\n\n    if (!throttle) {\n      run();\n      return;\n    }\n\n    const throttleRemainingTimeMs = props.throttleRowsMs - (Date.now() - lastUpdateMs.current);\n\n    if (throttleRemainingTimeMs > 0) {\n      timeout.current = setTimeout(run, throttleRemainingTimeMs);\n      return;\n    }\n\n    run();\n  }, [props.throttleRowsMs, props.rowCount, props.loading, apiRef]);\n  /**\n   * API METHODS\n   */\n\n  const setRows = React.useCallback(rows => {\n    logger.debug(`Updating all rows, new length ${rows.length}`);\n    throttledRowsChange(createRowsInternalCache({\n      rows,\n      getRowId: props.getRowId,\n      loading: props.loading\n    }), true);\n  }, [logger, props.getRowId, props.loading, throttledRowsChange]);\n  const updateRows = React.useCallback(updates => {\n    if (props.signature === GridSignature.DataGrid && updates.length > 1) {\n      // TODO: Add test with direct call to `apiRef.current.updateRows` in DataGrid after enabling the `apiRef` on the free plan.\n      throw new Error([\"MUI: You can't update several rows at once in `apiRef.current.updateRows` on the DataGrid.\", 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    } // we remove duplicate updates. A server can batch updates, and send several updates for the same row in one fn call.\n\n\n    const uniqUpdates = new Map();\n    updates.forEach(update => {\n      const id = getRowIdFromRowModel(update, props.getRowId, 'A row was provided without id when calling updateRows():');\n\n      if (uniqUpdates.has(id)) {\n        uniqUpdates.set(id, _extends({}, uniqUpdates.get(id), update));\n      } else {\n        uniqUpdates.set(id, update);\n      }\n    });\n    const deletedRowIds = [];\n    const prevCache = apiRef.current.unstable_caches.rows;\n    const newCache = {\n      rowsBeforePartialUpdates: prevCache.rowsBeforePartialUpdates,\n      loadingPropBeforePartialUpdates: prevCache.loadingPropBeforePartialUpdates,\n      idRowsLookup: _extends({}, prevCache.idRowsLookup),\n      idToIdLookup: _extends({}, prevCache.idToIdLookup),\n      ids: [...prevCache.ids]\n    };\n    uniqUpdates.forEach((partialRow, id) => {\n      // eslint-disable-next-line no-underscore-dangle\n      if (partialRow._action === 'delete') {\n        delete newCache.idRowsLookup[id];\n        delete newCache.idToIdLookup[id];\n        deletedRowIds.push(id);\n        return;\n      }\n\n      const oldRow = apiRef.current.getRow(id);\n\n      if (!oldRow) {\n        newCache.idRowsLookup[id] = partialRow;\n        newCache.idToIdLookup[id] = id;\n        newCache.ids.push(id);\n        return;\n      }\n\n      newCache.idRowsLookup[id] = _extends({}, apiRef.current.getRow(id), partialRow);\n    });\n\n    if (deletedRowIds.length > 0) {\n      newCache.ids = newCache.ids.filter(id => !deletedRowIds.includes(id));\n    }\n\n    throttledRowsChange(newCache, true);\n  }, [props.signature, props.getRowId, throttledRowsChange, apiRef]);\n  const getRowModels = React.useCallback(() => {\n    const allRows = gridRowIdsSelector(apiRef);\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    return new Map(allRows.map(id => [id, idRowsLookup[id]]));\n  }, [apiRef]);\n  const getRowsCount = React.useCallback(() => gridRowCountSelector(apiRef), [apiRef]);\n  const getAllRowIds = React.useCallback(() => gridRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndexRelativeToVisibleRows = React.useCallback(id => lookup[id], [lookup]);\n  const setRowChildrenExpansion = React.useCallback((id, isExpanded) => {\n    const currentNode = apiRef.current.getRowNode(id);\n\n    if (!currentNode) {\n      throw new Error(`MUI: No row with id #${id} found`);\n    }\n\n    const newNode = _extends({}, currentNode, {\n      childrenExpanded: isExpanded\n    });\n\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [id]: newNode\n          })\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('rowExpansionChange', newNode);\n  }, [apiRef]);\n  const getRowNode = React.useCallback(id => {\n    var _gridRowTreeSelector$;\n\n    return (_gridRowTreeSelector$ = gridRowTreeSelector(apiRef)[id]) != null ? _gridRowTreeSelector$ : null;\n  }, [apiRef]);\n  const getRowGroupChildren = React.useCallback(({\n    skipAutoGeneratedRows = true,\n    groupId,\n    applySorting,\n    applyFiltering\n  }) => {\n    const tree = gridRowTreeSelector(apiRef);\n    let children;\n\n    if (applySorting) {\n      const groupNode = tree[groupId];\n\n      if (!groupNode) {\n        return [];\n      }\n\n      const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n      children = [];\n      const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n\n      for (let index = startIndex; index < sortedRowIds.length && tree[sortedRowIds[index]].depth > groupNode.depth; index += 1) {\n        const id = sortedRowIds[index];\n        const node = tree[id];\n\n        if (!skipAutoGeneratedRows || !node.isAutoGenerated) {\n          children.push(id);\n        }\n      }\n    } else {\n      children = getTreeNodeDescendants(tree, groupId, skipAutoGeneratedRows);\n    }\n\n    if (applyFiltering) {\n      const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n      children = children.filter(childId => filteredRowsLookup[childId] !== false);\n    }\n\n    return children;\n  }, [apiRef]);\n  const setRowIndex = React.useCallback((rowId, targetIndex) => {\n    const allRows = gridRowIdsSelector(apiRef);\n    const oldIndex = allRows.findIndex(row => row === rowId);\n\n    if (oldIndex === -1 || oldIndex === targetIndex) {\n      return;\n    }\n\n    logger.debug(`Moving row ${rowId} to index ${targetIndex}`);\n    const updatedRows = [...allRows];\n    updatedRows.splice(targetIndex, 0, updatedRows.splice(oldIndex, 1)[0]);\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        ids: updatedRows\n      })\n    }));\n    apiRef.current.applySorting();\n  }, [apiRef, logger]);\n  const rowApi = {\n    getRow,\n    getRowModels,\n    getRowsCount,\n    getAllRowIds,\n    setRows,\n    setRowIndex,\n    updateRows,\n    setRowChildrenExpansion,\n    getRowNode,\n    getRowIndexRelativeToVisibleRows,\n    getRowGroupChildren\n  };\n  /**\n   * EVENTS\n   */\n\n  const groupRows = React.useCallback(() => {\n    logger.info(`Row grouping pre-processing have changed, regenerating the row tree`);\n    let cache;\n\n    if (apiRef.current.unstable_caches.rows.rowsBeforePartialUpdates === props.rows) {\n      // The `props.rows` did not change since the last row grouping\n      // We can use the current rows cache which contains the partial updates done recently.\n      cache = apiRef.current.unstable_caches.rows;\n    } else {\n      // The `props.rows` has changed since the last row grouping\n      // We must use the new `props.rows` on the new grouping\n      // This occurs because this event is triggered before the `useEffect` on the rows when both the grouping pre-processing and the rows changes on the same render\n      cache = createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading\n      });\n    }\n\n    throttledRowsChange(cache, false);\n  }, [logger, apiRef, props.rows, props.getRowId, props.loading, throttledRowsChange]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'rowTreeCreation') {\n      groupRows();\n    }\n  }, [groupRows]);\n  const handleStrategyActivityChange = React.useCallback(() => {\n    // `rowTreeCreation` is the only processor ran when `strategyAvailabilityChange` is fired.\n    // All the other processors listen to `rowsSet` which will be published by the `groupRows` method below.\n    if (apiRef.current.unstable_getActiveStrategy('rowTree') !== gridRowGroupingNameSelector(apiRef)) {\n      groupRows();\n    }\n  }, [apiRef, groupRows]);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'strategyAvailabilityChange', handleStrategyActivityChange);\n  /**\n   * APPLIERS\n   */\n\n  const applyHydrateRowsProcessor = React.useCallback(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, apiRef.current.unstable_applyPipeProcessors('hydrateRows', state.rows.groupingResponseBeforeRowHydration))\n    }));\n    apiRef.current.publishEvent('rowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateRows', applyHydrateRowsProcessor);\n  useGridApiMethod(apiRef, rowApi, 'GridRowApi');\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    return () => {\n      if (timeout.current !== null) {\n        clearTimeout(timeout.current);\n      }\n    };\n  }, []); // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridRows`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n\n    const areNewRowsAlreadyInState = apiRef.current.unstable_caches.rows.rowsBeforePartialUpdates === props.rows;\n    const isNewLoadingAlreadyInState = apiRef.current.unstable_caches.rows.loadingPropBeforePartialUpdates === props.loading; // The new rows have already been applied (most likely in the `'rowGroupsPreProcessingChange'` listener)\n\n    if (areNewRowsAlreadyInState) {\n      // If the loading prop has changed, we need to update its value in the state because it won't be done by `throttledRowsChange`\n      if (!isNewLoadingAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            loading: props.loading\n          })\n        }));\n        apiRef.current.unstable_caches.rows.loadingPropBeforePartialUpdates = props.loading;\n        apiRef.current.forceUpdate();\n      }\n\n      return;\n    }\n\n    logger.debug(`Updating all rows, new length ${props.rows.length}`);\n    throttledRowsChange(createRowsInternalCache({\n      rows: props.rows,\n      getRowId: props.getRowId,\n      loading: props.loading\n    }), false);\n  }, [props.rows, props.rowCount, props.getRowId, props.loading, logger, throttledRowsChange, apiRef]);\n};","import { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\n\nconst flatRowTreeCreationMethod = ({\n  ids,\n  idRowsLookup,\n  idToIdLookup,\n  previousTree\n}) => {\n  const tree = {};\n\n  for (let i = 0; i < ids.length; i += 1) {\n    const rowId = ids[i];\n\n    if (previousTree && previousTree[rowId] && previousTree[rowId].depth === 0 && previousTree[rowId].parent == null) {\n      tree[rowId] = previousTree[rowId];\n    } else {\n      tree[rowId] = {\n        id: rowId,\n        depth: 0,\n        parent: null,\n        groupingKey: '',\n        groupingField: null\n      };\n    }\n  }\n\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepth: 1,\n    idRowsLookup,\n    idToIdLookup,\n    ids\n  };\n};\n\nexport const useGridRowsPreProcessors = apiRef => {\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'rowTreeCreation', flatRowTreeCreationMethod);\n};","import { gridClasses } from '../constants/gridClasses';\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\nexport function findParentElementFromClassName(elem, className) {\n  return elem.closest(`.${className}`);\n}\nexport function getRowEl(cell) {\n  if (!cell) {\n    return null;\n  }\n\n  return findParentElementFromClassName(cell, gridClasses.row);\n} // TODO remove\n\nexport function isGridCellRoot(elem) {\n  return elem != null && elem.classList.contains(gridClasses.cell);\n}\nexport function isGridHeaderCellRoot(elem) {\n  return elem != null && elem.classList.contains(gridClasses.columnHeader);\n}\n\nfunction escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}\n\nexport function getGridColumnHeaderElement(root, field) {\n  return root.querySelector(`[role=\"columnheader\"][data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nexport function getGridRowElement(root, id) {\n  return root.querySelector(`.${gridClasses.row}[data-id=\"${escapeOperandAttributeSelector(String(id))}\"]`);\n}\nexport function getGridCellElement(root, {\n  id,\n  field\n}) {\n  const row = getGridRowElement(root, id);\n\n  if (!row) {\n    return null;\n  }\n\n  return row.querySelector(`.${gridClasses.cell}[data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}","import * as React from 'react';\nimport { getGridCellElement, getGridColumnHeaderElement, getGridRowElement } from '../../../utils/domUtils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nimport { buildWarning } from '../../../utils/warning';\nlet warnedOnceMissingColumn = false;\n\nfunction warnMissingColumn(field) {\n  console.warn([`MUI: You are calling getValue('${field}') but the column \\`${field}\\` is not defined.`, `Instead, you can access the data from \\`params.row.${field}\\`.`].join('\\n'));\n  warnedOnceMissingColumn = true;\n}\n\nconst getCellValueWarning = buildWarning([`MUI: You are calling getValue. This method is deprecated and will be removed in the next major version.`, 'Instead, you can access the data from `params.row`.']);\n/**\n * @requires useGridColumns (method)\n * @requires useGridRows (method)\n * @requires useGridFocus (state)\n * @requires useGridEditing (method)\n * TODO: Impossible priority - useGridEditing also needs to be after useGridParamsApi\n * TODO: Impossible priority - useGridFocus also needs to be after useGridParamsApi\n */\n\nexport function useGridParamsApi(apiRef) {\n  const getColumnHeaderParams = React.useCallback(field => ({\n    field,\n    colDef: apiRef.current.getColumn(field)\n  }), [apiRef]);\n  /**\n   * We want to remove the `getValue` param from `getRowParams`, `getCellParams` and `getBaseCellParams`\n   */\n\n  const getCellValueWithDeprecationWarning = React.useCallback((...args) => {\n    if (process.env.NODE_ENV !== 'production') {\n      getCellValueWarning();\n    }\n\n    return apiRef.current.getCellValue(...args);\n  }, [apiRef]);\n  const getRowParams = React.useCallback(id => {\n    const row = apiRef.current.getRow(id);\n\n    if (!row) {\n      throw new Error(`No row with id #${id} found`);\n    }\n\n    const params = {\n      id,\n      columns: apiRef.current.getAllColumns(),\n      row,\n      // TODO v6: remove\n      getValue: getCellValueWithDeprecationWarning\n    };\n    return params;\n  }, [apiRef, getCellValueWithDeprecationWarning]);\n  const getBaseCellParams = React.useCallback((id, field) => {\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n\n    if (!row || !rowNode) {\n      throw new Error(`No row with id #${id} found`);\n    }\n\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      value: row[field],\n      colDef: apiRef.current.getColumn(field),\n      cellMode: apiRef.current.getCellMode(id, field),\n      // TODO v6: remove\n      getValue: getCellValueWithDeprecationWarning,\n      api: apiRef.current,\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1\n    };\n    return params;\n  }, [apiRef, getCellValueWithDeprecationWarning]);\n  const getCellParams = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const value = apiRef.current.getCellValue(id, field);\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n\n    if (!row || !rowNode) {\n      throw new Error(`No row with id #${id} found`);\n    }\n\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      colDef,\n      cellMode: apiRef.current.getCellMode(id, field),\n      // TODO v6: remove\n      getValue: getCellValueWithDeprecationWarning,\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1,\n      value,\n      formattedValue: value\n    };\n\n    if (colDef.valueFormatter) {\n      params.formattedValue = colDef.valueFormatter({\n        id,\n        field: params.field,\n        value: params.value,\n        api: apiRef.current\n      });\n    }\n\n    params.isEditable = colDef && apiRef.current.isCellEditable(params);\n    return params;\n  }, [apiRef, getCellValueWithDeprecationWarning]);\n  const getCellValue = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!colDef && !warnedOnceMissingColumn) {\n        warnMissingColumn(field);\n      }\n    }\n\n    if (!colDef || !colDef.valueGetter) {\n      const rowModel = apiRef.current.getRow(id);\n\n      if (!rowModel) {\n        throw new Error(`No row with id #${id} found`);\n      }\n\n      return rowModel[field];\n    }\n\n    return colDef.valueGetter(getBaseCellParams(id, field));\n  }, [apiRef, getBaseCellParams]);\n  const getColumnHeaderElement = React.useCallback(field => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n\n    return getGridColumnHeaderElement(apiRef.current.rootElementRef.current, field);\n  }, [apiRef]);\n  const getRowElement = React.useCallback(id => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n\n    return getGridRowElement(apiRef.current.rootElementRef.current, id);\n  }, [apiRef]);\n  const getCellElement = React.useCallback((id, field) => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n\n    return getGridCellElement(apiRef.current.rootElementRef.current, {\n      id,\n      field\n    });\n  }, [apiRef]);\n  const paramsApi = {\n    getCellValue,\n    getCellParams,\n    getCellElement,\n    getRowParams,\n    getRowElement,\n    getColumnHeaderParams,\n    getColumnHeaderElement\n  };\n  useGridApiMethod(apiRef, paramsApi, 'GridParamsApi');\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nimport { gridSelectionStateSelector, selectedGridRowsSelector, selectedIdsLookupSelector } from './gridSelectionSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../pagination';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { gridVisibleSortedRowIdsSelector } from '../filter/gridFilterSelector';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from '../../../colDef';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isKeyboardEvent, isNavigationKey } from '../../../utils/keyboardUtils';\nimport { getVisibleRows, useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\n\nconst getSelectionModelPropValue = (selectionModelProp, prevSelectionModel) => {\n  if (selectionModelProp == null) {\n    return selectionModelProp;\n  }\n\n  if (Array.isArray(selectionModelProp)) {\n    return selectionModelProp;\n  }\n\n  if (prevSelectionModel && prevSelectionModel[0] === selectionModelProp) {\n    return prevSelectionModel;\n  }\n\n  return [selectionModelProp];\n};\n\nexport const selectionStateInitializer = (state, props) => {\n  var _getSelectionModelPro;\n\n  return _extends({}, state, {\n    selection: (_getSelectionModelPro = getSelectionModelPropValue(props.selectionModel)) != null ? _getSelectionModelPro : []\n  });\n};\n/**\n * @requires useGridRows (state, method) - can be after\n * @requires useGridParamsApi (method) - can be after\n * @requires useGridFocus (state) - can be after\n * @requires useGridKeyboardNavigation (`cellKeyDown` event must first be consumed by it)\n */\n\nexport const useGridSelection = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSelection');\n  const propSelectionModel = React.useMemo(() => {\n    return getSelectionModelPropValue(props.selectionModel, gridSelectionStateSelector(apiRef.current.state));\n  }, [apiRef, props.selectionModel]);\n  const lastRowToggled = React.useRef(null);\n  apiRef.current.unstable_registerControlState({\n    stateId: 'selection',\n    propModel: propSelectionModel,\n    propOnChange: props.onSelectionModelChange,\n    stateSelector: gridSelectionStateSelector,\n    changeEvent: 'selectionChange'\n  });\n  const {\n    checkboxSelection,\n    disableMultipleSelection,\n    disableSelectionOnClick,\n    isRowSelectable,\n    pagination,\n    paginationMode\n  } = props;\n  const canHaveMultipleSelection = !disableMultipleSelection || checkboxSelection;\n  const visibleRows = useGridVisibleRows(apiRef, props);\n  const expandMouseRowRangeSelection = React.useCallback(id => {\n    var _lastRowToggled$curre;\n\n    let endId = id;\n    const startId = (_lastRowToggled$curre = lastRowToggled.current) != null ? _lastRowToggled$curre : id;\n    const isSelected = apiRef.current.isRowSelected(id);\n\n    if (isSelected) {\n      const visibleRowIds = gridVisibleSortedRowIdsSelector(apiRef);\n      const startIndex = visibleRowIds.findIndex(rowId => rowId === startId);\n      const endIndex = visibleRowIds.findIndex(rowId => rowId === endId);\n\n      if (startIndex === endIndex) {\n        return;\n      }\n\n      if (startIndex > endIndex) {\n        endId = visibleRowIds[endIndex + 1];\n      } else {\n        endId = visibleRowIds[endIndex - 1];\n      }\n    }\n\n    lastRowToggled.current = id;\n    apiRef.current.selectRowRange({\n      startId,\n      endId\n    }, !isSelected);\n  }, [apiRef]);\n  /**\n   * API METHODS\n   */\n\n  const setSelectionModel = React.useCallback(model => {\n    const currentModel = gridSelectionStateSelector(apiRef.current.state);\n\n    if (currentModel !== model) {\n      logger.debug(`Setting selection model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        selection: model\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const isRowSelected = React.useCallback(id => gridSelectionStateSelector(apiRef.current.state).includes(id), [apiRef]);\n  const getSelectedRows = React.useCallback(() => selectedGridRowsSelector(apiRef), [apiRef]);\n  const selectRow = React.useCallback((id, isSelected = true, resetSelection = false) => {\n    if (isRowSelectable && !isRowSelectable(apiRef.current.getRowParams(id))) {\n      return;\n    }\n\n    lastRowToggled.current = id;\n\n    if (resetSelection) {\n      logger.debug(`Setting selection for row ${id}`);\n      apiRef.current.setSelectionModel(isSelected ? [id] : []);\n    } else {\n      logger.debug(`Toggling selection for row ${id}`);\n      const selection = gridSelectionStateSelector(apiRef.current.state);\n      const newSelection = selection.filter(el => el !== id);\n\n      if (isSelected) {\n        newSelection.push(id);\n      }\n\n      const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n\n      if (isSelectionValid) {\n        apiRef.current.setSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, logger, canHaveMultipleSelection]);\n  const selectRows = React.useCallback((ids, isSelected = true, resetSelection = false) => {\n    logger.debug(`Setting selection for several rows`);\n    const selectableIds = isRowSelectable ? ids.filter(id => isRowSelectable(apiRef.current.getRowParams(id))) : ids;\n    let newSelection;\n\n    if (resetSelection) {\n      newSelection = isSelected ? selectableIds : [];\n    } else {\n      // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n      const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n\n      selectableIds.forEach(id => {\n        if (isSelected) {\n          selectionLookup[id] = id;\n        } else {\n          delete selectionLookup[id];\n        }\n      });\n      newSelection = Object.values(selectionLookup);\n    }\n\n    const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n\n    if (isSelectionValid) {\n      apiRef.current.setSelectionModel(newSelection);\n    }\n  }, [apiRef, isRowSelectable, logger, canHaveMultipleSelection]);\n  const selectRowRange = React.useCallback(({\n    startId,\n    endId\n  }, isSelected = true, resetSelection) => {\n    if (!apiRef.current.getRow(startId) || !apiRef.current.getRow(endId)) {\n      return;\n    }\n\n    logger.debug(`Expanding selection from row ${startId} to row ${endId}`); // Using rows from all pages allow to select a range across several pages\n\n    const allPagesRowIds = gridVisibleSortedRowIdsSelector(apiRef);\n    const startIndex = allPagesRowIds.indexOf(startId);\n    const endIndex = allPagesRowIds.indexOf(endId);\n    const [start, end] = startIndex > endIndex ? [endIndex, startIndex] : [startIndex, endIndex];\n    const rowsBetweenStartAndEnd = allPagesRowIds.slice(start, end + 1);\n    apiRef.current.selectRows(rowsBetweenStartAndEnd, isSelected, resetSelection);\n  }, [apiRef, logger]);\n  const selectionApi = {\n    selectRow,\n    selectRows,\n    selectRowRange,\n    setSelectionModel,\n    getSelectedRows,\n    isRowSelected\n  };\n  useGridApiMethod(apiRef, selectionApi, 'GridSelectionApi');\n  /**\n   * EVENTS\n   */\n\n  const removeOutdatedSelection = React.useCallback(() => {\n    if (props.keepNonExistentRowsSelected) {\n      return;\n    }\n\n    const currentSelection = gridSelectionStateSelector(apiRef.current.state);\n    const rowsLookup = gridRowsLookupSelector(apiRef); // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n\n    const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n\n    let hasChanged = false;\n    currentSelection.forEach(id => {\n      if (!rowsLookup[id]) {\n        delete selectionLookup[id];\n        hasChanged = true;\n      }\n    });\n\n    if (hasChanged) {\n      apiRef.current.setSelectionModel(Object.values(selectionLookup));\n    }\n  }, [apiRef, props.keepNonExistentRowsSelected]);\n  const handleSingleRowSelection = React.useCallback((id, event) => {\n    const hasCtrlKey = event.metaKey || event.ctrlKey; // multiple selection is only allowed if:\n    // - it is a checkboxSelection\n    // - it is a keyboard selection\n    // - Ctrl is pressed\n\n    const isMultipleSelectionDisabled = !checkboxSelection && !hasCtrlKey && !isKeyboardEvent(event);\n    const resetSelection = !canHaveMultipleSelection || isMultipleSelectionDisabled;\n    const isSelected = apiRef.current.isRowSelected(id);\n\n    if (resetSelection) {\n      apiRef.current.selectRow(id, !isMultipleSelectionDisabled ? !isSelected : true, true);\n    } else {\n      apiRef.current.selectRow(id, !isSelected, false);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection]);\n  const handleCellClick = React.useCallback((params, event) => {\n    if (disableSelectionOnClick) {\n      return;\n    }\n\n    if (params.field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // click on checkbox should not trigger row selection\n      return;\n    }\n\n    if (params.field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      // click to open the detail panel should not select the row\n      return;\n    }\n\n    if (params.field) {\n      const column = apiRef.current.getColumn(params.field);\n\n      if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n\n    if (event.shiftKey && (canHaveMultipleSelection || checkboxSelection)) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      handleSingleRowSelection(params.id, event);\n    }\n  }, [disableSelectionOnClick, canHaveMultipleSelection, checkboxSelection, apiRef, expandMouseRowRangeSelection, handleSingleRowSelection]);\n  const preventSelectionOnShift = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.shiftKey) {\n      var _window$getSelection;\n\n      (_window$getSelection = window.getSelection()) == null ? void 0 : _window$getSelection.removeAllRanges();\n    }\n  }, [canHaveMultipleSelection]);\n  const handleRowSelectionCheckboxChange = React.useCallback((params, event) => {\n    if (event.nativeEvent.shiftKey) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      apiRef.current.selectRow(params.id, params.value);\n    }\n  }, [apiRef, expandMouseRowRangeSelection]);\n  const handleHeaderSelectionCheckboxChange = React.useCallback(params => {\n    const shouldLimitSelectionToCurrentPage = props.checkboxSelectionVisibleOnly && props.pagination;\n    const rowsToBeSelected = shouldLimitSelectionToCurrentPage ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridVisibleSortedRowIdsSelector(apiRef);\n    apiRef.current.selectRows(rowsToBeSelected, params.value);\n  }, [apiRef, props.checkboxSelectionVisibleOnly, props.pagination]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Get the most recent cell mode because it may have been changed by another listener\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.Edit) {\n      return;\n    } // Ignore portal\n    // Do not apply shortcuts if the focus is not on the cell root component\n\n\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    }\n\n    if (isNavigationKey(event.key) && event.shiftKey) {\n      // The cell that has focus after the keyboard navigation\n      const focusCell = gridFocusCellSelector(apiRef);\n\n      if (focusCell && focusCell.id !== params.id) {\n        event.preventDefault();\n        const isNextRowSelected = apiRef.current.isRowSelected(focusCell.id);\n\n        if (!canHaveMultipleSelection) {\n          apiRef.current.selectRow(focusCell.id, !isNextRowSelected, true);\n          return;\n        }\n\n        const newRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(focusCell.id);\n        const previousRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\n        let start;\n        let end;\n\n        if (newRowIndex > previousRowIndex) {\n          if (isNextRowSelected) {\n            // We are navigating to the bottom of the page and adding selected rows\n            start = previousRowIndex;\n            end = newRowIndex - 1;\n          } else {\n            // We are navigating to the bottom of the page and removing selected rows\n            start = previousRowIndex;\n            end = newRowIndex;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (isNextRowSelected) {\n            // We are navigating to the top of the page and removing selected rows\n            start = newRowIndex + 1;\n            end = previousRowIndex;\n          } else {\n            // We are navigating to the top of the page and adding selected rows\n            start = newRowIndex;\n            end = previousRowIndex;\n          }\n        }\n\n        const rowsBetweenStartAndEnd = visibleRows.rows.slice(start, end + 1).map(row => row.id);\n        apiRef.current.selectRows(rowsBetweenStartAndEnd, !isNextRowSelected);\n        return;\n      }\n    }\n\n    if (event.key === ' ' && event.shiftKey) {\n      event.preventDefault();\n      handleSingleRowSelection(params.id, event);\n      return;\n    }\n\n    if (event.key.toLowerCase() === 'a' && (event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n      selectRows(apiRef.current.getAllRowIds(), true);\n    }\n  }, [apiRef, handleSingleRowSelection, selectRows, visibleRows.rows, canHaveMultipleSelection]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', removeOutdatedSelection);\n  useGridApiEventHandler(apiRef, 'cellClick', handleCellClick);\n  useGridApiEventHandler(apiRef, 'rowSelectionCheckboxChange', handleRowSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'headerSelectionCheckboxChange', handleHeaderSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', preventSelectionOnShift);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (propSelectionModel !== undefined) {\n      apiRef.current.setSelectionModel(propSelectionModel);\n    }\n  }, [apiRef, propSelectionModel]);\n  const isStateControlled = propSelectionModel != null;\n  React.useEffect(() => {\n    if (isStateControlled) {\n      return;\n    } // isRowSelectable changed\n\n\n    const currentSelection = gridSelectionStateSelector(apiRef.current.state);\n\n    if (isRowSelectable) {\n      const newSelection = currentSelection.filter(id => isRowSelectable(apiRef.current.getRowParams(id)));\n\n      if (newSelection.length < currentSelection.length) {\n        apiRef.current.setSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, isStateControlled]);\n  React.useEffect(() => {\n    const currentSelection = gridSelectionStateSelector(apiRef.current.state);\n\n    if (!canHaveMultipleSelection && currentSelection.length > 1) {\n      const {\n        rows: currentPageRows\n      } = getVisibleRows(apiRef, {\n        pagination,\n        paginationMode\n      });\n      const currentPageRowsLookup = currentPageRows.reduce((acc, {\n        id\n      }) => {\n        acc[id] = true;\n        return acc;\n      }, {});\n      const firstSelectableRow = currentSelection.find(id => {\n        let isSelectable = true;\n\n        if (isRowSelectable) {\n          isSelectable = isRowSelectable(apiRef.current.getRowParams(id));\n        }\n\n        return isSelectable && currentPageRowsLookup[id]; // Check if the row is in the current page\n      });\n      apiRef.current.setSelectionModel(firstSelectableRow !== undefined ? [firstSelectableRow] : []);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection, disableMultipleSelection, isRowSelectable, pagination, paginationMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { getDataGridUtilityClass } from '../../../constants';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_CHECKBOX_SELECTION_FIELD } from '../../../colDef';\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\n\nexport const useGridSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] != null;\n\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.all = [GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.all];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.all = columnsState.all.filter(field => field !== GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = _extends({}, selectionColumn, columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridFeatureModeConstant } from '../../../models/gridFeatureMode';\nimport { isEnterKey } from '../../../utils/keyboardUtils';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridSortedRowEntriesSelector, gridSortedRowIdsSelector, gridSortModelSelector } from './gridSortingSelector';\nimport { gridRowIdsSelector, gridRowTreeSelector } from '../rows';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { useGridRegisterStrategyProcessor, GRID_DEFAULT_STRATEGY } from '../../core/strategyProcessing';\nimport { buildAggregatedSortingApplier, mergeStateWithSortModel, getNextGridSortDirection, sanitizeSortModel } from './gridSortingUtils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nexport const sortingStateInitializer = (state, props) => {\n  var _ref, _props$sortModel, _props$initialState, _props$initialState$s;\n\n  const sortModel = (_ref = (_props$sortModel = props.sortModel) != null ? _props$sortModel : (_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$s = _props$initialState.sorting) == null ? void 0 : _props$initialState$s.sortModel) != null ? _ref : [];\n  return _extends({}, state, {\n    sorting: {\n      sortModel: sanitizeSortModel(sortModel, props.disableMultipleColumnsSorting),\n      sortedRows: []\n    }\n  });\n};\n/**\n * @requires useGridRows (event)\n * @requires useGridColumns (event)\n */\n\nexport const useGridSorting = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSorting');\n  apiRef.current.unstable_registerControlState({\n    stateId: 'sortModel',\n    propModel: props.sortModel,\n    propOnChange: props.onSortModelChange,\n    stateSelector: gridSortModelSelector,\n    changeEvent: 'sortModelChange'\n  });\n  const upsertSortModel = React.useCallback((field, sortItem) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existingIdx = sortModel.findIndex(c => c.field === field);\n    let newSortModel = [...sortModel];\n\n    if (existingIdx > -1) {\n      if (!sortItem) {\n        newSortModel.splice(existingIdx, 1);\n      } else {\n        newSortModel.splice(existingIdx, 1, sortItem);\n      }\n    } else {\n      newSortModel = [...sortModel, sortItem];\n    }\n\n    return newSortModel;\n  }, [apiRef]);\n  const createSortItem = React.useCallback((col, directionOverride) => {\n    var _col$sortingOrder2;\n\n    const sortModel = gridSortModelSelector(apiRef);\n    const existing = sortModel.find(c => c.field === col.field);\n\n    if (existing) {\n      var _col$sortingOrder;\n\n      const nextSort = directionOverride === undefined ? getNextGridSortDirection((_col$sortingOrder = col.sortingOrder) != null ? _col$sortingOrder : props.sortingOrder, existing.sort) : directionOverride;\n      return nextSort == null ? undefined : _extends({}, existing, {\n        sort: nextSort\n      });\n    }\n\n    return {\n      field: col.field,\n      sort: directionOverride === undefined ? getNextGridSortDirection((_col$sortingOrder2 = col.sortingOrder) != null ? _col$sortingOrder2 : props.sortingOrder) : directionOverride\n    };\n  }, [apiRef, props.sortingOrder]);\n  /**\n   * API METHODS\n   */\n\n  const applySorting = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (props.sortingMode === GridFeatureModeConstant.server) {\n        logger.debug('Skipping sorting rows as sortingMode = server');\n        return _extends({}, state, {\n          sorting: _extends({}, state.sorting, {\n            sortedRows: gridRowIdsSelector(state, apiRef.current.instanceId)\n          })\n        });\n      }\n\n      const sortModel = gridSortModelSelector(state, apiRef.current.instanceId);\n      const sortRowList = buildAggregatedSortingApplier(sortModel, apiRef);\n      const sortedRows = apiRef.current.unstable_applyStrategyProcessor('sorting', {\n        sortRowList\n      });\n      return _extends({}, state, {\n        sorting: _extends({}, state.sorting, {\n          sortedRows\n        })\n      });\n    });\n    apiRef.current.publishEvent('sortedRowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.sortingMode]);\n  const setSortModel = React.useCallback(model => {\n    const currentModel = gridSortModelSelector(apiRef);\n\n    if (currentModel !== model) {\n      logger.debug(`Setting sort model`);\n      apiRef.current.setState(mergeStateWithSortModel(model, props.disableMultipleColumnsSorting));\n      apiRef.current.forceUpdate();\n      apiRef.current.applySorting();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsSorting]);\n  const sortColumn = React.useCallback((column, direction, allowMultipleSorting) => {\n    if (!column.sortable) {\n      return;\n    }\n\n    const sortItem = createSortItem(column, direction);\n    let sortModel;\n\n    if (!allowMultipleSorting || props.disableMultipleColumnsSorting) {\n      sortModel = !sortItem ? [] : [sortItem];\n    } else {\n      sortModel = upsertSortModel(column.field, sortItem);\n    }\n\n    apiRef.current.setSortModel(sortModel);\n  }, [apiRef, upsertSortModel, createSortItem, props.disableMultipleColumnsSorting]);\n  const getSortModel = React.useCallback(() => gridSortModelSelector(apiRef), [apiRef]);\n  const getSortedRows = React.useCallback(() => {\n    const sortedRows = gridSortedRowEntriesSelector(apiRef);\n    return sortedRows.map(row => row.model);\n  }, [apiRef]);\n  const getSortedRowIds = React.useCallback(() => gridSortedRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndex = React.useCallback(id => apiRef.current.getSortedRowIds().indexOf(id), [apiRef]);\n  const getRowIdFromRowIndex = React.useCallback(index => apiRef.current.getSortedRowIds()[index], [apiRef]);\n  const sortApi = {\n    getSortModel,\n    getSortedRows,\n    getSortedRowIds,\n    getRowIndex,\n    getRowIdFromRowIndex,\n    setSortModel,\n    sortColumn,\n    applySorting\n  };\n  useGridApiMethod(apiRef, sortApi, 'GridSortApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback(prevState => {\n    const sortModelToExport = gridSortModelSelector(apiRef);\n\n    if (sortModelToExport.length === 0) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      sorting: {\n        sortModel: sortModelToExport\n      }\n    });\n  }, [apiRef]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n\n    const sortModel = (_context$stateToResto = context.stateToRestore.sorting) == null ? void 0 : _context$stateToResto.sortModel;\n\n    if (sortModel == null) {\n      return params;\n    }\n\n    apiRef.current.setState(mergeStateWithSortModel(sortModel, props.disableMultipleColumnsSorting));\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.applySorting]\n    });\n  }, [apiRef, props.disableMultipleColumnsSorting]);\n  const flatSortingMethod = React.useCallback(params => {\n    if (!params.sortRowList) {\n      return gridRowIdsSelector(apiRef);\n    }\n\n    const rowTree = gridRowTreeSelector(apiRef);\n    return params.sortRowList(Object.values(rowTree));\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'sorting', flatSortingMethod);\n  /**\n   * EVENTS\n   */\n\n  const handleColumnHeaderClick = React.useCallback(({\n    colDef\n  }, event) => {\n    const allowMultipleSorting = event.shiftKey || event.metaKey || event.ctrlKey;\n    sortColumn(colDef, undefined, allowMultipleSorting);\n  }, [sortColumn]);\n  const handleColumnHeaderKeyDown = React.useCallback(({\n    colDef\n  }, event) => {\n    // Ctrl + Enter opens the column menu\n    if (isEnterKey(event.key) && !event.ctrlKey && !event.metaKey) {\n      sortColumn(colDef, undefined, event.shiftKey);\n    }\n  }, [sortColumn]);\n  const handleColumnsChange = React.useCallback(() => {\n    // When the columns change we check that the sorted columns are still part of the dataset\n    const sortModel = gridSortModelSelector(apiRef);\n    const latestColumns = gridColumnLookupSelector(apiRef);\n\n    if (sortModel.length > 0) {\n      const newModel = sortModel.filter(sortItem => latestColumns[sortItem.field]);\n\n      if (newModel.length < sortModel.length) {\n        apiRef.current.setSortModel(newModel);\n      }\n    }\n  }, [apiRef]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'sorting') {\n      apiRef.current.applySorting();\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnHeaderClick', handleColumnHeaderClick);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'rowsSet', apiRef.current.applySorting);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  /**\n   * 1ST RENDER\n   */\n\n  useFirstRender(() => {\n    apiRef.current.applySorting();\n  });\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (props.sortModel !== undefined) {\n      apiRef.current.setSortModel(props.sortModel);\n    }\n  }, [apiRef, props.sortModel]);\n};","import * as React from 'react';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridPageSelector, gridPageSizeSelector } from '../pagination/gridPaginationSelector';\nimport { gridRowCountSelector } from '../rows/gridRowsSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridVisibleSortedRowEntriesSelector } from '../filter/gridFilterSelector'; // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\n\nfunction scrollIntoView(dimensions) {\n  const {\n    clientHeight,\n    scrollTop,\n    offsetHeight,\n    offsetTop\n  } = dimensions;\n  const elementBottom = offsetTop + offsetHeight; // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n\n  if (offsetHeight > clientHeight) {\n    return offsetTop;\n  }\n\n  if (elementBottom - clientHeight > scrollTop) {\n    return elementBottom - clientHeight;\n  }\n\n  if (offsetTop < scrollTop) {\n    return offsetTop;\n  }\n\n  return undefined;\n}\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\n\n\nexport const useGridScroll = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersElementRef;\n  const windowRef = apiRef.current.windowRef;\n  const visibleSortedRows = useGridSelector(apiRef, gridVisibleSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const totalRowCount = gridRowCountSelector(apiRef);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n\n    if (params.colIndex != null) {\n      const columnPositions = gridColumnPositionsSelector(apiRef);\n      let cellWidth;\n\n      if (typeof params.rowIndex !== 'undefined') {\n        var _visibleSortedRows$pa;\n\n        const rowId = (_visibleSortedRows$pa = visibleSortedRows[params.rowIndex]) == null ? void 0 : _visibleSortedRows$pa.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n\n      scrollCoordinates.left = scrollIntoView({\n        clientHeight: windowRef.current.clientWidth,\n        scrollTop: windowRef.current.scrollLeft,\n        offsetHeight: cellWidth,\n        offsetTop: columnPositions[params.colIndex]\n      });\n    }\n\n    if (params.rowIndex != null) {\n      const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      const page = gridPageSelector(apiRef);\n      const pageSize = gridPageSizeSelector(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      scrollCoordinates.top = scrollIntoView({\n        clientHeight: windowRef.current.clientHeight,\n        scrollTop: windowRef.current.scrollTop,\n        offsetHeight: targetOffsetHeight,\n        offsetTop: rowsMeta.positions[elementIndex]\n      });\n    }\n\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n\n    return false;\n  }, [logger, apiRef, windowRef, props.pagination, visibleSortedRows]);\n  const scroll = React.useCallback(params => {\n    if (windowRef.current && params.left != null && colRef.current) {\n      colRef.current.scrollLeft = params.left;\n      windowRef.current.scrollLeft = params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n\n    if (windowRef.current && params.top != null) {\n      windowRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [windowRef, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!(windowRef != null && windowRef.current)) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n\n    return {\n      top: windowRef.current.scrollTop,\n      left: windowRef.current.scrollLeft\n    };\n  }, [windowRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'GridScrollApi');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { debounce } from '@mui/material/utils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridDensityRowHeightSelector, gridDensityFactorSelector } from '../density/densitySelector';\nimport { gridFilterStateSelector } from '../filter/gridFilterSelector';\nimport { gridPaginationSelector } from '../pagination/gridPaginationSelector';\nimport { gridSortingStateSelector } from '../sorting/gridSortingSelector';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nexport const rowsMetaStateInitializer = state => _extends({}, state, {\n  rowsMeta: {\n    currentPageTotalHeight: 0,\n    positions: []\n  }\n});\n/**\n * @requires useGridPageSize (method)\n * @requires useGridPage (method)\n */\n\nexport const useGridRowsMeta = (apiRef, props) => {\n  const {\n    getRowHeight: getRowHeightProp,\n    getRowSpacing,\n    getEstimatedRowHeight\n  } = props;\n  const rowsHeightLookup = React.useRef({}); // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n\n  const lastMeasuredRowIndex = React.useRef(-1);\n  const hasRowWithAutoHeight = React.useRef(false);\n  const rowHeightFromDensity = useGridSelector(apiRef, gridDensityRowHeightSelector);\n  const filterState = useGridSelector(apiRef, gridFilterStateSelector);\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const sortingState = useGridSelector(apiRef, gridSortingStateSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const hydrateRowsMeta = React.useCallback(() => {\n    hasRowWithAutoHeight.current = false;\n    const densityFactor = gridDensityFactorSelector(apiRef.current.state, apiRef.current.instanceId);\n    const positions = [];\n    const currentPageTotalHeight = currentPage.rows.reduce((acc, row) => {\n      positions.push(acc);\n\n      if (!rowsHeightLookup.current[row.id]) {\n        rowsHeightLookup.current[row.id] = {\n          sizes: {\n            base: rowHeightFromDensity\n          },\n          isResized: false,\n          autoHeight: false,\n          needsFirstMeasurement: true // Assume all rows will need to be measured by default\n\n        };\n      }\n\n      const {\n        isResized,\n        needsFirstMeasurement,\n        sizes\n      } = rowsHeightLookup.current[row.id];\n      let baseRowHeight = rowHeightFromDensity;\n      const existingBaseRowHeight = sizes.base;\n\n      if (isResized) {\n        // Do not recalculate resized row height and use the value from the lookup\n        baseRowHeight = existingBaseRowHeight;\n      } else if (getRowHeightProp) {\n        const rowHeightFromUser = getRowHeightProp(_extends({}, row, {\n          densityFactor\n        }));\n\n        if (rowHeightFromUser === 'auto') {\n          if (needsFirstMeasurement) {\n            const estimatedRowHeight = getEstimatedRowHeight ? getEstimatedRowHeight(_extends({}, row, {\n              densityFactor\n            })) : rowHeightFromDensity; // If the row was not measured yet use the estimated row height\n\n            baseRowHeight = estimatedRowHeight != null ? estimatedRowHeight : rowHeightFromDensity;\n          } else {\n            baseRowHeight = existingBaseRowHeight;\n          }\n\n          hasRowWithAutoHeight.current = true;\n          rowsHeightLookup.current[row.id].autoHeight = true;\n        } else {\n          // Default back to base rowHeight if getRowHeight returns null or undefined.\n          baseRowHeight = rowHeightFromUser != null ? rowHeightFromUser : rowHeightFromDensity;\n          rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n          rowsHeightLookup.current[row.id].autoHeight = false;\n        }\n      } else {\n        rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n      } // We use an object to make simple to check if a height is already added or not\n\n\n      const initialHeights = {\n        base: baseRowHeight\n      };\n\n      if (getRowSpacing) {\n        var _spacing$top, _spacing$bottom;\n\n        const indexRelativeToCurrentPage = apiRef.current.getRowIndexRelativeToVisibleRows(row.id);\n        const spacing = getRowSpacing(_extends({}, row, {\n          isFirstVisible: indexRelativeToCurrentPage === 0,\n          isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n          indexRelativeToCurrentPage\n        }));\n        initialHeights.spacingTop = (_spacing$top = spacing.top) != null ? _spacing$top : 0;\n        initialHeights.spacingBottom = (_spacing$bottom = spacing.bottom) != null ? _spacing$bottom : 0;\n      }\n\n      const processedSizes = apiRef.current.unstable_applyPipeProcessors('rowHeight', initialHeights, row);\n      rowsHeightLookup.current[row.id].sizes = processedSizes;\n      const finalRowHeight = Object.values(processedSizes).reduce((acc2, value) => acc2 + value, 0);\n      return acc + finalRowHeight;\n    }, 0);\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowsMeta: {\n          currentPageTotalHeight,\n          positions\n        }\n      });\n    });\n\n    if (!hasRowWithAutoHeight.current) {\n      // No row has height=auto, so all rows are already measured\n      lastMeasuredRowIndex.current = Infinity;\n    }\n\n    apiRef.current.forceUpdate();\n  }, [apiRef, currentPage.rows, rowHeightFromDensity, getRowHeightProp, getRowSpacing, getEstimatedRowHeight]);\n  const getRowHeight = React.useCallback(rowId => {\n    const height = rowsHeightLookup.current[rowId];\n    return height ? height.sizes.base : rowHeightFromDensity;\n  }, [rowHeightFromDensity]);\n\n  const getRowInternalSizes = rowId => {\n    var _rowsHeightLookup$cur;\n\n    return (_rowsHeightLookup$cur = rowsHeightLookup.current[rowId]) == null ? void 0 : _rowsHeightLookup$cur.sizes;\n  };\n\n  const setRowHeight = React.useCallback((id, height) => {\n    rowsHeightLookup.current[id].sizes.base = height;\n    rowsHeightLookup.current[id].isResized = true;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n  const debouncedHydrateRowsMeta = React.useMemo(() => debounce(hydrateRowsMeta), [hydrateRowsMeta]);\n  const storeMeasuredRowHeight = React.useCallback((id, height) => {\n    if (!rowsHeightLookup.current[id] || !rowsHeightLookup.current[id].autoHeight) {\n      return;\n    } // Only trigger hydration if the value is different, otherwise we trigger a loop\n\n\n    const needsHydration = rowsHeightLookup.current[id].sizes.base !== height;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    rowsHeightLookup.current[id].sizes.base = height;\n\n    if (needsHydration) {\n      debouncedHydrateRowsMeta();\n    }\n  }, [debouncedHydrateRowsMeta]);\n  const rowHasAutoHeight = React.useCallback(id => {\n    var _rowsHeightLookup$cur2;\n\n    return ((_rowsHeightLookup$cur2 = rowsHeightLookup.current[id]) == null ? void 0 : _rowsHeightLookup$cur2.autoHeight) || false;\n  }, []);\n  const getLastMeasuredRowIndex = React.useCallback(() => {\n    return lastMeasuredRowIndex.current;\n  }, []);\n  const setLastMeasuredRowIndex = React.useCallback(index => {\n    if (hasRowWithAutoHeight.current && index > lastMeasuredRowIndex.current) {\n      lastMeasuredRowIndex.current = index;\n    }\n  }, []); // The effect is used to build the rows meta data - currentPageTotalHeight and positions.\n  // Because of variable row height this is needed for the virtualization\n\n  React.useEffect(() => {\n    hydrateRowsMeta();\n  }, [rowHeightFromDensity, filterState, paginationState, sortingState, hydrateRowsMeta]);\n  useGridRegisterPipeApplier(apiRef, 'rowHeight', hydrateRowsMeta);\n  const rowsMetaApi = {\n    unstable_getLastMeasuredRowIndex: getLastMeasuredRowIndex,\n    unstable_setLastMeasuredRowIndex: setLastMeasuredRowIndex,\n    unstable_rowHasAutoHeight: rowHasAutoHeight,\n    unstable_getRowHeight: getRowHeight,\n    unstable_getRowInternalSizes: getRowInternalSizes,\n    unstable_setRowHeight: setRowHeight,\n    unstable_storeRowHeightMeasurement: storeMeasuredRowHeight\n  };\n  useGridApiMethod(apiRef, rowsMetaApi, 'GridRowsMetaApi');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"align\", \"children\", \"colIndex\", \"colDef\", \"cellMode\", \"field\", \"formattedValue\", \"hasFocus\", \"height\", \"isEditable\", \"rowId\", \"tabIndex\", \"value\", \"width\", \"className\", \"showRightBorder\", \"extendRowFullWidth\", \"row\", \"colSpan\", \"disableDragEvents\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onKeyDown\", \"onDragEnter\", \"onDragOver\"];\n\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { ownerDocument, capitalize } from '@mui/material/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { GridCellModes } from '../../models';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridFocusCellSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Based on https://stackoverflow.com/a/59518678\nlet cachedSupportsPreventScroll;\n\nfunction doesSupportPreventScroll() {\n  if (cachedSupportsPreventScroll === undefined) {\n    document.createElement('div').focus({\n      get preventScroll() {\n        cachedSupportsPreventScroll = true;\n        return false;\n      }\n\n    });\n  }\n\n  return cachedSupportsPreventScroll;\n}\n\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showRightBorder,\n    isEditable,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isEditable && 'cell--editable', showRightBorder && 'withBorder'],\n    content: ['cellContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nlet warnedOnce = false;\n\nfunction GridCell(props) {\n  var _rootProps$experiment;\n\n  const {\n    align,\n    children,\n    colIndex,\n    cellMode,\n    field,\n    formattedValue,\n    hasFocus,\n    height,\n    isEditable,\n    rowId,\n    tabIndex,\n    value,\n    width,\n    className,\n    showRightBorder,\n    colSpan,\n    disableDragEvents,\n    onClick,\n    onDoubleClick,\n    onMouseDown,\n    onMouseUp,\n    onKeyDown,\n    onDragEnter,\n    onDragOver\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const valueToRender = formattedValue == null ? value : formattedValue;\n  const cellRef = React.useRef(null);\n  const focusElementRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    align,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    } // The row might have been deleted during the click\n\n\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const style = {\n    minWidth: width,\n    maxWidth: width,\n    minHeight: height,\n    maxHeight: height === 'auto' ? 'none' : height // max-height doesn't support \"auto\"\n\n  };\n  React.useLayoutEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  let handleFocus = other.onFocus;\n\n  if (process.env.NODE_ENV === 'test' && (_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n\n      if ((focusedCell == null ? void 0 : focusedCell.id) === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n\n        return;\n      }\n\n      if (!warnedOnce) {\n        console.warn([`MUI: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell == null ? void 0 : focusedCell.id}, field=${focusedCell == null ? void 0 : focusedCell.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n\n  const column = apiRef.current.getColumn(field);\n  const managesOwnFocus = column.type === 'actions';\n\n  const renderChildren = () => {\n    if (children == null) {\n      return /*#__PURE__*/_jsx(\"div\", {\n        className: classes.content,\n        children: valueToRender == null ? void 0 : valueToRender.toString()\n      });\n    }\n\n    if ( /*#__PURE__*/React.isValidElement(children) && managesOwnFocus) {\n      return /*#__PURE__*/React.cloneElement(children, {\n        focusElementRef\n      });\n    }\n\n    return children;\n  };\n\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: cellRef,\n    className: clsx(className, classes.root),\n    role: \"cell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    style: style,\n    tabIndex: (cellMode === 'view' || !isEditable) && !managesOwnFocus ? tabIndex : -1,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseDown: publish('cellMouseDown', onMouseDown),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    children: renderChildren()\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  cellMode: PropTypes.oneOf(['edit', 'view']),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  disableDragEvents: PropTypes.bool,\n  field: PropTypes.string.isRequired,\n  formattedValue: PropTypes.any,\n  hasFocus: PropTypes.bool,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  isEditable: PropTypes.bool,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  showRightBorder: PropTypes.bool,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  value: PropTypes.any,\n  width: PropTypes.number.isRequired\n} : void 0;\nexport { GridCell };","import { useGridInitialization } from '../hooks/core/useGridInitialization';\nimport { useGridInitializeState } from '../hooks/utils/useGridInitializeState';\nimport { useGridClipboard } from '../hooks/features/clipboard/useGridClipboard';\nimport { columnMenuStateInitializer, useGridColumnMenu } from '../hooks/features/columnMenu/useGridColumnMenu';\nimport { useGridColumns, columnsStateInitializer } from '../hooks/features/columns/useGridColumns';\nimport { densityStateInitializer, useGridDensity } from '../hooks/features/density/useGridDensity';\nimport { useGridCsvExport } from '../hooks/features/export/useGridCsvExport';\nimport { useGridPrintExport } from '../hooks/features/export/useGridPrintExport';\nimport { useGridFilter, filterStateInitializer } from '../hooks/features/filter/useGridFilter';\nimport { focusStateInitializer, useGridFocus } from '../hooks/features/focus/useGridFocus';\nimport { useGridKeyboardNavigation } from '../hooks/features/keyboardNavigation/useGridKeyboardNavigation';\nimport { useGridPagination, paginationStateInitializer } from '../hooks/features/pagination/useGridPagination';\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from '../hooks/features/preferencesPanel/useGridPreferencesPanel';\nimport { useGridEditing as useGridEditing_old, editingStateInitializer as editingStateInitializer_old } from '../hooks/features/editRows/useGridEditing.old';\nimport { useGridEditing as useGridEditing_new, editingStateInitializer as editingStateInitializer_new } from '../hooks/features/editRows/useGridEditing.new';\nimport { useGridRows, rowsStateInitializer } from '../hooks/features/rows/useGridRows';\nimport { useGridRowsPreProcessors } from '../hooks/features/rows/useGridRowsPreProcessors';\nimport { useGridParamsApi } from '../hooks/features/rows/useGridParamsApi';\nimport { selectionStateInitializer, useGridSelection } from '../hooks/features/selection/useGridSelection';\nimport { useGridSelectionPreProcessors } from '../hooks/features/selection/useGridSelectionPreProcessors';\nimport { useGridSorting, sortingStateInitializer } from '../hooks/features/sorting/useGridSorting';\nimport { useGridScroll } from '../hooks/features/scroll/useGridScroll';\nimport { useGridEvents } from '../hooks/features/events/useGridEvents';\nimport { useGridDimensions } from '../hooks/features/dimensions/useGridDimensions';\nimport { rowsMetaStateInitializer, useGridRowsMeta } from '../hooks/features/rows/useGridRowsMeta';\nimport { useGridStatePersistence } from '../hooks/features/statePersistence/useGridStatePersistence';\nimport { useGridColumnSpanning } from '../hooks/features/columns/useGridColumnSpanning';\nexport const useDataGridComponent = props => {\n  var _props$experimentalFe, _props$experimentalFe2;\n\n  const apiRef = useGridInitialization(undefined, props);\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n\n  useGridSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n  /**\n   * Register all state initializers here.\n   */\n\n  useGridInitializeState(selectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.newEditingApi ? editingStateInitializer_new : editingStateInitializer_old, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridParamsApi(apiRef);\n  useGridColumnSpanning(apiRef);\n  const useGridEditing = (_props$experimentalFe2 = props.experimentalFeatures) != null && _props$experimentalFe2.newEditingApi ? useGridEditing_new : useGridEditing_old;\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  return apiRef;\n};","import * as React from 'react';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { gridVisibleSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../colDef/gridCheckboxSelectionColDef';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\n/**\n * @requires useGridSorting (method) - can be after\n * @requires useGridFilter (state) - can be after\n * @requires useGridColumns (state, method) - can be after\n * @requires useGridDimensions (method) - can be after\n * @requires useGridFocus (method) - can be after\n * @requires useGridScroll (method) - can be after\n * @requires useGridColumnSpanning (method) - can be after\n */\n\nexport const useGridKeyboardNavigation = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridKeyboardNavigation');\n  const currentPage = useGridVisibleRows(apiRef, props);\n  /**\n   * @param {number} colIndex Index of the column to focus\n   * @param {number} rowIndex index of the row to focus\n   * @param {string} closestColumnToUse Which closest column cell to use when the cell is spanned by `colSpan`.\n   */\n\n  const goToCell = React.useCallback((colIndex, rowIndex, closestColumnToUse = 'left') => {\n    var _visibleSortedRows$ro;\n\n    const visibleSortedRows = gridVisibleSortedRowEntriesSelector(apiRef);\n    const rowId = (_visibleSortedRows$ro = visibleSortedRows[rowIndex]) == null ? void 0 : _visibleSortedRows$ro.id;\n    const nextCellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, colIndex);\n\n    if (nextCellColSpanInfo && nextCellColSpanInfo.spannedByColSpan) {\n      if (closestColumnToUse === 'left') {\n        colIndex = nextCellColSpanInfo.leftVisibleCellIndex;\n      } else if (closestColumnToUse === 'right') {\n        colIndex = nextCellColSpanInfo.rightVisibleCellIndex;\n      }\n    }\n\n    logger.debug(`Navigating to cell row ${rowIndex}, col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex,\n      rowIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setCellFocus(rowId, field);\n  }, [apiRef, logger]);\n  const goToHeader = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef, logger]);\n  const handleCellNavigationKeyDown = React.useCallback((params, event) => {\n    const dimensions = apiRef.current.getRootDimensions();\n\n    if (!currentPage.range || !dimensions) {\n      return;\n    }\n\n    const viewportPageSize = apiRef.current.unstable_getViewportPageSize();\n    const visibleSortedRows = gridVisibleSortedRowEntriesSelector(apiRef);\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const rowIndexBefore = visibleSortedRows.findIndex(row => row.id === params.id);\n    const firstRowIndexInPage = currentPage.range.firstRowIndex;\n    const lastRowIndexInPage = currentPage.range.lastRowIndex;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n\n    switch (event.key) {\n      case 'ArrowDown':\n      case 'Enter':\n        {\n          // \"Enter\" is only triggered by the row / cell editing feature\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, rowIndexBefore + 1);\n          }\n\n          break;\n        }\n\n      case 'ArrowUp':\n        {\n          if (rowIndexBefore > firstRowIndexInPage) {\n            goToCell(colIndexBefore, rowIndexBefore - 1);\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n\n          break;\n        }\n\n      case 'ArrowRight':\n        {\n          if (colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, rowIndexBefore, 'right');\n          }\n\n          break;\n        }\n\n      case 'ArrowLeft':\n        {\n          if (colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, rowIndexBefore);\n          }\n\n          break;\n        }\n\n      case 'Tab':\n        {\n          // \"Tab\" is only triggered by the row / cell editing feature\n          if (event.shiftKey && colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, rowIndexBefore, 'left');\n          } else if (!event.shiftKey && colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, rowIndexBefore, 'right');\n          }\n\n          break;\n        }\n\n      case ' ':\n        {\n          const field = params.field;\n\n          if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n            break;\n          }\n\n          const colDef = params.colDef;\n\n          if (colDef && colDef.type === 'treeDataGroup') {\n            break;\n          }\n\n          if (!event.shiftKey && rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage));\n          }\n\n          break;\n        }\n\n      case 'PageDown':\n        {\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage));\n          }\n\n          break;\n        }\n\n      case 'PageUp':\n        {\n          // Go to the first row before going to header\n          const nextRowIndex = Math.max(rowIndexBefore - viewportPageSize, firstRowIndexInPage);\n\n          if (nextRowIndex !== rowIndexBefore && nextRowIndex >= firstRowIndexInPage) {\n            goToCell(colIndexBefore, nextRowIndex);\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n\n          break;\n        }\n\n      case 'Home':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(firstColIndex, firstRowIndexInPage);\n          } else {\n            goToCell(firstColIndex, rowIndexBefore);\n          }\n\n          break;\n        }\n\n      case 'End':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(lastColIndex, lastRowIndexInPage);\n          } else {\n            goToCell(lastColIndex, rowIndexBefore);\n          }\n\n          break;\n        }\n\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPage, goToCell, goToHeader]);\n  const handleColumnHeaderKeyDown = React.useCallback((params, event) => {\n    var _currentPage$range$fi, _currentPage$range, _currentPage$range$la, _currentPage$range2;\n\n    const headerTitleNode = event.currentTarget.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n    const isFromInsideContent = !!headerTitleNode && headerTitleNode.contains(event.target);\n\n    if (isFromInsideContent && params.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // When focus is on a nested input, keyboard events have no effect to avoid conflicts with native events.\n      // There is one exception for the checkBoxHeader\n      return;\n    }\n\n    const dimensions = apiRef.current.getRootDimensions();\n\n    if (!dimensions) {\n      return;\n    }\n\n    const viewportPageSize = apiRef.current.unstable_getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = (_currentPage$range$fi = (_currentPage$range = currentPage.range) == null ? void 0 : _currentPage$range.firstRowIndex) != null ? _currentPage$range$fi : null;\n    const lastRowIndexInPage = (_currentPage$range$la = (_currentPage$range2 = currentPage.range) == null ? void 0 : _currentPage$range2.lastRowIndex) != null ? _currentPage$range$la : null;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (firstRowIndexInPage !== null) {\n            goToCell(colIndexBefore, firstRowIndexInPage);\n          }\n\n          break;\n        }\n\n      case 'ArrowRight':\n        {\n          if (colIndexBefore < lastColIndex) {\n            goToHeader(colIndexBefore + 1, event);\n          }\n\n          break;\n        }\n\n      case 'ArrowLeft':\n        {\n          if (colIndexBefore > firstColIndex) {\n            goToHeader(colIndexBefore - 1, event);\n          }\n\n          break;\n        }\n\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage));\n          }\n\n          break;\n        }\n\n      case 'Home':\n        {\n          goToHeader(firstColIndex, event);\n          break;\n        }\n\n      case 'End':\n        {\n          goToHeader(lastColIndex, event);\n          break;\n        }\n\n      case 'Enter':\n        {\n          if (event.ctrlKey || event.metaKey) {\n            apiRef.current.toggleColumnMenu(params.field);\n          }\n\n          break;\n        }\n\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPage, goToCell, goToHeader]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Ignore portal\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    } // Get the most recent params because the cell mode may have changed by another listener\n\n\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n\n    if (cellParams.cellMode !== GridCellModes.Edit && isNavigationKey(event.key)) {\n      apiRef.current.publishEvent('cellNavigationKeyDown', cellParams, event);\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellNavigationKeyDown', handleCellNavigationKeyDown);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnSpanning = apiRef => {\n  const lookup = React.useRef({});\n  const setCellColSpanInfo = React.useCallback((rowId, columnIndex, cellColSpanInfo) => {\n    const sizes = lookup.current;\n\n    if (!sizes[rowId]) {\n      sizes[rowId] = {};\n    }\n\n    sizes[rowId][columnIndex] = cellColSpanInfo;\n  }, []);\n  const getCellColSpanInfo = React.useCallback((rowId, columnIndex) => {\n    var _lookup$current$rowId;\n\n    return (_lookup$current$rowId = lookup.current[rowId]) == null ? void 0 : _lookup$current$rowId[columnIndex];\n  }, []); // Calculate `colSpan` for the cell.\n\n  const calculateCellColSpan = React.useCallback(params => {\n    const {\n      columnIndex,\n      rowId,\n      minFirstColumnIndex,\n      maxLastColumnIndex\n    } = params;\n    const visibleColumns = apiRef.current.getVisibleColumns();\n    const columnsLength = visibleColumns.length;\n    const column = visibleColumns[columnIndex];\n    const colSpan = typeof column.colSpan === 'function' ? column.colSpan(apiRef.current.getCellParams(rowId, column.field)) : column.colSpan;\n\n    if (!colSpan || colSpan === 1) {\n      setCellColSpanInfo(rowId, columnIndex, {\n        spannedByColSpan: false,\n        cellProps: {\n          colSpan: 1,\n          width: column.computedWidth\n        }\n      });\n      return {\n        colSpan: 1\n      };\n    }\n\n    let width = column.computedWidth;\n\n    for (let j = 1; j < colSpan; j += 1) {\n      const nextColumnIndex = columnIndex + j; // Cells should be spanned only within their column section (left-pinned, right-pinned and unpinned).\n\n      if (nextColumnIndex >= minFirstColumnIndex && nextColumnIndex < maxLastColumnIndex) {\n        const nextColumn = visibleColumns[nextColumnIndex];\n        width += nextColumn.computedWidth;\n        setCellColSpanInfo(rowId, columnIndex + j, {\n          spannedByColSpan: true,\n          rightVisibleCellIndex: Math.min(columnIndex + colSpan, columnsLength - 1),\n          leftVisibleCellIndex: columnIndex\n        });\n      }\n\n      setCellColSpanInfo(rowId, columnIndex, {\n        spannedByColSpan: false,\n        cellProps: {\n          colSpan,\n          width\n        }\n      });\n    }\n\n    return {\n      colSpan\n    };\n  }, [apiRef, setCellColSpanInfo]); // Calculate `colSpan` for each cell in the row\n\n  const calculateColSpan = React.useCallback(({\n    rowId,\n    minFirstColumn,\n    maxLastColumn\n  }) => {\n    for (let i = minFirstColumn; i < maxLastColumn; i += 1) {\n      const cellProps = calculateCellColSpan({\n        columnIndex: i,\n        rowId,\n        minFirstColumnIndex: minFirstColumn,\n        maxLastColumnIndex: maxLastColumn\n      });\n\n      if (cellProps.colSpan > 1) {\n        i += cellProps.colSpan - 1;\n      }\n    }\n  }, [calculateCellColSpan]);\n  const columnSpanningApi = {\n    unstable_getCellColSpanInfo: getCellColSpanInfo,\n    unstable_calculateColSpan: calculateColSpan\n  };\n  useGridApiMethod(apiRef, columnSpanningApi, 'GridColumnSpanningAPI');\n  const handleColumnReorderChange = React.useCallback(() => {\n    // `colSpan` needs to be recalculated after column reordering\n    lookup.current = {};\n  }, []);\n  useGridApiEventHandler(apiRef, 'columnOrderChange', handleColumnReorderChange);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { ownerDocument } from '@mui/material/utils';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridVisibleRowCountSelector } from '../filter/gridFilterSelector';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../columns/gridColumnsSelector';\nimport { gridDensityHeaderHeightSelector } from '../density/densitySelector';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getColumnsToExport } from './utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridPrintExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef]); // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns) => new Promise(resolve => {\n    if (!fields && !allColumns) {\n      resolve();\n      return;\n    }\n\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]);\n  const buildPrintWindow = React.useCallback(title => {\n    const iframeEl = document.createElement('iframe');\n    iframeEl.id = 'grid-print-window'; // Without this 'onload' event won't fire in some browsers\n\n    iframeEl.src = window.location.href;\n    iframeEl.style.position = 'absolute';\n    iframeEl.style.width = '0px';\n    iframeEl.style.height = '0px';\n    iframeEl.title = title || document.title;\n    return iframeEl;\n  }, []);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    var _printWindow$contentW, _querySelector, _querySelector2;\n\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false\n    }, options); // Some agents, such as IE11 and Enzyme (as of 2 Jun 2020) continuously call the\n    // `onload` callback. This ensures that it is only called once.\n\n\n    printWindow.onload = null;\n    const printDoc = printWindow.contentDocument || ((_printWindow$contentW = printWindow.contentWindow) == null ? void 0 : _printWindow$contentW.document);\n\n    if (!printDoc) {\n      return;\n    }\n\n    const headerHeight = gridDensityHeaderHeightSelector(apiRef);\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n    const gridCloneViewport = gridClone.querySelector(`.${gridClasses.virtualScroller}`); // Expand the viewport window to prevent clipping\n\n    gridCloneViewport.style.height = 'auto';\n    gridCloneViewport.style.width = 'auto';\n    gridCloneViewport.parentElement.style.width = 'auto';\n    gridCloneViewport.parentElement.style.height = 'auto'; // Allow to overflow to not hide the border of the last row\n\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n    const columnHeaders = gridClone.querySelector(`.${gridClasses.columnHeaders}`);\n    const columnHeadersInner = columnHeaders.querySelector(`.${gridClasses.columnHeadersInner}`);\n    columnHeadersInner.style.width = '100%';\n    let gridToolbarElementHeight = ((_querySelector = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)) == null ? void 0 : _querySelector.clientHeight) || 0;\n    let gridFooterElementHeight = ((_querySelector2 = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)) == null ? void 0 : _querySelector2.clientHeight) || 0;\n\n    if (normalizeOptions.hideToolbar) {\n      var _gridClone$querySelec;\n\n      (_gridClone$querySelec = gridClone.querySelector(`.${gridClasses.toolbarContainer}`)) == null ? void 0 : _gridClone$querySelec.remove();\n      gridToolbarElementHeight = 0;\n    }\n\n    if (normalizeOptions.hideFooter) {\n      var _gridClone$querySelec2;\n\n      (_gridClone$querySelec2 = gridClone.querySelector(`.${gridClasses.footerContainer}`)) == null ? void 0 : _gridClone$querySelec2.remove();\n      gridFooterElementHeight = 0;\n    } // Expand container height to accommodate all rows\n\n\n    gridClone.style.height = `${rowsMeta.currentPageTotalHeight + headerHeight + gridToolbarElementHeight + gridFooterElementHeight}px`; // Remove all loaded elements from the current host\n\n    printDoc.body.innerHTML = '';\n    printDoc.body.appendChild(gridClone);\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n\n    if (normalizeOptions.copyStyles) {\n      const headStyleElements = doc.current.querySelectorAll(\"style, link[rel='stylesheet']\");\n\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n\n          if (sheet) {\n            let styleCSS = ''; // NOTE: for-of is not supported by IE\n\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    } // Trigger print\n\n\n    if (process.env.NODE_ENV !== 'test') {\n      printWindow.contentWindow.print();\n    }\n  }, [apiRef, doc]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    var _previousGridState$cu, _previousGridState$cu2;\n\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow); // Revert grid to previous state\n\n    apiRef.current.restoreState(previousGridState.current || {});\n\n    if (!((_previousGridState$cu = previousGridState.current) != null && (_previousGridState$cu2 = _previousGridState$cu.columns) != null && _previousGridState$cu2.columnVisibilityModel)) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n\n    apiRef.current.unstable_enableVirtualization(); // Clear local state\n\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI: No grid root element available.');\n    }\n\n    previousGridState.current = apiRef.current.exportState(); // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n\n    if (props.pagination) {\n      const visibleRowCount = gridVisibleRowCountSelector(apiRef);\n      apiRef.current.setPageSize(visibleRowCount);\n    }\n\n    await updateGridColumnsForPrint(options == null ? void 0 : options.fields, options == null ? void 0 : options.allColumns);\n    apiRef.current.unstable_disableVirtualization();\n    const printWindow = buildPrintWindow(options == null ? void 0 : options.fileName);\n    doc.current.body.appendChild(printWindow);\n\n    if (process.env.NODE_ENV === 'test') {\n      // In test env, run the all pipeline without waiting for loading\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => handlePrintWindowLoad(printWindow, options);\n\n      printWindow.contentWindow.onafterprint = () => handlePrintWindowAfterPrint(printWindow);\n    }\n  }, [props, logger, apiRef, buildPrintWindow, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'GridPrintExportApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    var _options$printOptions;\n\n    if ((_options$printOptions = options.printOptions) != null && _options$printOptions.disableToolbarButton) {\n      return initialValue;\n    }\n\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","import * as React from 'react';\nimport { debounce, ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnsTotalWidthSelector } from '../columns';\nimport { gridDensityHeaderHeightSelector, gridDensityRowHeightSelector } from '../density';\nimport { useGridSelector } from '../../utils';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nconst isTestEnvironment = process.env.NODE_ENV === 'test';\n\nconst hasScroll = ({\n  content,\n  container,\n  scrollBarSize\n}) => {\n  const hasScrollXIfNoYScrollBar = content.width > container.width;\n  const hasScrollYIfNoXScrollBar = content.height > container.height;\n  let hasScrollX = false;\n  let hasScrollY = false;\n\n  if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n    hasScrollX = hasScrollXIfNoYScrollBar;\n    hasScrollY = content.height + (hasScrollX ? scrollBarSize : 0) > container.height; // We recalculate the scroll x to consider the size of the y scrollbar.\n\n    if (hasScrollY) {\n      hasScrollX = content.width + scrollBarSize > container.width;\n    }\n  }\n\n  return {\n    hasScrollX,\n    hasScrollY\n  };\n};\n\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(null);\n  const fullDimensionsRef = React.useRef(null);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const headerHeight = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n  const updateGridDimensionsRef = React.useCallback(() => {\n    var _apiRef$current$rootE;\n\n    const rootElement = (_apiRef$current$rootE = apiRef.current.rootElementRef) == null ? void 0 : _apiRef$current$rootE.current;\n    const columnsTotalWidth = gridColumnsTotalWidthSelector(apiRef);\n\n    if (!rootDimensionsRef.current) {\n      return;\n    }\n\n    let scrollBarSize;\n\n    if (props.scrollbarSize != null) {\n      scrollBarSize = props.scrollbarSize;\n    } else if (!columnsTotalWidth || !rootElement) {\n      scrollBarSize = 0;\n    } else {\n      const doc = ownerDocument(rootElement);\n      const scrollDiv = doc.createElement('div');\n      scrollDiv.style.width = '99px';\n      scrollDiv.style.height = '99px';\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.overflow = 'scroll';\n      scrollDiv.className = 'scrollDiv';\n      rootElement.appendChild(scrollDiv);\n      scrollBarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      rootElement.removeChild(scrollDiv);\n    }\n\n    let viewportOuterSize;\n    let hasScrollX;\n    let hasScrollY;\n\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > rootDimensionsRef.current.width;\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rowsMeta.currentPageTotalHeight + (hasScrollX ? scrollBarSize : 0)\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rootDimensionsRef.current.height - headerHeight\n      };\n      const scrollInformation = hasScroll({\n        content: {\n          width: Math.round(columnsTotalWidth),\n          height: rowsMeta.currentPageTotalHeight\n        },\n        container: viewportOuterSize,\n        scrollBarSize\n      });\n      hasScrollY = scrollInformation.hasScrollY;\n      hasScrollX = scrollInformation.hasScrollX;\n    }\n\n    const viewportInnerSize = {\n      width: viewportOuterSize.width - (hasScrollY ? scrollBarSize : 0),\n      height: viewportOuterSize.height - (hasScrollX ? scrollBarSize : 0)\n    };\n    const newFullDimensions = {\n      viewportOuterSize,\n      viewportInnerSize,\n      hasScrollX,\n      hasScrollY,\n      scrollBarSize\n    };\n    const prevDimensions = fullDimensionsRef.current;\n    fullDimensionsRef.current = newFullDimensions;\n\n    if (newFullDimensions.viewportInnerSize.width !== (prevDimensions == null ? void 0 : prevDimensions.viewportInnerSize.width) || newFullDimensions.viewportInnerSize.height !== (prevDimensions == null ? void 0 : prevDimensions.viewportInnerSize.height)) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newFullDimensions.viewportInnerSize);\n    }\n  }, [apiRef, props.scrollbarSize, props.autoHeight, headerHeight, rowsMeta.currentPageTotalHeight]);\n  const resize = React.useCallback(() => {\n    updateGridDimensionsRef();\n    apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n  }, [apiRef, updateGridDimensionsRef]);\n  const getRootDimensions = React.useCallback(() => fullDimensionsRef.current, []);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = apiRef.current.getRootDimensions();\n\n    if (!dimensions) {\n      return 0;\n    }\n\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    }); // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n\n    if (props.getRowHeight) {\n      const renderContext = apiRef.current.unstable_getRenderContext();\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / gridDensityRowHeightSelector(apiRef));\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.pagination, props.paginationMode, props.getRowHeight]);\n  const dimensionsApi = {\n    resize,\n    getRootDimensions,\n    unstable_getViewportPageSize: getViewportPageSize,\n    unstable_updateGridDimensionsRef: updateGridDimensionsRef\n  };\n  useGridApiMethod(apiRef, dimensionsApi, 'GridDimensionsApi');\n  const debounceResize = React.useMemo(() => debounce(resize, 60), [resize]);\n  const isFirstSizing = React.useRef(true);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size; // jsdom has no layout capabilities\n\n    const isJSDOM = /jsdom/.test(window.navigator.userAgent);\n\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n\n    if (size.width === 0 && !errorShown.current && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n\n    if (isTestEnvironment) {\n      // We don't need to debounce the resize for tests.\n      resize();\n      isFirstSizing.current = false;\n      return;\n    }\n\n    if (isFirstSizing.current) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      resize();\n      isFirstSizing.current = false;\n      return;\n    }\n\n    debounceResize();\n  }, [props.autoHeight, debounceResize, logger, resize]);\n  useEnhancedEffect(() => updateGridDimensionsRef(), [updateGridDimensionsRef]);\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', updateGridDimensionsRef);\n  useGridApiOptionHandler(apiRef, 'pageChange', updateGridDimensionsRef);\n  useGridApiOptionHandler(apiRef, 'pageSizeChange', updateGridDimensionsRef);\n  useGridApiOptionHandler(apiRef, 'columnsChange', updateGridDimensionsRef);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}","import { useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\n\n/**\n * @requires useGridFocus (event) - can be after, async only\n * @requires useGridColumns (event) - can be after, async only\n */\nexport function useGridEvents(apiRef, props) {\n  useGridApiOptionHandler(apiRef, 'columnHeaderClick', props.onColumnHeaderClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderDoubleClick', props.onColumnHeaderDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOver', props.onColumnHeaderOver);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOut', props.onColumnHeaderOut);\n  useGridApiOptionHandler(apiRef, 'columnHeaderEnter', props.onColumnHeaderEnter);\n  useGridApiOptionHandler(apiRef, 'columnHeaderLeave', props.onColumnHeaderLeave);\n  useGridApiOptionHandler(apiRef, 'columnOrderChange', props.onColumnOrderChange);\n  useGridApiOptionHandler(apiRef, 'cellClick', props.onCellClick);\n  useGridApiOptionHandler(apiRef, 'cellDoubleClick', props.onCellDoubleClick);\n  useGridApiOptionHandler(apiRef, 'cellKeyDown', props.onCellKeyDown);\n  useGridApiOptionHandler(apiRef, 'cellFocusOut', props.onCellFocusOut);\n  useGridApiOptionHandler(apiRef, 'preferencePanelClose', props.onPreferencePanelClose);\n  useGridApiOptionHandler(apiRef, 'preferencePanelOpen', props.onPreferencePanelOpen);\n  useGridApiOptionHandler(apiRef, 'menuOpen', props.onMenuOpen);\n  useGridApiOptionHandler(apiRef, 'menuClose', props.onMenuClose);\n  useGridApiOptionHandler(apiRef, 'rowDoubleClick', props.onRowDoubleClick);\n  useGridApiOptionHandler(apiRef, 'rowClick', props.onRowClick);\n  useGridApiOptionHandler(apiRef, 'componentError', props.onError);\n  useGridApiOptionHandler(apiRef, 'stateChange', props.onStateChange);\n}","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils';\nexport const useGridStatePersistence = apiRef => {\n  const exportState = React.useCallback(() => {\n    const stateToExport = apiRef.current.unstable_applyPipeProcessors('exportState', {});\n    return stateToExport;\n  }, [apiRef]);\n  const restoreState = React.useCallback(stateToRestore => {\n    const response = apiRef.current.unstable_applyPipeProcessors('restoreState', {\n      callbacks: []\n    }, {\n      stateToRestore\n    });\n    response.callbacks.forEach(callback => {\n      callback();\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const statePersistenceApi = {\n    exportState,\n    restoreState\n  };\n  useGridApiMethod(apiRef, statePersistenceApi, 'GridStatePersistenceApi');\n};","export const GRID_DEFAULT_LOCALE_TEXT = {\n  // Root\n  noRowsLabel: 'No rows',\n  noResultsOverlayLabel: 'No results found.',\n  errorOverlayDefaultLabel: 'An error occurred.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Density',\n  toolbarDensityLabel: 'Density',\n  toolbarDensityCompact: 'Compact',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Comfortable',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Columns',\n  toolbarColumnsLabel: 'Select columns',\n  // Filters toolbar button text\n  toolbarFilters: 'Filters',\n  toolbarFiltersLabel: 'Show filters',\n  toolbarFiltersTooltipHide: 'Hide filters',\n  toolbarFiltersTooltipShow: 'Show filters',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Search...',\n  toolbarQuickFilterLabel: 'Search',\n  toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Export',\n  toolbarExportLabel: 'Export',\n  toolbarExportCSV: 'Download as CSV',\n  toolbarExportPrint: 'Print',\n  toolbarExportExcel: 'Download as Excel',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Find column',\n  columnsPanelTextFieldPlaceholder: 'Column title',\n  columnsPanelDragIconLabel: 'Reorder column',\n  columnsPanelShowAllButton: 'Show all',\n  columnsPanelHideAllButton: 'Hide all',\n  // Filter panel text\n  filterPanelAddFilter: 'Add filter',\n  filterPanelDeleteIconLabel: 'Delete',\n  filterPanelLinkOperator: 'Logic operator',\n  filterPanelOperators: 'Operator',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'And',\n  filterPanelOperatorOr: 'Or',\n  filterPanelColumns: 'Columns',\n  filterPanelInputLabel: 'Value',\n  filterPanelInputPlaceholder: 'Filter value',\n  // Filter operators text\n  filterOperatorContains: 'contains',\n  filterOperatorEquals: 'equals',\n  filterOperatorStartsWith: 'starts with',\n  filterOperatorEndsWith: 'ends with',\n  filterOperatorIs: 'is',\n  filterOperatorNot: 'is not',\n  filterOperatorAfter: 'is after',\n  filterOperatorOnOrAfter: 'is on or after',\n  filterOperatorBefore: 'is before',\n  filterOperatorOnOrBefore: 'is on or before',\n  filterOperatorIsEmpty: 'is empty',\n  filterOperatorIsNotEmpty: 'is not empty',\n  filterOperatorIsAnyOf: 'is any of',\n  // Filter values text\n  filterValueAny: 'any',\n  filterValueTrue: 'true',\n  filterValueFalse: 'false',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Show columns',\n  columnMenuFilter: 'Filter',\n  columnMenuHideColumn: 'Hide',\n  columnMenuUnsort: 'Unsort',\n  columnMenuSortAsc: 'Sort by ASC',\n  columnMenuSortDesc: 'Sort by DESC',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  columnHeaderFiltersLabel: 'Show filters',\n  columnHeaderSortIconLabel: 'Sort',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rows selected` : `${count.toLocaleString()} row selected`,\n  // Total row amount footer text\n  footerTotalRows: 'Total Rows:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} of ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Checkbox selection',\n  checkboxSelectionSelectAllRows: 'Select all rows',\n  checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  checkboxSelectionSelectRow: 'Select row',\n  checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'yes',\n  booleanCellFalseLabel: 'no',\n  // Actions cell more text\n  actionsCellMore: 'more',\n  // Column pinning text\n  pinToLeft: 'Pin to left',\n  pinToRight: 'Pin to right',\n  unpin: 'Unpin',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Group',\n  treeDataExpand: 'see children',\n  treeDataCollapse: 'hide children',\n  // Grouping columns\n  groupingColumnHeaderName: 'Group',\n  groupColumn: name => `Group by ${name}`,\n  unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Expand',\n  collapseDetailPanel: 'Collapse',\n  // Used core components translation keys\n  MuiTablePagination: {},\n  // Row reordering text\n  rowReorderingHeaderName: 'Row reordering'\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['iconButtonContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridIconButtonContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'IconButtonContainer',\n  overridesResolver: (props, styles) => styles.iconButtonContainer\n})(() => ({\n  display: 'flex',\n  visibility: 'hidden',\n  width: 0\n}));\nexport const GridIconButtonContainer = /*#__PURE__*/React.forwardRef(function GridIconButtonContainer(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridIconButtonContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"currentColumn\", \"open\", \"id\", \"labelledby\", \"className\", \"children\"];\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport MenuList from '@mui/material/MenuList';\nimport { isHideMenuKey, isTabKey } from '../../../utils/keyboardUtils';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridColumnMenuContainer = /*#__PURE__*/React.forwardRef(function GridColumnMenuContainer(props, ref) {\n  const {\n    hideMenu,\n    open,\n    id,\n    labelledby,\n    className,\n    children\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const handleListKeyDown = React.useCallback(event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n\n    if (isHideMenuKey(event.key)) {\n      hideMenu(event);\n    }\n  }, [hideMenu]);\n  return /*#__PURE__*/_jsx(MenuList, _extends({\n    id: id,\n    ref: ref,\n    className: clsx(gridClasses.menuList, className),\n    \"aria-labelledby\": labelledby,\n    onKeyDown: handleListKeyDown,\n    autoFocus: open\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  currentColumn: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenuContainer };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { GridPreferencePanelsValue } from '../../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst GridColumnsMenuItem = props => {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: showColumns,\n    children: apiRef.current.getLocaleText('columnMenuShowColumns')\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnsMenuItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst GridFilterMenuItem = props => {\n  const {\n    column,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showFilter = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showFilterPanel(column == null ? void 0 : column.field);\n  }, [apiRef, column == null ? void 0 : column.field, onClick]);\n\n  if (rootProps.disableColumnFilter || !(column != null && column.filterable)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: showFilter,\n    children: apiRef.current.getLocaleText('columnMenuFilter')\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridFilterMenuItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { gridVisibleColumnDefinitionsSelector } from '../../../hooks/features/columns';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst HideGridColMenuItem = props => {\n  const {\n    column,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const timeoutRef = React.useRef();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true); // do not allow to hide the last column with menu\n\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n\n    onClick(event); // time for the transition\n\n    timeoutRef.current = setTimeout(() => {\n      apiRef.current.setColumnVisibility(column == null ? void 0 : column.field, false);\n    }, 100);\n  }, [apiRef, column == null ? void 0 : column.field, onClick, disabled]);\n  React.useEffect(() => {\n    return () => clearTimeout(timeoutRef.current);\n  }, []);\n\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n\n  if (column.hideable === false) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: apiRef.current.getLocaleText('columnMenuHideColumn')\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? HideGridColMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { HideGridColMenuItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { gridSortModelSelector } from '../../../hooks/features/sorting/gridSortingSelector';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst SortGridMenuItems = props => {\n  const {\n    column,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const sortDirection = React.useMemo(() => {\n    if (!column) {\n      return null;\n    }\n\n    const sortItem = sortModel.find(item => item.field === column.field);\n    return sortItem == null ? void 0 : sortItem.sort;\n  }, [column, sortModel]);\n  const onSortMenuItemClick = React.useCallback(event => {\n    onClick(event);\n    const direction = event.currentTarget.getAttribute('data-value') || null;\n    apiRef.current.sortColumn(column, direction);\n  }, [apiRef, column, onClick]);\n\n  if (!column || !column.sortable) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(MenuItem, {\n      onClick: onSortMenuItemClick,\n      disabled: sortDirection == null,\n      children: apiRef.current.getLocaleText('columnMenuUnsort')\n    }), /*#__PURE__*/_jsx(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"asc\",\n      disabled: sortDirection === 'asc',\n      children: apiRef.current.getLocaleText('columnMenuSortAsc')\n    }), /*#__PURE__*/_jsx(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"desc\",\n      disabled: sortDirection === 'desc',\n      children: apiRef.current.getLocaleText('columnMenuSortDesc')\n    })]\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? SortGridMenuItems.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { SortGridMenuItems };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridColumnMenuContainer } from './GridColumnMenuContainer';\nimport { GridColumnsMenuItem } from './GridColumnsMenuItem';\nimport { GridFilterMenuItem } from './GridFilterMenuItem';\nimport { HideGridColMenuItem } from './HideGridColMenuItem';\nimport { SortGridMenuItems } from './SortGridMenuItems';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridColumnMenu = /*#__PURE__*/React.forwardRef(function GridColumnMenu(props, ref) {\n  const {\n    hideMenu,\n    currentColumn\n  } = props;\n  const apiRef = useGridApiContext();\n  const defaultButtons = [/*#__PURE__*/_jsx(SortGridMenuItems, {\n    onClick: hideMenu,\n    column: currentColumn\n  }),\n  /*#__PURE__*/\n  // TODO update types to allow `onClick` and `column` to be optional\n  _jsx(GridFilterMenuItem, {\n    onClick: hideMenu,\n    column: currentColumn\n  }), /*#__PURE__*/_jsx(HideGridColMenuItem, {\n    onClick: hideMenu,\n    column: currentColumn\n  }), /*#__PURE__*/_jsx(GridColumnsMenuItem, {\n    onClick: hideMenu,\n    column: currentColumn\n  })];\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('columnMenu', defaultButtons, currentColumn);\n  return /*#__PURE__*/_jsx(GridColumnMenuContainer, _extends({\n    ref: ref\n  }, props, {\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      onClick: hideMenu,\n      column: currentColumn\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  currentColumn: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"rowCount\", \"visibleRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'RowCount',\n  overridesResolver: (props, styles) => styles.rowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2)\n}));\nconst GridRowCount = /*#__PURE__*/React.forwardRef(function GridRowCount(props, ref) {\n  const {\n    className,\n    rowCount,\n    visibleRowCount\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  if (rowCount === 0) {\n    return null;\n  }\n\n  const text = visibleRowCount < rowCount ? apiRef.current.getLocaleText('footerTotalVisibleRows')(visibleRowCount, rowCount) : rowCount.toLocaleString();\n  return /*#__PURE__*/_jsxs(GridRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: [apiRef.current.getLocaleText('footerTotalRows'), \" \", text]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  rowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  visibleRowCount: PropTypes.number.isRequired\n} : void 0;\nexport { GridRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"selectedRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['selectedRowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridSelectedRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SelectedRowCount',\n  overridesResolver: (props, styles) => styles.selectedRowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2),\n  visibility: 'hidden',\n  width: 0,\n  height: 0,\n  [theme.breakpoints.up('sm')]: {\n    visibility: 'visible',\n    width: 'auto',\n    height: 'auto'\n  }\n}));\nconst GridSelectedRowCount = /*#__PURE__*/React.forwardRef(function GridSelectedRowCount(props, ref) {\n  const {\n    className,\n    selectedRowCount\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const rowSelectedText = apiRef.current.getLocaleText('footerRowSelected')(selectedRowCount);\n  return /*#__PURE__*/_jsx(GridSelectedRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: rowSelectedText\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridSelectedRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  selectedRowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridSelectedRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled, alpha, lighten, darken } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['footerContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridFooterContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FooterContainer',\n  overridesResolver: (props, styles) => styles.footerContainer\n})(({\n  theme\n}) => {\n  const borderColor = theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68);\n  return {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    minHeight: 52,\n    // Match TablePagination min height\n    borderTop: `1px solid ${borderColor}`\n  };\n});\nconst GridFooterContainer = /*#__PURE__*/React.forwardRef(function GridFooterContainer(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridFooterContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooterContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooterContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridTopLevelRowCountSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { selectedGridRowsCountSelector } from '../hooks/features/selection/gridSelectionSelector';\nimport { gridVisibleTopLevelRowCountSelector } from '../hooks/features/filter/gridFilterSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridRowCount } from './GridRowCount';\nimport { GridSelectedRowCount } from './GridSelectedRowCount';\nimport { GridFooterContainer } from './containers/GridFooterContainer';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFooter = /*#__PURE__*/React.forwardRef(function GridFooter(props, ref) {\n  var _rootProps$components;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);\n  const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridVisibleTopLevelRowCountSelector);\n  const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {\n    selectedRowCount: selectedRowCount\n  }) : /*#__PURE__*/_jsx(\"div\", {});\n  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(GridRowCount, {\n    rowCount: totalTopLevelRowCount,\n    visibleRowCount: visibleTopLevelRowCount\n  }) : null;\n\n  const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.components.Pagination && /*#__PURE__*/_jsx(rootProps.components.Pagination, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.pagination));\n\n  return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({\n    ref: ref\n  }, props, {\n    children: [selectedRowCountElement, rowCountElement, paginationElement]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridHeader = /*#__PURE__*/React.forwardRef(function GridHeader(props, ref) {\n  var _rootProps$components, _rootProps$components2;\n\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref\n  }, props, {\n    children: [/*#__PURE__*/_jsx(rootProps.components.PreferencesPanel, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.preferencesPanel)), rootProps.components.Toolbar && /*#__PURE__*/_jsx(rootProps.components.Toolbar, _extends({}, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.toolbar))]\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridPreferencesPanel = /*#__PURE__*/React.forwardRef(function GridPreferencesPanel(props, ref) {\n  var _preferencePanelState, _rootProps$components, _rootProps$components2;\n\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, (_preferencePanelState = preferencePanelState.openedPanelValue) != null ? _preferencePanelState : GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.components.Panel, _extends({\n    ref: ref,\n    as: rootProps.components.BasePopper,\n    open: columns.length > 0 && preferencePanelState.open\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.panel, props, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.basePopper, {\n    children: panelContent\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { alpha, styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridOverlayRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Overlay',\n  overridesResolver: (props, styles) => styles.overlay\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  height: '100%',\n  alignSelf: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: alpha(theme.palette.background.default, theme.palette.action.disabledOpacity)\n}));\nconst GridOverlay = /*#__PURE__*/React.forwardRef(function GridOverlay(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridOverlayRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridLoadingOverlay(props, ref) {\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: /*#__PURE__*/_jsx(CircularProgress, {})\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLoadingOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridNoRowsOverlay = /*#__PURE__*/React.forwardRef(function GridNoRowsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noRowsLabel = apiRef.current.getLocaleText('noRowsLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noRowsLabel\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoRowsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoRowsOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { styled } from '@mui/material/styles';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridPaginationSelector } from '../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(({\n  theme\n}) => ({\n  [`& .${tablePaginationClasses.selectLabel}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  [`& .${tablePaginationClasses.input}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex'\n    }\n  }\n}));\nexport const GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  var _rootProps$rowsPerPag;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const lastPage = React.useMemo(() => Math.floor(paginationState.rowCount / (paginationState.pageSize || 1)), [paginationState.rowCount, paginationState.pageSize]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const newPageSize = Number(event.target.value);\n    apiRef.current.setPageSize(newPageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((event, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    var _rootProps$pageSize;\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingPageSizeInRowsPerPageOptions = React.useRef(false);\n\n    if (!warnedOnceMissingPageSizeInRowsPerPageOptions.current && !rootProps.autoPageSize && !rootProps.rowsPerPageOptions.includes((_rootProps$pageSize = rootProps.pageSize) != null ? _rootProps$pageSize : paginationState.pageSize)) {\n      var _rootProps$pageSize2;\n\n      console.warn([`MUI: The page size \\`${(_rootProps$pageSize2 = rootProps.pageSize) != null ? _rootProps$pageSize2 : paginationState.pageSize}\\` is not preset in the \\`rowsPerPageOptions\\``, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingPageSizeInRowsPerPageOptions.current = true;\n    }\n  }\n\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref // @ts-ignore\n    ,\n    component: \"div\",\n    count: paginationState.rowCount,\n    page: paginationState.page <= lastPage ? paginationState.page : lastPage,\n    rowsPerPageOptions: (_rootProps$rowsPerPag = rootProps.rowsPerPageOptions) != null && _rootProps$rowsPerPag.includes(paginationState.pageSize) ? rootProps.rowsPerPageOptions : [],\n    rowsPerPage: paginationState.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, apiRef.current.getLocaleText('MuiTablePagination'), props));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridPanelContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelContent',\n  overridesResolver: (props, styles) => styles.panelContent\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400\n});\n\nfunction GridPanelContent(props) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridPanelContentRoot, _extends({\n    className: clsx(className, classes.root)\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridPanelContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelFooter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridPanelFooterRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelFooter',\n  overridesResolver: (props, styles) => styles.panelFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5),\n  display: 'flex',\n  justifyContent: 'space-between'\n}));\n\nfunction GridPanelFooter(props) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridPanelFooterRoot, _extends({\n    className: clsx(className, classes.root)\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridPanelFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport TrapFocus from '@mui/material/Unstable_TrapFocus';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelWrapper']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridPanelWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelWrapper',\n  overridesResolver: (props, styles) => styles.panelWrapper\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: 1,\n  '&:focus': {\n    outline: 0\n  }\n});\n\nconst isEnabled = () => true;\n\nconst GridPanelWrapper = /*#__PURE__*/React.forwardRef(function GridPanelWrapper(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TrapFocus, {\n    open: true,\n    disableEnforceFocus: true,\n    isEnabled: isEnabled,\n    children: /*#__PURE__*/_jsx(GridPanelWrapperRoot, _extends({\n      ref: ref,\n      tabIndex: -1,\n      className: clsx(className, classes.root)\n    }, other))\n  });\n});\nexport { GridPanelWrapper };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"hasMultipleFilters\", \"deleteFilter\", \"applyFilterChanges\", \"multiFilterOperator\", \"showMultiFilterOperators\", \"disableMultiFilterOperator\", \"applyMultiFilterOperatorChanges\", \"focusElementRef\", \"linkOperators\", \"columnsSort\", \"deleteIconProps\", \"linkOperatorInputProps\", \"operatorInputProps\", \"columnInputProps\", \"valueInputProps\", \"children\"],\n      _excluded2 = [\"InputComponentProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport MenuItem from '@mui/material/MenuItem';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport { capitalize, unstable_useId as useId } from '@mui/material/utils';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { gridFilterableColumnDefinitionsSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { GridLinkOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['filterForm'],\n    deleteIcon: ['filterFormDeleteIcon'],\n    linkOperatorInput: ['filterFormLinkOperatorInput'],\n    columnInput: ['filterFormColumnInput'],\n    operatorInput: ['filterFormOperatorInput'],\n    valueInput: ['filterFormValueInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridFilterFormRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterForm',\n  overridesResolver: (props, styles) => styles.filterForm\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  padding: theme.spacing(1)\n}));\nconst FilterFormDeleteIcon = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormDeleteIcon',\n  overridesResolver: (_, styles) => styles.filterFormDeleteIcon\n})(({\n  theme\n}) => ({\n  flexShrink: 0,\n  justifyContent: 'flex-end',\n  marginRight: theme.spacing(0.5),\n  marginBottom: theme.spacing(0.2)\n}));\nconst FilterFormLinkOperatorInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormLinkOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormLinkOperatorInput\n})({\n  minWidth: 55,\n  marginRight: 5,\n  justifyContent: 'end'\n});\nconst FilterFormColumnInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormColumnInput',\n  overridesResolver: (_, styles) => styles.filterFormColumnInput\n})({\n  width: 150\n});\nconst FilterFormOperatorInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormOperatorInput\n})({\n  width: 120\n});\nconst FilterFormValueInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormValueInput',\n  overridesResolver: (_, styles) => styles.filterFormValueInput\n})({\n  width: 190\n});\n\nconst getLinkOperatorLocaleKey = linkOperator => {\n  switch (linkOperator) {\n    case GridLinkOperator.And:\n      return 'filterPanelOperatorAnd';\n\n    case GridLinkOperator.Or:\n      return 'filterPanelOperatorOr';\n\n    default:\n      throw new Error('MUI: Invalid `linkOperator` property in the `GridFilterPanel`.');\n  }\n};\n\nconst getColumnLabel = col => col.headerName || col.field;\n\nconst collator = new Intl.Collator();\nconst GridFilterForm = /*#__PURE__*/React.forwardRef(function GridFilterForm(props, ref) {\n  var _rootProps$components, _rootProps$components2, _baseSelectProps$nati, _rootProps$components3, _rootProps$components4, _rootProps$components5, _currentColumn$filter2;\n\n  const {\n    item,\n    hasMultipleFilters,\n    deleteFilter,\n    applyFilterChanges,\n    multiFilterOperator,\n    showMultiFilterOperators,\n    disableMultiFilterOperator,\n    applyMultiFilterOperatorChanges,\n    focusElementRef,\n    linkOperators = [GridLinkOperator.And, GridLinkOperator.Or],\n    columnsSort,\n    deleteIconProps = {},\n    linkOperatorInputProps = {},\n    operatorInputProps = {},\n    columnInputProps = {},\n    valueInputProps = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const columnSelectId = useId();\n  const columnSelectLabelId = useId();\n  const operatorSelectId = useId();\n  const operatorSelectLabelId = useId();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const valueRef = React.useRef(null);\n  const filterSelectorRef = React.useRef(null);\n  const hasLinkOperatorColumn = hasMultipleFilters && linkOperators.length > 0;\n  const baseFormControlProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseFormControl) || {};\n  const baseSelectProps = ((_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect) || {};\n  const isBaseSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const OptionComponent = isBaseSelectNative ? 'option' : MenuItem;\n\n  const {\n    InputComponentProps\n  } = valueInputProps,\n        valueInputPropsOther = _objectWithoutPropertiesLoose(valueInputProps, _excluded2);\n\n  const sortedFilterableColumns = React.useMemo(() => {\n    switch (columnsSort) {\n      case 'asc':\n        return filterableColumns.sort((a, b) => collator.compare(getColumnLabel(a), getColumnLabel(b)));\n\n      case 'desc':\n        return filterableColumns.sort((a, b) => -collator.compare(getColumnLabel(a), getColumnLabel(b)));\n\n      default:\n        return filterableColumns;\n    }\n  }, [filterableColumns, columnsSort]);\n  const currentColumn = item.columnField ? apiRef.current.getColumn(item.columnField) : null;\n  const currentOperator = React.useMemo(() => {\n    var _currentColumn$filter;\n\n    if (!item.operatorValue || !currentColumn) {\n      return null;\n    }\n\n    return (_currentColumn$filter = currentColumn.filterOperators) == null ? void 0 : _currentColumn$filter.find(operator => operator.value === item.operatorValue);\n  }, [item, currentColumn]);\n  const changeColumn = React.useCallback(event => {\n    const columnField = event.target.value;\n    const column = apiRef.current.getColumn(columnField);\n\n    if (column.field === currentColumn.field) {\n      // column did not change\n      return;\n    } // try to keep the same operator when column change\n\n\n    const newOperator = column.filterOperators.find(operator => operator.value === item.operatorValue) || column.filterOperators[0]; // Erase filter value if the input component is modified\n\n    const eraseItemValue = !newOperator.InputComponent || newOperator.InputComponent !== (currentOperator == null ? void 0 : currentOperator.InputComponent);\n    applyFilterChanges(_extends({}, item, {\n      columnField,\n      operatorValue: newOperator.value,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [apiRef, applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeOperator = React.useCallback(event => {\n    const operatorValue = event.target.value;\n    const newOperator = currentColumn == null ? void 0 : currentColumn.filterOperators.find(operator => operator.value === operatorValue);\n    const eraseItemValue = !(newOperator != null && newOperator.InputComponent) || (newOperator == null ? void 0 : newOperator.InputComponent) !== (currentOperator == null ? void 0 : currentOperator.InputComponent);\n    applyFilterChanges(_extends({}, item, {\n      operatorValue,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeLinkOperator = React.useCallback(event => {\n    const linkOperator = event.target.value === GridLinkOperator.And.toString() ? GridLinkOperator.And : GridLinkOperator.Or;\n    applyMultiFilterOperatorChanges(linkOperator);\n  }, [applyMultiFilterOperatorChanges]);\n\n  const handleDeleteFilter = () => {\n    if (rootProps.disableMultipleColumnsFiltering) {\n      if (item.value === undefined) {\n        deleteFilter(item);\n      } else {\n        // TODO v6: simplify the behavior by always remove the filter form\n        applyFilterChanges(_extends({}, item, {\n          value: undefined\n        }));\n      }\n    } else {\n      deleteFilter(item);\n    }\n  };\n\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus: () => {\n      if (currentOperator != null && currentOperator.InputComponent) {\n        var _valueRef$current;\n\n        valueRef == null ? void 0 : (_valueRef$current = valueRef.current) == null ? void 0 : _valueRef$current.focus();\n      } else {\n        filterSelectorRef.current.focus();\n      }\n    }\n  }), [currentOperator]);\n  return /*#__PURE__*/_jsxs(GridFilterFormRoot, _extends({\n    ref: ref,\n    className: classes.root\n  }, other, {\n    children: [/*#__PURE__*/_jsx(FilterFormDeleteIcon, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, deleteIconProps, {\n      className: clsx(classes.deleteIcon, baseFormControlProps.className, deleteIconProps.className),\n      children: /*#__PURE__*/_jsx(IconButton, {\n        \"aria-label\": apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        title: apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        onClick: handleDeleteFilter,\n        size: \"small\",\n        children: /*#__PURE__*/_jsx(rootProps.components.FilterPanelDeleteIcon, {\n          fontSize: \"small\"\n        })\n      })\n    })), /*#__PURE__*/_jsx(FilterFormLinkOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, linkOperatorInputProps, {\n      sx: _extends({\n        display: hasLinkOperatorColumn ? 'flex' : 'none',\n        visibility: showMultiFilterOperators ? 'visible' : 'hidden'\n      }, baseFormControlProps.sx || {}, linkOperatorInputProps.sx || {}),\n      className: clsx(classes.linkOperatorInput, baseFormControlProps.className, linkOperatorInputProps.className),\n      children: /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('filterPanelLinkOperator')\n        },\n        value: multiFilterOperator,\n        onChange: changeLinkOperator,\n        disabled: !!disableMultiFilterOperator || linkOperators.length === 1,\n        native: isBaseSelectNative\n      }, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseSelect, {\n        children: linkOperators.map(linkOperator => /*#__PURE__*/_jsx(OptionComponent, {\n          value: linkOperator.toString(),\n          children: apiRef.current.getLocaleText(getLinkOperatorLocaleKey(linkOperator))\n        }, linkOperator.toString()))\n      }))\n    })), /*#__PURE__*/_jsxs(FilterFormColumnInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, columnInputProps, {\n      className: clsx(classes.columnInput, baseFormControlProps.className, columnInputProps.className),\n      children: [/*#__PURE__*/_jsx(InputLabel, {\n        htmlFor: columnSelectId,\n        id: columnSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelColumns')\n      }), /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n        labelId: columnSelectLabelId,\n        id: columnSelectId,\n        label: apiRef.current.getLocaleText('filterPanelColumns'),\n        value: item.columnField || '',\n        onChange: changeColumn,\n        native: isBaseSelectNative\n      }, (_rootProps$components4 = rootProps.componentsProps) == null ? void 0 : _rootProps$components4.baseSelect, {\n        children: sortedFilterableColumns.map(col => /*#__PURE__*/_jsx(OptionComponent, {\n          value: col.field,\n          children: getColumnLabel(col)\n        }, col.field))\n      }))]\n    })), /*#__PURE__*/_jsxs(FilterFormOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, operatorInputProps, {\n      className: clsx(classes.operatorInput, baseFormControlProps.className, operatorInputProps.className),\n      children: [/*#__PURE__*/_jsx(InputLabel, {\n        htmlFor: operatorSelectId,\n        id: operatorSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelOperators')\n      }), /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n        labelId: operatorSelectLabelId,\n        label: apiRef.current.getLocaleText('filterPanelOperators'),\n        id: operatorSelectId,\n        value: item.operatorValue,\n        onChange: changeOperator,\n        native: isBaseSelectNative,\n        inputRef: filterSelectorRef\n      }, (_rootProps$components5 = rootProps.componentsProps) == null ? void 0 : _rootProps$components5.baseSelect, {\n        children: currentColumn == null ? void 0 : (_currentColumn$filter2 = currentColumn.filterOperators) == null ? void 0 : _currentColumn$filter2.map(operator => /*#__PURE__*/_jsx(OptionComponent, {\n          value: operator.value,\n          children: operator.label || apiRef.current.getLocaleText(`filterOperator${capitalize(operator.value)}`)\n        }, operator.value))\n      }))]\n    })), /*#__PURE__*/_jsx(FilterFormValueInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, valueInputPropsOther, {\n      className: clsx(classes.valueInput, baseFormControlProps.className, valueInputPropsOther.className),\n      children: currentOperator != null && currentOperator.InputComponent ? /*#__PURE__*/_jsx(currentOperator.InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        applyValue: applyFilterChanges,\n        focusElementRef: valueRef\n      }, currentOperator.InputComponentProps, InputComponentProps)) : null\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterForm.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Callback called when the operator, column field or value is changed.\n   * @param {GridFilterItem} item The updated [[GridFilterItem]].\n   */\n  applyFilterChanges: PropTypes.func.isRequired,\n\n  /**\n   * Callback called when the logic operator is changed.\n   * @param {GridLinkOperator} operator The new logic operator.\n   */\n  applyMultiFilterOperatorChanges: PropTypes.func.isRequired,\n\n  /**\n   * Props passed to the column input component.\n   * @default {}\n   */\n  columnInputProps: PropTypes.any,\n\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n\n  /**\n   * Callback called when the delete button is clicked.\n   * @param {GridFilterItem} item The deleted [[GridFilterItem]].\n   */\n  deleteFilter: PropTypes.func.isRequired,\n\n  /**\n   * Props passed to the delete icon.\n   * @default {}\n   */\n  deleteIconProps: PropTypes.any,\n\n  /**\n   * If `true`, disables the logic operator field but still renders it.\n   */\n  disableMultiFilterOperator: PropTypes.bool,\n\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the el\n   */\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * If `true`, the logic operator field is rendered.\n   * The field will be invisible if `showMultiFilterOperators` is also `true`.\n   */\n  hasMultipleFilters: PropTypes.bool.isRequired,\n\n  /**\n   * The [[GridFilterItem]] representing this form.\n   */\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired,\n\n  /**\n   * Props passed to the logic operator input component.\n   * @default {}\n   */\n  linkOperatorInputProps: PropTypes.any,\n\n  /**\n   * Sets the available logic operators.\n   * @default [GridLinkOperator.And, GridLinkOperator.Or]\n   */\n  linkOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n\n  /**\n   * The current logic operator applied.\n   */\n  multiFilterOperator: PropTypes.oneOf(['and', 'or']),\n\n  /**\n   * Props passed to the operator input component.\n   * @default {}\n   */\n  operatorInputProps: PropTypes.any,\n\n  /**\n   * If `true`, the logic operator field is visible.\n   */\n  showMultiFilterOperators: PropTypes.bool,\n\n  /**\n   * Props passed to the value input component.\n   * @default {}\n   */\n  valueInputProps: PropTypes.any\n} : void 0;\nexport { GridFilterForm };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"linkOperators\", \"columnsSort\", \"filterFormProps\", \"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridLinkOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridAddIcon } from '../../icons';\nimport { GridPanelContent } from '../GridPanelContent';\nimport { GridPanelFooter } from '../GridPanelFooter';\nimport { GridPanelWrapper } from '../GridPanelWrapper';\nimport { GridFilterForm } from './GridFilterForm';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { gridFilterModelSelector } from '../../../hooks/features/filter/gridFilterSelector';\nimport { gridFilterableColumnDefinitionsSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFilterPanel = /*#__PURE__*/React.forwardRef(function GridFilterPanel(props, ref) {\n  var _rootProps$components;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const lastFilterRef = React.useRef(null);\n\n  const {\n    linkOperators = [GridLinkOperator.And, GridLinkOperator.Or],\n    columnsSort,\n    filterFormProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const applyFilter = React.useCallback(item => {\n    apiRef.current.upsertFilterItem(item);\n  }, [apiRef]);\n  const applyFilterLinkOperator = React.useCallback(operator => {\n    apiRef.current.setFilterLinkOperator(operator);\n  }, [apiRef]);\n  const getDefaultItem = React.useCallback(() => {\n    const firstColumnWithOperator = filterableColumns.find(colDef => {\n      var _colDef$filterOperato;\n\n      return (_colDef$filterOperato = colDef.filterOperators) == null ? void 0 : _colDef$filterOperato.length;\n    });\n\n    if (!firstColumnWithOperator) {\n      return null;\n    }\n\n    return {\n      columnField: firstColumnWithOperator.field,\n      operatorValue: firstColumnWithOperator.filterOperators[0].value,\n      id: Math.round(Math.random() * 1e5)\n    };\n  }, [filterableColumns]);\n  const items = React.useMemo(() => {\n    if (filterModel.items.length) {\n      return filterModel.items;\n    }\n\n    const defaultItem = getDefaultItem();\n    return defaultItem ? [defaultItem] : [];\n  }, [filterModel.items, getDefaultItem]);\n  const hasMultipleFilters = items.length > 1;\n\n  const addNewFilter = () => {\n    const defaultItem = getDefaultItem();\n\n    if (!defaultItem) {\n      return;\n    }\n\n    apiRef.current.upsertFilterItems([...items, defaultItem]);\n  };\n\n  const deleteFilter = React.useCallback(item => {\n    const shouldCloseFilterPanel = items.length === 1;\n    apiRef.current.deleteFilterItem(item);\n\n    if (shouldCloseFilterPanel) {\n      apiRef.current.hideFilterPanel();\n    }\n  }, [apiRef, items.length]);\n  React.useEffect(() => {\n    if (linkOperators.length > 0 && filterModel.linkOperator && !linkOperators.includes(filterModel.linkOperator)) {\n      applyFilterLinkOperator(linkOperators[0]);\n    }\n  }, [linkOperators, applyFilterLinkOperator, filterModel.linkOperator]);\n  React.useEffect(() => {\n    if (items.length > 0) {\n      lastFilterRef.current.focus();\n    }\n  }, [items.length]);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(GridPanelContent, {\n      children: items.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: index > 0,\n        multiFilterOperator: filterModel.linkOperator,\n        disableMultiFilterOperator: index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLinkOperator,\n        focusElementRef: index === items.length - 1 ? lastFilterRef : null,\n        linkOperators: linkOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index : item.id))\n    }), !rootProps.disableMultipleColumnsFiltering && /*#__PURE__*/_jsx(GridPanelFooter, {\n      children: /*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n        onClick: addNewFilter,\n        startIcon: /*#__PURE__*/_jsx(GridAddIcon, {})\n      }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelAddFilter')\n      }))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n\n  /**\n   * Props passed to each filter form.\n   */\n  filterFormProps: PropTypes.shape({\n    columnInputProps: PropTypes.any,\n    columnsSort: PropTypes.oneOf(['asc', 'desc']),\n    deleteIconProps: PropTypes.any,\n    linkOperatorInputProps: PropTypes.any,\n    operatorInputProps: PropTypes.any,\n    valueInputProps: PropTypes.any\n  }),\n\n  /**\n   * Sets the available logic operators.\n   * @default [GridLinkOperator.And, GridLinkOperator.Or]\n   */\n  linkOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFilterPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelHeader']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridPanelHeaderRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelHeader',\n  overridesResolver: (props, styles) => styles.panelHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1)\n}));\n\nfunction GridPanelHeader(props) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridPanelHeaderRoot, _extends({\n    className: clsx(className, classes.root)\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridPanelHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelHeader };","import { localStorageAvailable } from '../utils/utils'; // A guide to feature toggling.\n//\n// The feature toggle is:\n// - independent from the NODE_ENV\n// - isn't pruning code in production, as the objective is to eventually ship the code.\n// - doesn't allow to cherry-pick which feature to enable\n//\n// By default, the experimental features are only enabled in:\n// - the local environment\n// - the pull request previews\n//\n// Reviewers can force the value with the local storage and the GRID_EXPERIMENTAL_ENABLED key:\n// - 'true' => force it to be enabled\n// - 'false' => force it to be disabled\n//\n// Developers (users) are discouraged to enable the experimental feature by setting the GRID_EXPERIMENTAL_ENABLED env.\n// Instead, prefer exposing experimental APIs, for instance, a prop or a new `unstable_` module.\n\nlet experimentalEnabled = false;\n\nif (typeof process !== 'undefined' && process.env.GRID_EXPERIMENTAL_ENABLED !== undefined && localStorageAvailable() && window.localStorage.getItem('GRID_EXPERIMENTAL_ENABLED')) {\n  experimentalEnabled = window.localStorage.getItem('GRID_EXPERIMENTAL_ENABLED') === 'true';\n} else if (typeof process !== 'undefined') {\n  experimentalEnabled = process.env.GRID_EXPERIMENTAL_ENABLED === 'true';\n}\n\nexport const GRID_EXPERIMENTAL_ENABLED = experimentalEnabled;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport { switchClasses } from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/material/styles';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridDragIcon } from '../icons';\nimport { GridPanelContent } from './GridPanelContent';\nimport { GridPanelFooter } from './GridPanelFooter';\nimport { GridPanelHeader } from './GridPanelHeader';\nimport { GridPanelWrapper } from './GridPanelWrapper';\nimport { GRID_EXPERIMENTAL_ENABLED } from '../../constants/envConstants';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnsPanel'],\n    columnsPanelRow: ['columnsPanelRow']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridColumnsPanelRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsPanel',\n  overridesResolver: (props, styles) => styles.columnsPanel\n})(() => ({\n  padding: '8px 0px 8px 8px'\n}));\nconst GridColumnsPanelRowRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsPanelRow',\n  overridesResolver: (props, styles) => styles.columnsPanelRow\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: '1px 8px 1px 7px',\n  [`& .${switchClasses.root}`]: {\n    marginRight: theme.spacing(0.5)\n  }\n}));\nconst GridIconButtonRoot = styled(IconButton)({\n  justifyContent: 'flex-end'\n});\nexport function GridColumnsPanel(props) {\n  var _rootProps$components, _rootProps$components3, _rootProps$components4;\n\n  const apiRef = useGridApiContext();\n  const searchInputRef = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const columnVisibilityModel = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const rootProps = useGridRootProps();\n  const [searchValue, setSearchValue] = React.useState('');\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  const toggleColumn = event => {\n    const {\n      name: field\n    } = event.target;\n    apiRef.current.setColumnVisibility(field, columnVisibilityModel[field] === false);\n  };\n\n  const toggleAllColumns = React.useCallback(isVisible => {\n    if (apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel) {\n      if (isVisible) {\n        return apiRef.current.setColumnVisibilityModel({});\n      }\n\n      return apiRef.current.setColumnVisibilityModel(Object.fromEntries(columns.filter(col => col.hideable !== false).map(col => [col.field, false])));\n    } // TODO v6: Remove\n\n\n    return apiRef.current.updateColumns(columns.map(col => {\n      if (col.hideable !== false) {\n        return {\n          field: col.field,\n          hide: !isVisible\n        };\n      }\n\n      return col;\n    }));\n  }, [apiRef, columns]);\n  const handleSearchValueChange = React.useCallback(event => {\n    setSearchValue(event.target.value);\n  }, []);\n  const currentColumns = React.useMemo(() => {\n    if (!searchValue) {\n      return columns;\n    }\n\n    const searchValueToCheck = searchValue.toLowerCase();\n    return columns.filter(column => (column.headerName || column.field).toLowerCase().indexOf(searchValueToCheck) > -1);\n  }, [columns, searchValue]);\n  React.useEffect(() => {\n    searchInputRef.current.focus();\n  }, []);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({}, props, {\n    children: [/*#__PURE__*/_jsx(GridPanelHeader, {\n      children: /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({\n        label: apiRef.current.getLocaleText('columnsPanelTextFieldLabel'),\n        placeholder: apiRef.current.getLocaleText('columnsPanelTextFieldPlaceholder'),\n        inputRef: searchInputRef,\n        value: searchValue,\n        onChange: handleSearchValueChange,\n        variant: \"standard\",\n        fullWidth: true\n      }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTextField))\n    }), /*#__PURE__*/_jsx(GridPanelContent, {\n      children: /*#__PURE__*/_jsx(GridColumnsPanelRoot, {\n        className: classes.root,\n        children: currentColumns.map(column => {\n          var _rootProps$components2;\n\n          return /*#__PURE__*/_jsxs(GridColumnsPanelRowRoot, {\n            className: classes.columnsPanelRow,\n            children: [/*#__PURE__*/_jsx(FormControlLabel, {\n              control: /*#__PURE__*/_jsx(rootProps.components.BaseSwitch, _extends({\n                disabled: column.hideable === false,\n                checked: columnVisibilityModel[column.field] !== false,\n                onClick: toggleColumn,\n                name: column.field,\n                size: \"small\"\n              }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSwitch)),\n              label: column.headerName || column.field\n            }), !rootProps.disableColumnReorder && GRID_EXPERIMENTAL_ENABLED && /*#__PURE__*/_jsx(GridIconButtonRoot, {\n              draggable: true,\n              \"aria-label\": apiRef.current.getLocaleText('columnsPanelDragIconLabel'),\n              title: apiRef.current.getLocaleText('columnsPanelDragIconLabel'),\n              size: \"small\",\n              disabled: true,\n              children: /*#__PURE__*/_jsx(GridDragIcon, {})\n            })]\n          }, column.field);\n        })\n      })\n    }), /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [/*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n        onClick: () => toggleAllColumns(false)\n      }, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseButton, {\n        children: apiRef.current.getLocaleText('columnsPanelHideAllButton')\n      })), /*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n        onClick: () => toggleAllColumns(true)\n      }, (_rootProps$components4 = rootProps.componentsProps) == null ? void 0 : _rootProps$components4.baseButton, {\n        children: apiRef.current.getLocaleText('columnsPanelShowAllButton')\n      }))]\n    })]\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { generateUtilityClasses } from '@mui/material';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPanelClasses = generateUtilityClasses('MuiDataGrid', ['panel', 'paper']);\nconst GridPanelRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Panel',\n  overridesResolver: (props, styles) => styles.panel\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst GridPaperRoot = styled(Paper, {\n  name: 'MuiDataGrid',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.background.paper,\n  minWidth: 300,\n  maxHeight: 450,\n  display: 'flex'\n}));\nconst GridPanel = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _apiRef$current$colum;\n\n  const {\n    children,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const classes = gridPanelClasses;\n  const [isPlaced, setIsPlaced] = React.useState(false);\n  const handleClickAway = React.useCallback(() => {\n    apiRef.current.hidePreferences();\n  }, [apiRef]);\n  const handleKeyDown = React.useCallback(event => {\n    if (isEscapeKey(event.key)) {\n      apiRef.current.hidePreferences();\n    }\n  }, [apiRef]);\n  const modifiers = React.useMemo(() => [{\n    name: 'flip',\n    enabled: false\n  }, {\n    name: 'isPlaced',\n    enabled: true,\n    phase: 'main',\n    fn: () => {\n      setIsPlaced(true);\n    },\n    effect: () => () => {\n      setIsPlaced(false);\n    }\n  }], []);\n  const anchorEl = (_apiRef$current$colum = apiRef.current.columnHeadersContainerElementRef) == null ? void 0 : _apiRef$current$colum.current;\n\n  if (!anchorEl) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridPanelRoot, _extends({\n    ref: ref,\n    placement: \"bottom-start\",\n    className: clsx(className, classes.panel),\n    anchorEl: anchorEl,\n    modifiers: modifiers\n  }, other, {\n    children: /*#__PURE__*/_jsx(ClickAwayListener, {\n      mouseEvent: \"onMouseUp\",\n      onClickAway: handleClickAway,\n      children: /*#__PURE__*/_jsx(GridPaperRoot, {\n        className: classes.paper,\n        elevation: 8,\n        onKeyDown: handleKeyDown,\n        children: isPlaced && children\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"rowHeight\", \"className\", \"visibleColumns\", \"renderedColumns\", \"containerWidth\", \"firstColumnToRender\", \"lastColumnToRender\", \"cellFocus\", \"cellTabIndex\", \"editRowsState\", \"isLastVisible\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\"];\n\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n\n/* eslint-disable jsx-a11y/interactive-supports-focus */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { GridEditModes, GridRowModes, GridCellModes } from '../models/gridEditRowModel';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridColumnsTotalWidthSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridVisibleRows } from '../hooks/utils/useGridVisibleRows';\nimport { findParentElementFromClassName } from '../utils/domUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../colDef/gridCheckboxSelectionColDef';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../colDef/gridActionsColDef';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../constants/gridDetailPanelToggleField';\nimport { gridSortModelSelector } from '../hooks/features/sorting/gridSortingSelector';\nimport { gridRowTreeDepthSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    editable,\n    editing,\n    selected,\n    isLastVisible,\n    rowHeight,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isLastVisible && 'row--lastVisible', rowHeight === 'auto' && 'row--dynamicHeight']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst EmptyCell = ({\n  width\n}) => {\n  if (!width) {\n    return null;\n  }\n\n  const style = {\n    width\n  };\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"MuiDataGrid-cell\",\n    style: style\n  }); // TODO change to .MuiDataGrid-emptyCell or .MuiDataGrid-rowFiller\n};\n\nfunction GridRow(props) {\n  var _apiRef$current$getRo;\n\n  const {\n    selected,\n    rowId,\n    row,\n    index,\n    style: styleProp,\n    rowHeight,\n    className,\n    visibleColumns,\n    renderedColumns,\n    containerWidth,\n    firstColumnToRender,\n    cellFocus,\n    cellTabIndex,\n    editRowsState,\n    isLastVisible = false,\n    onClick,\n    onDoubleClick,\n    onMouseEnter,\n    onMouseLeave\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ariaRowIndex = index + 2; // 1 for the header row and 1 as it's 1-based\n\n  const apiRef = useGridApiContext();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowTreeDepthSelector);\n  const {\n    hasScrollX,\n    hasScrollY\n  } = (_apiRef$current$getRo = apiRef.current.getRootDimensions()) != null ? _apiRef$current$getRo : {\n    hasScrollX: false,\n    hasScrollY: false\n  };\n  const ownerState = {\n    selected,\n    isLastVisible,\n    classes: rootProps.classes,\n    editing: apiRef.current.getRowMode(rowId) === GridRowModes.Edit,\n    editable: rootProps.editMode === GridEditModes.Row,\n    rowHeight\n  };\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (rowHeight === 'auto' && ref.current && typeof ResizeObserver === 'undefined') {\n      // Fallback for IE\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, ref.current.clientHeight);\n    }\n  }, [apiRef, rowHeight, rowId]);\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      // The index prop is relative to the rows from all pages. As example, the index prop of the\n      // first row is 5 if pageSize=5 and page=1. However, the index used by the virtualization\n      // doesn't care about pagination and considers the rows from the current page only, so the\n      // first row always has index=0. We need to subtract the index of the first row to make it\n      // compatible with the index used by the virtualization.\n      apiRef.current.unstable_setLastMeasuredRowIndex(index - currentPage.range.firstRowIndex);\n    }\n\n    const rootElement = ref.current;\n    const hasFixedHeight = rowHeight !== 'auto';\n\n    if (!rootElement || hasFixedHeight || typeof ResizeObserver === 'undefined') {\n      return undefined;\n    }\n\n    const resizeObserver = new ResizeObserver(entries => {\n      const [entry] = entries;\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height);\n    });\n    resizeObserver.observe(rootElement);\n    return () => resizeObserver.disconnect();\n  }, [apiRef, currentPage.range, index, rowHeight, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    // The target is not an element when triggered by a Select inside the cell\n    // See https://github.com/mui/material-ui/issues/10534\n    if (event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n      return;\n    } // The row might have been deleted\n\n\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell == null ? void 0 : cell.getAttribute('data-field'); // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      } // User opened a detail panel\n\n\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      } // User reorders a row\n\n\n      if (field === '__reorder__') {\n        return;\n      } // User is editing a cell\n\n\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      } // User clicked a button from the \"actions\" column type\n\n\n      const column = apiRef.current.getColumn(field);\n\n      if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n\n  const style = _extends({}, styleProp, {\n    maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n    // max-height doesn't support \"auto\"\n    minHeight: rowHeight\n  });\n\n  const sizes = apiRef.current.unstable_getRowInternalSizes(rowId);\n\n  if (sizes != null && sizes.spacingTop) {\n    const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n    style[property] = sizes.spacingTop;\n  }\n\n  if (sizes != null && sizes.spacingBottom) {\n    const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n    style[property] = sizes.spacingBottom;\n  }\n\n  let rowClassName = null;\n\n  if (typeof rootProps.getRowClassName === 'function') {\n    const indexRelativeToCurrentPage = index - currentPage.range.firstRowIndex;\n\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n\n    rowClassName = rootProps.getRowClassName(rowParams);\n  }\n\n  const cells = [];\n\n  for (let i = 0; i < renderedColumns.length; i += 1) {\n    const column = renderedColumns[i];\n    const indexRelativeToAllColumns = firstColumnToRender + i;\n    const isLastColumn = indexRelativeToAllColumns === visibleColumns.length - 1;\n    const removeLastBorderRight = isLastColumn && hasScrollX && !hasScrollY;\n    const showRightBorder = !isLastColumn ? rootProps.showCellRightBorder : !removeLastBorderRight && rootProps.disableExtendRowFullWidth;\n    const cellParams = apiRef.current.getCellParams(rowId, column.field);\n    const classNames = [];\n    const disableDragEvents = rootProps.disableColumnReorder && column.disableReorder || !rootProps.rowReordering && !!sortModel.length && treeDepth > 1 && Object.keys(editRowsState).length > 0;\n\n    if (column.cellClassName) {\n      classNames.push(clsx(typeof column.cellClassName === 'function' ? column.cellClassName(cellParams) : column.cellClassName));\n    }\n\n    const editCellState = editRowsState[rowId] ? editRowsState[rowId][column.field] : null;\n    let content = null;\n\n    if (editCellState == null && column.renderCell) {\n      var _rootProps$classes;\n\n      content = column.renderCell(_extends({}, cellParams, {\n        api: apiRef.current\n      })); // TODO move to GridCell\n\n      classNames.push(clsx(gridClasses['cell--withRenderer'], (_rootProps$classes = rootProps.classes) == null ? void 0 : _rootProps$classes['cell--withRenderer']));\n    }\n\n    if (editCellState != null && column.renderEditCell) {\n      var _rootProps$classes2;\n\n      let updatedRow = row;\n\n      if (apiRef.current.unstable_getRowWithUpdatedValues) {\n        // Only the new editing API has this method\n        updatedRow = apiRef.current.unstable_getRowWithUpdatedValues(rowId, column.field);\n      }\n\n      const params = _extends({}, cellParams, {\n        row: updatedRow\n      }, editCellState, {\n        api: apiRef.current\n      });\n\n      content = column.renderEditCell(params); // TODO move to GridCell\n\n      classNames.push(clsx(gridClasses['cell--editing'], (_rootProps$classes2 = rootProps.classes) == null ? void 0 : _rootProps$classes2['cell--editing']));\n    }\n\n    if (rootProps.getCellClassName) {\n      // TODO move to GridCell\n      classNames.push(rootProps.getCellClassName(cellParams));\n    }\n\n    const hasFocus = cellFocus !== null && cellFocus.id === rowId && cellFocus.field === column.field;\n    const tabIndex = cellTabIndex !== null && cellTabIndex.id === rowId && cellTabIndex.field === column.field && cellParams.cellMode === 'view' ? 0 : -1;\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n\n    if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n      var _rootProps$components;\n\n      const {\n        colSpan,\n        width\n      } = cellColSpanInfo.cellProps;\n      cells.push( /*#__PURE__*/_jsx(rootProps.components.Cell, _extends({\n        value: cellParams.value,\n        field: column.field,\n        width: width,\n        rowId: rowId,\n        height: rowHeight,\n        showRightBorder: showRightBorder,\n        formattedValue: cellParams.formattedValue,\n        align: column.align || 'left',\n        cellMode: cellParams.cellMode,\n        colIndex: indexRelativeToAllColumns,\n        isEditable: cellParams.isEditable,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        className: clsx(classNames),\n        colSpan: colSpan,\n        disableDragEvents: disableDragEvents\n      }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.cell, {\n        children: content\n      }), column.field));\n    }\n  }\n\n  const emptyCellWidth = containerWidth - columnsTotalWidth;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(rowClassName, classes.root, className),\n    \"aria-rowindex\": ariaRowIndex,\n    \"aria-selected\": selected,\n    style: style,\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave)\n  }, other, {\n    children: [cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    })]\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  cellFocus: PropTypes.object,\n  cellTabIndex: PropTypes.object,\n  containerWidth: PropTypes.number.isRequired,\n  editRowsState: PropTypes.object.isRequired,\n  firstColumnToRender: PropTypes.number.isRequired,\n\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isLastVisible: PropTypes.bool,\n  lastColumnToRender: PropTypes.number.isRequired,\n  renderedColumns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  row: PropTypes.any.isRequired,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nexport { GridRow };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sortingOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridColumnUnsortedIcon = /*#__PURE__*/React.memo(function GridColumnHeaderSortIcon(props) {\n  const {\n    sortingOrder\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const [nextSortDirection] = sortingOrder;\n  const Icon = nextSortDirection === 'asc' ? rootProps.components.ColumnSortedAscendingIcon : rootProps.components.ColumnSortedDescendingIcon;\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({}, other)) : null;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"message\", \"hasError\", \"errorInfo\"];\nimport * as React from 'react';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridDensityRowHeightSelector } from '../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// TODO v6: rename to GridErrorOverlay\nexport const ErrorOverlay = /*#__PURE__*/React.forwardRef(function ErrorOverlay(props, ref) {\n  const {\n    message\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const defaultLabel = apiRef.current.getLocaleText('errorOverlayDefaultLabel');\n  const rowHeight = useGridSelector(apiRef, gridDensityRowHeightSelector);\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref,\n    sx: {\n      width: '100%',\n      minHeight: 2 * rowHeight\n    }\n  }, other, {\n    children: message || defaultLabel\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridNoResultsOverlay = /*#__PURE__*/React.forwardRef(function GridNoResultsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noResultsOverlayLabel = apiRef.current.getLocaleText('noResultsOverlayLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noResultsOverlayLabel\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport MUICheckbox from '@mui/material/Checkbox';\nimport MUITextField from '@mui/material/TextField';\nimport MUIFormControl from '@mui/material/FormControl';\nimport MUISelect from '@mui/material/Select';\nimport MUISwitch from '@mui/material/Switch';\nimport MUIButton from '@mui/material/Button';\nimport MUITooltip from '@mui/material/Tooltip';\nimport MUIPopper from '@mui/material/Popper';\nimport { GridArrowDownwardIcon, GridArrowUpwardIcon, GridCell, GridCheckIcon, GridCloseIcon, GridColumnIcon, GridColumnMenu, GridColumnsPanel, GridFilterAltIcon, GridFilterListIcon, GridFilterPanel, GridFooter, GridHeader, GridLoadingOverlay, GridNoRowsOverlay, GridPagination, GridPanel, GridPreferencesPanel, GridRow, GridSaveAltIcon, GridSeparatorIcon, GridTableRowsIcon, GridTripleDotsVerticalIcon, GridViewHeadlineIcon, GridViewStreamIcon, GridMoreVertIcon, GridExpandMoreIcon, GridKeyboardArrowRight, GridAddIcon, GridRemoveIcon, GridDragIcon, GridColumnHeaderFilterIconButton, GridSearchIcon } from '../components';\nimport { GridColumnUnsortedIcon } from '../components/columnHeaders/GridColumnUnsortedIcon';\nimport { ErrorOverlay } from '../components/ErrorOverlay';\nimport { GridNoResultsOverlay } from '../components/GridNoResultsOverlay';\nconst DEFAULT_GRID_ICON_SLOTS_COMPONENTS = {\n  BooleanCellTrueIcon: GridCheckIcon,\n  BooleanCellFalseIcon: GridCloseIcon,\n  ColumnMenuIcon: GridTripleDotsVerticalIcon,\n  OpenFilterButtonIcon: GridFilterListIcon,\n  FilterPanelDeleteIcon: GridCloseIcon,\n  ColumnFilteredIcon: GridFilterAltIcon,\n  ColumnSelectorIcon: GridColumnIcon,\n  ColumnUnsortedIcon: GridColumnUnsortedIcon,\n  ColumnSortedAscendingIcon: GridArrowUpwardIcon,\n  ColumnSortedDescendingIcon: GridArrowDownwardIcon,\n  ColumnResizeIcon: GridSeparatorIcon,\n  DensityCompactIcon: GridViewHeadlineIcon,\n  DensityStandardIcon: GridTableRowsIcon,\n  DensityComfortableIcon: GridViewStreamIcon,\n  ExportIcon: GridSaveAltIcon,\n  MoreActionsIcon: GridMoreVertIcon,\n  TreeDataCollapseIcon: GridExpandMoreIcon,\n  TreeDataExpandIcon: GridKeyboardArrowRight,\n  GroupingCriteriaCollapseIcon: GridExpandMoreIcon,\n  GroupingCriteriaExpandIcon: GridKeyboardArrowRight,\n  DetailPanelExpandIcon: GridAddIcon,\n  DetailPanelCollapseIcon: GridRemoveIcon,\n  RowReorderIcon: GridDragIcon,\n  QuickFilterIcon: GridSearchIcon,\n  QuickFilterClearIcon: GridCloseIcon\n};\n/**\n * TODO: Differentiate community and pro value and interface\n */\n\nexport const DATA_GRID_DEFAULT_SLOTS_COMPONENTS = _extends({}, DEFAULT_GRID_ICON_SLOTS_COMPONENTS, {\n  BaseCheckbox: MUICheckbox,\n  BaseTextField: MUITextField,\n  BaseFormControl: MUIFormControl,\n  BaseSelect: MUISelect,\n  BaseSwitch: MUISwitch,\n  BaseButton: MUIButton,\n  BaseTooltip: MUITooltip,\n  BasePopper: MUIPopper,\n  Cell: GridCell,\n  ColumnHeaderFilterIconButton: GridColumnHeaderFilterIconButton,\n  ColumnMenu: GridColumnMenu,\n  ErrorOverlay,\n  Footer: GridFooter,\n  Header: GridHeader,\n  Toolbar: null,\n  PreferencesPanel: GridPreferencesPanel,\n  LoadingOverlay: GridLoadingOverlay,\n  NoResultsOverlay: GridNoResultsOverlay,\n  NoRowsOverlay: GridNoRowsOverlay,\n  Pagination: GridPagination,\n  FilterPanel: GridFilterPanel,\n  ColumnsPanel: GridColumnsPanel,\n  Panel: GridPanel,\n  Row: GridRow\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport Badge from '@mui/material/Badge';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['filterIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridColumnHeaderFilterIconButton(props) {\n  var _rootProps$components;\n\n  const {\n    counter,\n    field,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const toggleFilter = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const {\n      open,\n      openedPanelValue\n    } = gridPreferencePanelStateSelector(apiRef.current.state);\n\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel();\n    }\n\n    if (onClick) {\n      onClick(apiRef.current.getColumnHeaderParams(field), event);\n    }\n  }, [apiRef, field, onClick]);\n\n  if (!counter) {\n    return null;\n  }\n\n  const iconButton = /*#__PURE__*/_jsx(IconButton, {\n    onClick: toggleFilter,\n    color: \"default\",\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderFiltersLabel'),\n    size: \"small\",\n    tabIndex: -1,\n    children: /*#__PURE__*/_jsx(rootProps.components.ColumnFilteredIcon, {\n      className: classes.icon,\n      fontSize: \"small\"\n    })\n  });\n\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTooltip, _extends({\n    title: apiRef.current.getLocaleText('columnHeaderFiltersTooltipActive')(counter),\n    enterDelay: 1000\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTooltip, {\n    children: /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n      children: [counter > 1 && /*#__PURE__*/_jsx(Badge, {\n        badgeContent: counter,\n        color: \"default\",\n        children: iconButton\n      }), counter === 1 && iconButton]\n    })\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderFilterIconButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  counter: PropTypes.number,\n  field: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridColumnHeaderFilterIconButton };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { DATA_GRID_DEFAULT_SLOTS_COMPONENTS, GRID_DEFAULT_LOCALE_TEXT } from '../constants';\nimport { GridDensityTypes, GridEditModes, GridFeatureModeConstant } from '../models';\nconst DATA_GRID_FORCED_PROPS = {\n  apiRef: undefined,\n  disableMultipleColumnsFiltering: true,\n  disableMultipleColumnsSorting: true,\n  disableMultipleSelection: true,\n  throttleRowsMs: undefined,\n  hideFooterRowCount: false,\n  pagination: true,\n  checkboxSelectionVisibleOnly: false,\n  disableColumnReorder: true,\n  disableColumnResize: true,\n  signature: 'DataGrid'\n};\nexport const MAX_PAGE_SIZE = 100;\n/**\n * The default values of `DataGridPropsWithDefaultValues` to inject in the props of DataGrid.\n */\n\nexport const DATA_GRID_PROPS_DEFAULT_VALUES = {\n  autoHeight: false,\n  autoPageSize: false,\n  checkboxSelection: false,\n  checkboxSelectionVisibleOnly: false,\n  columnBuffer: 3,\n  rowBuffer: 3,\n  columnThreshold: 3,\n  rowThreshold: 3,\n  density: GridDensityTypes.Standard,\n  disableExtendRowFullWidth: false,\n  disableColumnFilter: false,\n  disableColumnMenu: false,\n  disableColumnSelector: false,\n  disableDensitySelector: false,\n  disableMultipleColumnsFiltering: false,\n  disableMultipleSelection: false,\n  disableMultipleColumnsSorting: false,\n  disableSelectionOnClick: false,\n  disableVirtualization: false,\n  editMode: GridEditModes.Cell,\n  filterMode: GridFeatureModeConstant.client,\n  headerHeight: 56,\n  hideFooter: false,\n  hideFooterPagination: false,\n  hideFooterRowCount: false,\n  hideFooterSelectedRowCount: false,\n  logger: console,\n  logLevel: process.env.NODE_ENV === 'production' ? 'error' : 'warn',\n  pagination: false,\n  paginationMode: GridFeatureModeConstant.client,\n  rowHeight: 52,\n  rowsPerPageOptions: [25, 50, 100],\n  rowSpacingType: 'margin',\n  showCellRightBorder: false,\n  showColumnRightBorder: false,\n  sortingOrder: ['asc', 'desc', null],\n  sortingMode: GridFeatureModeConstant.client,\n  throttleRowsMs: 0,\n  disableColumnReorder: false,\n  disableColumnResize: false,\n  keepNonExistentRowsSelected: false\n};\nexport const useDataGridProps = inProps => {\n  if (inProps.pageSize > MAX_PAGE_SIZE) {\n    throw new Error(`'props.pageSize' cannot exceed 100 in DataGrid.`);\n  }\n\n  const themedProps = useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  });\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const components = React.useMemo(() => {\n    const overrides = themedProps.components;\n\n    if (!overrides) {\n      return _extends({}, DATA_GRID_DEFAULT_SLOTS_COMPONENTS);\n    }\n\n    const mergedComponents = {};\n    Object.entries(DATA_GRID_DEFAULT_SLOTS_COMPONENTS).forEach(([key, defaultComponent]) => {\n      mergedComponents[key] = overrides[key] === undefined ? defaultComponent : overrides[key];\n    });\n    return mergedComponents;\n  }, [themedProps.components]);\n  return React.useMemo(() => _extends({}, DATA_GRID_PROPS_DEFAULT_VALUES, themedProps, {\n    localeText,\n    components\n  }, DATA_GRID_FORCED_PROPS), [themedProps, localeText, components]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScroller']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst VirtualScrollerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScroller',\n  overridesResolver: (props, styles) => styles.virtualScroller\n})({\n  overflow: 'auto',\n  // See https://github.com/mui/mui-x/issues/4360\n  position: 'relative',\n  '@media print': {\n    overflow: 'hidden'\n  }\n});\nconst GridVirtualScroller = /*#__PURE__*/React.forwardRef(function GridVirtualScroller(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(VirtualScrollerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nexport { GridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"style\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    overflowedContent\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerContent', overflowedContent && 'virtualScrollerContent--overflowed']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst VirtualScrollerContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerContent',\n  overridesResolver: (props, styles) => styles.virtualScrollerContent\n})({});\nconst GridVirtualScrollerContent = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerContent(props, ref) {\n  const {\n    className,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes,\n    overflowedContent: !rootProps.autoHeight && (style == null ? void 0 : style.minHeight) === 'auto'\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(VirtualScrollerContentRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    style: style\n  }, other));\n});\nexport { GridVirtualScrollerContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerRenderZone']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst VirtualScrollerRenderZoneRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerRenderZone',\n  overridesResolver: (props, styles) => styles.virtualScrollerRenderZone\n})({\n  position: 'absolute',\n  display: 'flex',\n  // Prevents margin collapsing when using `getRowSpacing`\n  flexDirection: 'column'\n});\nconst GridVirtualScrollerRenderZone = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerRenderZone(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(VirtualScrollerRenderZoneRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nexport { GridVirtualScrollerRenderZone };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"style\"];\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { useForkRef } from '@mui/material/utils';\nimport { useGridApiContext } from '../../utils/useGridApiContext';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridVisibleColumnDefinitionsSelector, gridColumnsTotalWidthSelector, gridColumnPositionsSelector } from '../columns/gridColumnsSelector';\nimport { gridDensityRowHeightSelector } from '../density/densitySelector';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nimport { gridEditRowsStateSelector } from '../editRows/gridEditRowsSelector';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { clamp } from '../../../utils/utils';\nimport { selectedIdsLookupSelector } from '../selection/gridSelectionSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getFirstNonSpannedColumnToRender } from '../columns/gridColumnsUtils'; // Uses binary search to avoid looping through all possible positions\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function binarySearch(offset, positions, sliceStart = 0, sliceEnd = positions.length) {\n  if (positions.length <= 0) {\n    return -1;\n  }\n\n  if (sliceStart >= sliceEnd) {\n    return sliceStart;\n  }\n\n  const pivot = sliceStart + Math.floor((sliceEnd - sliceStart) / 2);\n  const itemOffset = positions[pivot];\n  return offset <= itemOffset ? binarySearch(offset, positions, sliceStart, pivot) : binarySearch(offset, positions, pivot + 1, sliceEnd);\n}\n\nfunction exponentialSearch(offset, positions, index) {\n  let interval = 1;\n\n  while (index < positions.length && positions[index] < offset) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return binarySearch(offset, positions, Math.floor(index / 2), Math.min(index, positions.length));\n}\n\nexport const getRenderableIndexes = ({\n  firstIndex,\n  lastIndex,\n  buffer,\n  minFirstIndex,\n  maxLastIndex\n}) => {\n  return [clamp(firstIndex - buffer, minFirstIndex, maxLastIndex), clamp(lastIndex + buffer, minFirstIndex, maxLastIndex)];\n};\nexport const useGridVirtualScroller = props => {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const {\n    ref,\n    disableVirtualization,\n    onRenderZonePositioning,\n    renderZoneMinColumnIndex = 0,\n    renderZoneMaxColumnIndex = visibleColumns.length,\n    getRowProps\n  } = props;\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const rowHeight = useGridSelector(apiRef, gridDensityRowHeightSelector);\n  const cellFocus = useGridSelector(apiRef, gridFocusCellSelector);\n  const cellTabIndex = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector);\n  const selectedRowsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const renderZoneRef = React.useRef(null);\n  const rootRef = React.useRef(null);\n  const handleRef = useForkRef(ref, rootRef);\n  const [renderContext, setRenderContext] = React.useState(null);\n  const prevRenderContext = React.useRef(renderContext);\n  const scrollPosition = React.useRef({\n    top: 0,\n    left: 0\n  });\n  const [containerWidth, setContainerWidth] = React.useState(null);\n  const prevTotalWidth = React.useRef(columnsTotalWidth);\n  const getNearestIndexToRender = React.useCallback(offset => {\n    const lastMeasuredIndex = Math.max(0, apiRef.current.unstable_getLastMeasuredRowIndex());\n    const allRowsMeasured = lastMeasuredIndex === Infinity;\n\n    if (allRowsMeasured || rowsMeta.positions[lastMeasuredIndex] >= offset) {\n      // If all rows were measured (when no row has \"auto\" as height) or all rows before the offset\n      // were measured, then use a binary search because it's faster.\n      return binarySearch(offset, rowsMeta.positions);\n    } // Otherwise, use an exponential search.\n    // If rows have \"auto\" as height, their positions will be based on estimated heights.\n    // In this case, we can skip several steps until we find a position higher than the offset.\n    // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n\n\n    return exponentialSearch(offset, rowsMeta.positions, lastMeasuredIndex);\n  }, [apiRef, rowsMeta.positions]);\n  const computeRenderContext = React.useCallback(() => {\n    if (disableVirtualization) {\n      return {\n        firstRowIndex: 0,\n        lastRowIndex: currentPage.rows.length,\n        firstColumnIndex: 0,\n        lastColumnIndex: visibleColumns.length\n      };\n    }\n\n    const {\n      top,\n      left\n    } = scrollPosition.current; // Clamp the value because the search may return an index out of bounds.\n    // In the last index, this is not needed because Array.slice doesn't include it.\n\n    const firstRowIndex = Math.min(getNearestIndexToRender(top), rowsMeta.positions.length - 1);\n    const lastRowIndex = rootProps.autoHeight ? firstRowIndex + currentPage.rows.length : getNearestIndexToRender(top + rootRef.current.clientHeight);\n    let hasRowWithAutoHeight = false;\n    let firstColumnIndex = 0;\n    let lastColumnIndex = columnPositions.length;\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: firstRowIndex,\n      lastIndex: lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n\n    for (let i = firstRowToRender; i < lastRowToRender && !hasRowWithAutoHeight; i += 1) {\n      const row = currentPage.rows[i];\n      hasRowWithAutoHeight = apiRef.current.unstable_rowHasAutoHeight(row.id);\n    }\n\n    if (!hasRowWithAutoHeight) {\n      firstColumnIndex = binarySearch(left, columnPositions);\n      lastColumnIndex = binarySearch(left + containerWidth, columnPositions);\n    }\n\n    return {\n      firstRowIndex,\n      lastRowIndex,\n      firstColumnIndex,\n      lastColumnIndex\n    };\n  }, [disableVirtualization, getNearestIndexToRender, rowsMeta.positions.length, rootProps.autoHeight, rootProps.rowBuffer, currentPage.rows, columnPositions, visibleColumns.length, apiRef, containerWidth]);\n  React.useEffect(() => {\n    if (disableVirtualization) {\n      renderZoneRef.current.style.transform = `translate3d(0px, 0px, 0px)`;\n    } else {\n      // TODO a scroll reset should not be necessary\n      rootRef.current.scrollLeft = 0;\n      rootRef.current.scrollTop = 0;\n    }\n  }, [disableVirtualization]);\n  React.useEffect(() => {\n    setContainerWidth(rootRef.current.clientWidth);\n  }, [rowsMeta.currentPageTotalHeight]);\n  const handleResize = React.useCallback(() => {\n    if (rootRef.current) {\n      setContainerWidth(rootRef.current.clientWidth);\n    }\n  }, []);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  const updateRenderZonePosition = React.useCallback(nextRenderContext => {\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const [initialFirstColumnToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstColumnIndex,\n      lastIndex: nextRenderContext.lastColumnIndex,\n      minFirstIndex: renderZoneMinColumnIndex,\n      maxLastIndex: renderZoneMaxColumnIndex,\n      buffer: rootProps.columnBuffer\n    });\n    const firstColumnToRender = getFirstNonSpannedColumnToRender({\n      firstColumnToRender: initialFirstColumnToRender,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const top = gridRowsMetaSelector(apiRef.current.state).positions[firstRowToRender];\n    const left = gridColumnPositionsSelector(apiRef)[firstColumnToRender]; // Call directly the selector because it might be outdated when this method is called\n\n    renderZoneRef.current.style.transform = `translate3d(${left}px, ${top}px, 0px)`;\n\n    if (typeof onRenderZonePositioning === 'function') {\n      onRenderZonePositioning({\n        top,\n        left\n      });\n    }\n  }, [apiRef, currentPage.rows, onRenderZonePositioning, renderZoneMinColumnIndex, renderZoneMaxColumnIndex, rootProps.columnBuffer, rootProps.rowBuffer]);\n  React.useLayoutEffect(() => {\n    if (renderContext) {\n      updateRenderZonePosition(renderContext);\n    }\n  }, [renderContext, updateRenderZonePosition]);\n  const updateRenderContext = React.useCallback(nextRenderContext => {\n    setRenderContext(nextRenderContext);\n    prevRenderContext.current = nextRenderContext;\n  }, [setRenderContext, prevRenderContext]);\n  React.useEffect(() => {\n    if (containerWidth == null) {\n      return;\n    }\n\n    const initialRenderContext = computeRenderContext();\n    updateRenderContext(initialRenderContext);\n    const {\n      top,\n      left\n    } = scrollPosition.current;\n    const params = {\n      top,\n      left,\n      renderContext: initialRenderContext\n    };\n    apiRef.current.publishEvent('rowsScroll', params);\n  }, [apiRef, computeRenderContext, containerWidth, updateRenderContext]);\n\n  const handleScroll = event => {\n    const {\n      scrollTop,\n      scrollLeft\n    } = event.currentTarget;\n    scrollPosition.current.top = scrollTop;\n    scrollPosition.current.left = scrollLeft; // On iOS and macOS, negative offsets are possible when swiping past the start\n\n    if (scrollLeft < 0 || scrollTop < 0 || !prevRenderContext.current) {\n      return;\n    } // When virtualization is disabled, the context never changes during scroll\n\n\n    const nextRenderContext = disableVirtualization ? prevRenderContext.current : computeRenderContext();\n    const topRowsScrolledSincePreviousRender = Math.abs(nextRenderContext.firstRowIndex - prevRenderContext.current.firstRowIndex);\n    const bottomRowsScrolledSincePreviousRender = Math.abs(nextRenderContext.lastRowIndex - prevRenderContext.current.lastRowIndex);\n    const topColumnsScrolledSincePreviousRender = Math.abs(nextRenderContext.firstColumnIndex - prevRenderContext.current.firstColumnIndex);\n    const bottomColumnsScrolledSincePreviousRender = Math.abs(nextRenderContext.lastColumnIndex - prevRenderContext.current.lastColumnIndex);\n    const shouldSetState = topRowsScrolledSincePreviousRender >= rootProps.rowThreshold || bottomRowsScrolledSincePreviousRender >= rootProps.rowThreshold || topColumnsScrolledSincePreviousRender >= rootProps.columnThreshold || bottomColumnsScrolledSincePreviousRender >= rootProps.columnThreshold || prevTotalWidth.current !== columnsTotalWidth; // TODO v6: rename event to a wider name, it's not only fired for row scrolling\n\n    apiRef.current.publishEvent('rowsScroll', {\n      top: scrollTop,\n      left: scrollLeft,\n      renderContext: shouldSetState ? nextRenderContext : prevRenderContext.current\n    }, event);\n\n    if (shouldSetState) {\n      // Prevents batching render context changes\n      ReactDOM.flushSync(() => {\n        updateRenderContext(nextRenderContext);\n      });\n      prevTotalWidth.current = columnsTotalWidth;\n    }\n  };\n\n  const handleWheel = event => {\n    apiRef.current.publishEvent('virtualScrollerWheel', {}, event);\n  };\n\n  const handleTouchMove = event => {\n    apiRef.current.publishEvent('virtualScrollerTouchMove', {}, event);\n  };\n\n  const getRows = (params = {\n    renderContext\n  }) => {\n    const {\n      renderContext: nextRenderContext,\n      minFirstColumn = renderZoneMinColumnIndex,\n      maxLastColumn = renderZoneMaxColumnIndex,\n      availableSpace = containerWidth,\n      ignoreAutoHeight\n    } = params;\n\n    if (!currentPage.range || !nextRenderContext || availableSpace == null) {\n      return null;\n    }\n\n    const rowBuffer = !disableVirtualization ? rootProps.rowBuffer : 0;\n    const columnBuffer = !disableVirtualization ? rootProps.columnBuffer : 0;\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rowBuffer\n    });\n    const renderedRows = [];\n\n    for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n      const row = currentPage.rows[i];\n      renderedRows.push(row);\n      apiRef.current.unstable_calculateColSpan({\n        rowId: row.id,\n        minFirstColumn,\n        maxLastColumn\n      });\n    }\n\n    const [initialFirstColumnToRender, lastColumnToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstColumnIndex,\n      lastIndex: nextRenderContext.lastColumnIndex,\n      minFirstIndex: minFirstColumn,\n      maxLastIndex: maxLastColumn,\n      buffer: columnBuffer\n    });\n    const firstColumnToRender = getFirstNonSpannedColumnToRender({\n      firstColumnToRender: initialFirstColumnToRender,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    const rows = [];\n\n    for (let i = 0; i < renderedRows.length; i += 1) {\n      var _rootProps$components;\n\n      const {\n        id,\n        model\n      } = renderedRows[i];\n      const lastVisibleRowIndex = firstRowToRender + i === currentPage.rows.length - 1;\n      const baseRowHeight = !apiRef.current.unstable_rowHasAutoHeight(id) || ignoreAutoHeight ? apiRef.current.unstable_getRowHeight(id) : 'auto';\n      let isSelected;\n\n      if (selectedRowsLookup[id] == null) {\n        isSelected = false;\n      } else if (typeof rootProps.isRowSelectable === 'function') {\n        isSelected = rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n      } else {\n        isSelected = true;\n      }\n\n      rows.push( /*#__PURE__*/_jsx(rootProps.components.Row, _extends({\n        row: model,\n        rowId: id,\n        rowHeight: baseRowHeight,\n        cellFocus: cellFocus // TODO move to inside the row\n        ,\n        cellTabIndex: cellTabIndex // TODO move to inside the row\n        ,\n        editRowsState: editRowsState // TODO move to inside the row\n        ,\n        renderedColumns: renderedColumns,\n        visibleColumns: visibleColumns,\n        firstColumnToRender: firstColumnToRender,\n        lastColumnToRender: lastColumnToRender,\n        selected: isSelected,\n        index: currentPage.range.firstRowIndex + firstRowToRender + i,\n        containerWidth: availableSpace,\n        isLastVisible: lastVisibleRowIndex\n      }, typeof getRowProps === 'function' ? getRowProps(id, model) : {}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.row), id));\n    }\n\n    return rows;\n  };\n\n  const needsHorizontalScrollbar = containerWidth && columnsTotalWidth > containerWidth;\n  const contentSize = React.useMemo(() => {\n    // In cases where the columns exceed the available width,\n    // the horizontal scrollbar should be shown even when there're no rows.\n    // Keeping 1px as minimum height ensures that the scrollbar will visible if necessary.\n    const height = Math.max(rowsMeta.currentPageTotalHeight, 1);\n    let shouldExtendContent = false;\n\n    if (rootRef != null && rootRef.current && height <= (rootRef == null ? void 0 : rootRef.current.clientHeight)) {\n      shouldExtendContent = true;\n    }\n\n    const size = {\n      width: needsHorizontalScrollbar ? columnsTotalWidth : 'auto',\n      height,\n      minHeight: shouldExtendContent ? '100%' : 'auto'\n    };\n\n    if (rootProps.autoHeight && currentPage.rows.length === 0) {\n      size.height = 2 * rowHeight; // Give room to show the overlay when there's no row.\n    }\n\n    return size;\n  }, [rootRef, columnsTotalWidth, rowsMeta.currentPageTotalHeight, currentPage.rows.length, needsHorizontalScrollbar, rootProps.autoHeight, rowHeight]);\n  React.useEffect(() => {\n    apiRef.current.publishEvent('virtualScrollerContentSizeChange');\n  }, [apiRef, contentSize]);\n\n  if (rootProps.autoHeight && currentPage.rows.length === 0) {\n    contentSize.height = 2 * rowHeight; // Give room to show the overlay when there no rows.\n  }\n\n  const rootStyle = {};\n\n  if (!needsHorizontalScrollbar) {\n    rootStyle.overflowX = 'hidden';\n  }\n\n  if (rootProps.autoHeight) {\n    rootStyle.overflowY = 'hidden';\n  }\n\n  const getRenderContext = React.useCallback(() => {\n    return prevRenderContext.current;\n  }, []);\n  apiRef.current.unstable_getRenderContext = getRenderContext;\n  return {\n    renderContext,\n    updateRenderZonePosition,\n    getRows,\n    getRootProps: (_ref = {}) => {\n      let {\n        style = {}\n      } = _ref,\n          other = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n      return _extends({\n        ref: handleRef,\n        onScroll: handleScroll,\n        onWheel: handleWheel,\n        onTouchMove: handleTouchMove,\n        style: _extends({}, style, rootStyle)\n      }, other);\n    },\n    getContentProps: ({\n      style = {}\n    } = {}) => ({\n      style: _extends({}, style, contentSize)\n    }),\n    getRenderZoneProps: () => ({\n      ref: renderZoneRef\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"disableVirtualization\"];\nimport * as React from 'react';\nimport { GridVirtualScroller } from './virtualization/GridVirtualScroller';\nimport { GridVirtualScrollerContent } from './virtualization/GridVirtualScrollerContent';\nimport { GridVirtualScrollerRenderZone } from './virtualization/GridVirtualScrollerRenderZone';\nimport { useGridVirtualScroller } from '../hooks/features/virtualization/useGridVirtualScroller';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DataGridVirtualScroller = /*#__PURE__*/React.forwardRef(function DataGridVirtualScroller(props, ref) {\n  const {\n    className,\n    disableVirtualization\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    getRootProps,\n    getContentProps,\n    getRenderZoneProps,\n    getRows\n  } = useGridVirtualScroller({\n    ref,\n    disableVirtualization\n  });\n  return /*#__PURE__*/_jsx(GridVirtualScroller, _extends({\n    className: className\n  }, getRootProps(other), {\n    children: /*#__PURE__*/_jsx(GridVirtualScrollerContent, _extends({}, getContentProps(), {\n      children: /*#__PURE__*/_jsx(GridVirtualScrollerRenderZone, _extends({}, getRenderZoneProps(), {\n        children: getRows()\n      }))\n    }))\n  }));\n});\nexport { DataGridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport Badge from '@mui/material/Badge';\nimport IconButton from '@mui/material/IconButton';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['sortIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction getIcon(icons, direction, className, sortingOrder) {\n  let Icon;\n  const iconProps = {};\n\n  if (direction === 'asc') {\n    Icon = icons.ColumnSortedAscendingIcon;\n  } else if (direction === 'desc') {\n    Icon = icons.ColumnSortedDescendingIcon;\n  } else {\n    Icon = icons.ColumnUnsortedIcon;\n    iconProps.sortingOrder = sortingOrder;\n  }\n\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: className\n  }, iconProps)) : null;\n}\n\nfunction GridColumnHeaderSortIconRaw(props) {\n  const {\n    direction,\n    index,\n    sortingOrder\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const iconElement = getIcon(rootProps.components, direction, classes.icon, sortingOrder);\n\n  if (!iconElement) {\n    return null;\n  }\n\n  const iconButton = /*#__PURE__*/_jsx(IconButton, {\n    tabIndex: -1,\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    title: apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    size: \"small\",\n    children: iconElement\n  });\n\n  return /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n    children: [index != null && /*#__PURE__*/_jsx(Badge, {\n      badgeContent: index,\n      color: \"default\",\n      children: iconButton\n    }), index == null && iconButton]\n  });\n}\n\nconst GridColumnHeaderSortIcon = /*#__PURE__*/React.memo(GridColumnHeaderSortIconRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSortIconRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  index: PropTypes.number,\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])).isRequired\n} : void 0;\nexport { GridColumnHeaderSortIcon };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { isOverflown } from '../../utils/domUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaderTitle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridColumnHeaderTitleRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderTitle',\n  overridesResolver: (props, styles) => styles.columnHeaderTitle\n})(({\n  theme\n}) => ({\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  fontWeight: theme.typography.fontWeightMedium\n}));\nconst ColumnHeaderInnerTitle = /*#__PURE__*/React.forwardRef(function ColumnHeaderInnerTitle(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridColumnHeaderTitleRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\n\n// No React.memo here as if we display the sort icon, we need to recalculate the isOver\nfunction GridColumnHeaderTitle(props) {\n  var _rootProps$components;\n\n  const {\n    label,\n    description,\n    columnWidth\n  } = props;\n  const rootProps = useGridRootProps();\n  const titleRef = React.useRef(null);\n  const [tooltip, setTooltip] = React.useState('');\n  React.useEffect(() => {\n    if (!description && titleRef && titleRef.current) {\n      const isOver = isOverflown(titleRef.current);\n\n      if (isOver) {\n        setTooltip(label);\n      } else {\n        setTooltip('');\n      }\n    }\n  }, [titleRef, columnWidth, description, label]);\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTooltip, _extends({\n    title: description || tooltip\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTooltip, {\n    children: /*#__PURE__*/_jsx(ColumnHeaderInnerTitle, {\n      ref: titleRef,\n      children: label\n    })\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnWidth: PropTypes.number.isRequired,\n  description: PropTypes.node,\n  label: PropTypes.string.isRequired\n} : void 0;\nexport { GridColumnHeaderTitle };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"resizable\", \"resizing\", \"height\", \"side\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { capitalize } from '@mui/material/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GridColumnHeaderSeparatorSides;\n\n(function (GridColumnHeaderSeparatorSides) {\n  GridColumnHeaderSeparatorSides[\"Left\"] = \"left\";\n  GridColumnHeaderSeparatorSides[\"Right\"] = \"right\";\n})(GridColumnHeaderSeparatorSides || (GridColumnHeaderSeparatorSides = {}));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    resizable,\n    resizing,\n    classes,\n    side\n  } = ownerState;\n  const slots = {\n    root: ['columnSeparator', resizable && 'columnSeparator--resizable', resizing && 'columnSeparator--resizing', side && `columnSeparator--side${capitalize(side)}`],\n    icon: ['iconSeparator']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridColumnHeaderSeparatorRaw(props) {\n  const {\n    height,\n    side = GridColumnHeaderSeparatorSides.Right\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, props, {\n    side,\n    classes: rootProps.classes\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const stopClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      className: classes.root,\n      style: {\n        minHeight: height,\n        opacity: rootProps.showColumnRightBorder ? 0 : 1\n      }\n    }, other, {\n      onClick: stopClick,\n      children: /*#__PURE__*/_jsx(rootProps.components.ColumnResizeIcon, {\n        className: classes.icon\n      })\n    }))\n  );\n}\n\nconst GridColumnHeaderSeparator = /*#__PURE__*/React.memo(GridColumnHeaderSeparatorRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSeparatorRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  height: PropTypes.number.isRequired,\n  resizable: PropTypes.bool.isRequired,\n  resizing: PropTypes.bool.isRequired,\n  side: PropTypes.oneOf(['left', 'right'])\n} : void 0;\nexport { GridColumnHeaderSeparator, GridColumnHeaderSeparatorSides };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['menuIcon', open && 'menuOpen'],\n    button: ['menuIconButton']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nexport const ColumnHeaderMenuIcon = /*#__PURE__*/React.memo(props => {\n  const {\n    column,\n    open,\n    columnMenuId,\n    columnMenuButtonId,\n    iconButtonRef\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const handleMenuIconClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    apiRef.current.toggleColumnMenu(column.field);\n  }, [apiRef, column.field]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsx(IconButton, {\n      ref: iconButtonRef,\n      tabIndex: -1,\n      className: classes.button,\n      \"aria-label\": apiRef.current.getLocaleText('columnMenuLabel'),\n      title: apiRef.current.getLocaleText('columnMenuLabel'),\n      size: \"small\",\n      onClick: handleMenuIconClick,\n      \"aria-expanded\": open ? 'true' : undefined,\n      \"aria-haspopup\": \"true\",\n      \"aria-controls\": columnMenuId,\n      id: columnMenuButtonId,\n      children: /*#__PURE__*/_jsx(rootProps.components.ColumnMenuIcon, {\n        fontSize: \"small\"\n      })\n    })\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../GridMenu';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const currentColumn = apiRef.current.getColumn(field);\n  const hideMenu = React.useCallback(event => {\n    // Prevent triggering the sorting\n    event.stopPropagation();\n    apiRef.current.hideColumnMenu();\n  }, [apiRef]);\n\n  if (!target) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${currentColumn.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClickAway: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      currentColumn: currentColumn,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridColumnHeaderSortIcon } from './GridColumnHeaderSortIcon';\nimport { GridColumnHeaderTitle } from './GridColumnHeaderTitle';\nimport { GridColumnHeaderSeparator } from './GridColumnHeaderSeparator';\nimport { ColumnHeaderMenuIcon } from './ColumnHeaderMenuIcon';\nimport { GridColumnHeaderMenu } from '../menu/columnMenu/GridColumnHeaderMenu';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    column,\n    classes,\n    isDragging,\n    sortDirection,\n    showRightBorder,\n    filterItemsCounter\n  } = ownerState;\n  const isColumnSorted = sortDirection != null;\n  const isColumnFiltered = filterItemsCounter != null && filterItemsCounter > 0; // todo refactor to a prop on col isNumeric or ?? ie: coltype===price wont work\n\n  const isColumnNumeric = column.type === 'number';\n  const slots = {\n    root: ['columnHeader', column.headerAlign === 'left' && 'columnHeader--alignLeft', column.headerAlign === 'center' && 'columnHeader--alignCenter', column.headerAlign === 'right' && 'columnHeader--alignRight', column.sortable && 'columnHeader--sortable', isDragging && 'columnHeader--moving', isColumnSorted && 'columnHeader--sorted', isColumnFiltered && 'columnHeader--filtered', isColumnNumeric && 'columnHeader--numeric', showRightBorder && 'withBorder'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridColumnHeaderItem(props) {\n  var _apiRef$current$getRo, _column$sortingOrder, _rootProps$components, _column$headerName, _rootProps$components2;\n\n  const {\n    column,\n    columnMenuOpen,\n    colIndex,\n    headerHeight,\n    isResizing,\n    isLastColumn,\n    sortDirection,\n    sortIndex,\n    filterItemsCounter,\n    hasFocus,\n    tabIndex,\n    extendRowFullWidth,\n    disableReorder,\n    separatorSide\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const columnMenuId = useId();\n  const columnMenuButtonId = useId();\n  const iconButtonRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const {\n    hasScrollX,\n    hasScrollY\n  } = (_apiRef$current$getRo = apiRef.current.getRootDimensions()) != null ? _apiRef$current$getRo : {\n    hasScrollX: false,\n    hasScrollY: false\n  };\n  const isDraggable = React.useMemo(() => !rootProps.disableColumnReorder && !disableReorder && !column.disableReorder, [rootProps.disableColumnReorder, disableReorder, column.disableReorder]);\n  let headerComponent = null;\n\n  if (column.renderHeader) {\n    headerComponent = column.renderHeader(apiRef.current.getColumnHeaderParams(column.field));\n  }\n\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    }\n\n    apiRef.current.publishEvent(eventName, apiRef.current.getColumnHeaderParams(column.field), event);\n  }, [apiRef, column.field]);\n  const mouseEventsHandlers = {\n    onClick: publish('columnHeaderClick'),\n    onDoubleClick: publish('columnHeaderDoubleClick'),\n    onMouseOver: publish('columnHeaderOver'),\n    // TODO remove as it's not used\n    onMouseOut: publish('columnHeaderOut'),\n    // TODO remove as it's not used\n    onMouseEnter: publish('columnHeaderEnter'),\n    // TODO remove as it's not used\n    onMouseLeave: publish('columnHeaderLeave'),\n    // TODO remove as it's not used\n    onKeyDown: publish('columnHeaderKeyDown'),\n    onFocus: publish('columnHeaderFocus'),\n    onBlur: publish('columnHeaderBlur')\n  };\n  const draggableEventHandlers = isDraggable ? {\n    onDragStart: publish('columnHeaderDragStart'),\n    onDragEnter: publish('columnHeaderDragEnter'),\n    onDragOver: publish('columnHeaderDragOver'),\n    onDragEnd: publish('columnHeaderDragEnd')\n  } : null;\n  const removeLastBorderRight = isLastColumn && hasScrollX && !hasScrollY;\n  const showRightBorder = !isLastColumn ? rootProps.showColumnRightBorder : !removeLastBorderRight && !extendRowFullWidth;\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const width = column.computedWidth;\n  let ariaSort = 'none';\n\n  if (sortDirection != null) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  const handleExited = React.useCallback(() => {\n    setShowColumnMenuIcon(false);\n  }, []);\n\n  const columnMenuIconButton = !rootProps.disableColumnMenu && !column.disableColumnMenu && /*#__PURE__*/_jsx(ColumnHeaderMenuIcon, {\n    column: column,\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    open: showColumnMenuIcon,\n    iconButtonRef: iconButtonRef\n  });\n\n  const sortingOrder = (_column$sortingOrder = column.sortingOrder) != null ? _column$sortingOrder : rootProps.sortingOrder;\n\n  const columnTitleIconButtons = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [!rootProps.disableColumnFilter && /*#__PURE__*/_jsx(rootProps.components.ColumnHeaderFilterIconButton, _extends({\n      field: column.field,\n      counter: filterItemsCounter\n    }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.columnHeaderFilterIconButton)), column.sortable && !column.hideSortIcons && /*#__PURE__*/_jsx(GridColumnHeaderSortIcon, {\n      direction: sortDirection,\n      index: sortIndex,\n      sortingOrder: sortingOrder\n    })]\n  });\n\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus == null ? void 0 : elementToFocus.focus();\n      apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n    }\n  }, [apiRef, hasFocus]);\n  const headerClassName = typeof column.headerClassName === 'function' ? column.headerClassName({\n    field: column.field,\n    colDef: column\n  }) : column.headerClassName;\n  const label = (_column$headerName = column.headerName) != null ? _column$headerName : column.field;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: headerCellRef,\n    className: clsx(classes.root, headerClassName),\n    \"data-field\": column.field,\n    style: {\n      width,\n      minWidth: width,\n      maxWidth: width\n    },\n    role: \"columnheader\",\n    tabIndex: tabIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-sort\": ariaSort,\n    \"aria-label\": column.renderHeader && headerComponent == null ? label : undefined\n  }, mouseEventsHandlers, {\n    children: [/*#__PURE__*/_jsxs(\"div\", _extends({\n      className: classes.draggableContainer,\n      draggable: isDraggable\n    }, draggableEventHandlers, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.titleContainer,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: classes.titleContainerContent,\n          children: column.renderHeader ? headerComponent : /*#__PURE__*/_jsx(GridColumnHeaderTitle, {\n            label: label,\n            description: column.description,\n            columnWidth: width\n          })\n        }), columnTitleIconButtons]\n      }), columnMenuIconButton]\n    })), /*#__PURE__*/_jsx(GridColumnHeaderSeparator, {\n      resizable: !rootProps.disableColumnResize && !!column.resizable,\n      resizing: isResizing,\n      height: headerHeight,\n      onMouseDown: publish('columnSeparatorMouseDown'),\n      side: separatorSide\n    }), /*#__PURE__*/_jsx(GridColumnHeaderMenu, {\n      columnMenuId: columnMenuId,\n      columnMenuButtonId: columnMenuButtonId,\n      field: column.field,\n      open: columnMenuOpen,\n      target: iconButtonRef.current,\n      ContentComponent: rootProps.components.ColumnMenu,\n      contentComponentProps: (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.columnMenu,\n      onExited: handleExited\n    })]\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colIndex: PropTypes.number.isRequired,\n  column: PropTypes.object.isRequired,\n  columnMenuOpen: PropTypes.bool.isRequired,\n  disableReorder: PropTypes.bool,\n  extendRowFullWidth: PropTypes.bool.isRequired,\n  filterItemsCounter: PropTypes.number,\n  hasFocus: PropTypes.bool,\n  headerHeight: PropTypes.number.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  isLastColumn: PropTypes.bool.isRequired,\n  isResizing: PropTypes.bool.isRequired,\n  separatorSide: PropTypes.oneOf(['left', 'right']),\n  sortDirection: PropTypes.oneOf(['asc', 'desc']),\n  sortIndex: PropTypes.number,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired\n} : void 0;\nexport { GridColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { useForkRef } from '@mui/material/utils';\nimport { defaultMemoize } from 'reselect';\nimport { useGridApiContext } from '../../utils/useGridApiContext';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from '../columns/gridColumnsSelector';\nimport { gridTabIndexColumnHeaderSelector, gridTabIndexCellSelector, gridFocusColumnHeaderSelector } from '../focus/gridFocusStateSelector';\nimport { gridDensityHeaderHeightSelector } from '../density/densitySelector';\nimport { gridFilterActiveItemsLookupSelector } from '../filter/gridFilterSelector';\nimport { gridSortColumnLookupSelector } from '../sorting/gridSortingSelector';\nimport { gridColumnMenuSelector } from '../columnMenu/columnMenuSelector';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridColumnHeaderItem } from '../../../components/columnHeaders/GridColumnHeaderItem';\nimport { getFirstColumnIndexToRender } from '../columns/gridColumnsUtils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { getRenderableIndexes } from '../virtualization/useGridVirtualScroller';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction isUIEvent(event) {\n  return !!event.target;\n}\n\nexport const useGridColumnHeaders = props => {\n  const {\n    innerRef: innerRefProp,\n    minColumnIndex = 0\n  } = props;\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridApiContext();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const cellTabIndexState = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const columnHeaderFocus = useGridSelector(apiRef, gridFocusColumnHeaderSelector);\n  const headerHeight = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n  const filterColumnLookup = useGridSelector(apiRef, gridFilterActiveItemsLookupSelector);\n  const sortColumnLookup = useGridSelector(apiRef, gridSortColumnLookupSelector);\n  const columnMenuState = useGridSelector(apiRef, gridColumnMenuSelector);\n  const rootProps = useGridRootProps();\n  const innerRef = React.useRef(null);\n  const handleInnerRef = useForkRef(innerRefProp, innerRef);\n  const [renderContext, setRenderContext] = React.useState(null);\n  const prevRenderContext = React.useRef(renderContext);\n  const prevScrollLeft = React.useRef(0);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  React.useEffect(() => {\n    apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n  }, [apiRef]); // memoize `getFirstColumnIndexToRender`, since it's called on scroll\n\n  const getFirstColumnIndexToRenderRef = React.useRef(defaultMemoize(getFirstColumnIndexToRender, {\n    equalityCheck: (a, b) => ['firstColumnIndex', 'minColumnIndex', 'columnBuffer'].every(key => a[key] === b[key])\n  }));\n  const updateInnerPosition = React.useCallback(nextRenderContext => {\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const firstColumnToRender = getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex,\n      columnBuffer: rootProps.columnBuffer,\n      firstRowToRender,\n      lastRowToRender,\n      apiRef,\n      visibleRows: currentPage.rows\n    });\n    const offset = firstColumnToRender > 0 ? prevScrollLeft.current - columnPositions[firstColumnToRender] : prevScrollLeft.current;\n    innerRef.current.style.transform = `translate3d(${-offset}px, 0px, 0px)`;\n  }, [columnPositions, minColumnIndex, rootProps.columnBuffer, apiRef, currentPage.rows, rootProps.rowBuffer]);\n  React.useLayoutEffect(() => {\n    if (renderContext) {\n      updateInnerPosition(renderContext);\n    }\n  }, [renderContext, updateInnerPosition]);\n  const handleScroll = React.useCallback(({\n    left,\n    renderContext: nextRenderContext = null\n  }, event) => {\n    var _prevRenderContext$cu, _prevRenderContext$cu2;\n\n    if (!innerRef.current) {\n      return;\n    } // Ignore vertical scroll.\n    // Excepts the first event which sets the previous render context.\n\n\n    if (prevScrollLeft.current === left && ((_prevRenderContext$cu = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu.firstColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.firstColumnIndex) && ((_prevRenderContext$cu2 = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu2.lastColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.lastColumnIndex)) {\n      return;\n    }\n\n    prevScrollLeft.current = left; // We can only update the position when we guarantee that the render context has been\n    // rendered. This is achieved using ReactDOM.flushSync or when the context doesn't change.\n\n    let canUpdateInnerPosition = false;\n\n    if (nextRenderContext !== prevRenderContext.current || !prevRenderContext.current) {\n      // ReactDOM.flushSync cannot be called on `scroll` events fired inside effects\n      if (isUIEvent(event)) {\n        // To prevent flickering, the inner position can only be updated after the new context has\n        // been rendered. ReactDOM.flushSync ensures that the state changes will happen before\n        // updating the position.\n        ReactDOM.flushSync(() => {\n          setRenderContext(nextRenderContext);\n        });\n        canUpdateInnerPosition = true;\n      } else {\n        setRenderContext(nextRenderContext);\n      }\n\n      prevRenderContext.current = nextRenderContext;\n    } else {\n      canUpdateInnerPosition = true;\n    } // Pass directly the render context to avoid waiting for the next render\n\n\n    if (nextRenderContext && canUpdateInnerPosition) {\n      updateInnerPosition(nextRenderContext);\n    }\n  }, [updateInnerPosition]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n  useGridApiEventHandler(apiRef, 'rowsScroll', handleScroll);\n\n  const getColumns = (params, other = {}) => {\n    const {\n      renderContext: nextRenderContext = renderContext,\n      minFirstColumn = minColumnIndex,\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n\n    if (!nextRenderContext) {\n      return null;\n    }\n\n    const columns = [];\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const firstColumnToRender = getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex: minFirstColumn,\n      columnBuffer: rootProps.columnBuffer,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const lastColumnToRender = Math.min(nextRenderContext.lastColumnIndex + rootProps.columnBuffer, maxLastColumn);\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const column = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const hasTabbableElement = !(tabIndexState === null && cellTabIndexState === null);\n      const tabIndex = tabIndexState !== null && tabIndexState.field === column.field || isFirstColumn && !hasTabbableElement ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === column.field;\n      const open = columnMenuState.open && columnMenuState.field === column.field;\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[column.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[column.field] && filterColumnLookup[column.field].length,\n        headerHeight: headerHeight,\n        isDragging: column.field === dragCol,\n        column: column,\n        colIndex: columnIndex,\n        isResizing: resizeCol === column.field,\n        isLastColumn: columnIndex === visibleColumns.length - 1,\n        extendRowFullWidth: !rootProps.disableExtendRowFullWidth,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex\n      }, other), column.field));\n    }\n\n    return columns;\n  };\n\n  const rootStyle = {\n    minHeight: headerHeight,\n    maxHeight: headerHeight,\n    lineHeight: `${headerHeight}px`\n  };\n  return {\n    renderContext,\n    getColumns,\n    isDragging: !!dragCol,\n    getRootProps: (other = {}) => _extends({\n      style: rootStyle\n    }, other),\n    getInnerProps: () => ({\n      ref: handleInnerRef,\n      'aria-rowindex': 1,\n      role: 'row'\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useGridApiEventHandler } from '../hooks/utils/useGridApiEventHandler';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridDensityHeaderHeightSelector } from '../hooks/features/density/densitySelector';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLIFF = 1;\nconst SLOP = 1.5;\n\nconst useUtilityClasses = ownerState => {\n  const {\n    scrollDirection,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollArea', `scrollArea--${scrollDirection}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridScrollAreaRawRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ScrollArea',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['scrollArea--left']}`]: styles['scrollArea--left']\n  }, {\n    [`&.${gridClasses['scrollArea--right']}`]: styles['scrollArea--right']\n  }, styles.scrollArea]\n})(() => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 101,\n  width: 20,\n  bottom: 0,\n  [`&.${gridClasses['scrollArea--left']}`]: {\n    left: 0\n  },\n  [`&.${gridClasses['scrollArea--right']}`]: {\n    right: 0\n  }\n}));\n\nfunction GridScrollAreaRaw(props) {\n  const {\n    scrollDirection\n  } = props;\n  const rootRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const timeout = React.useRef();\n  const [dragging, setDragging] = React.useState(false);\n  const height = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n  const scrollPosition = React.useRef({\n    left: 0,\n    top: 0\n  });\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const handleScrolling = React.useCallback(newScrollPosition => {\n    scrollPosition.current = newScrollPosition;\n  }, []);\n  const handleDragOver = React.useCallback(event => {\n    let offset;\n\n    if (scrollDirection === 'left') {\n      offset = event.clientX - rootRef.current.getBoundingClientRect().right;\n    } else if (scrollDirection === 'right') {\n      offset = Math.max(1, event.clientX - rootRef.current.getBoundingClientRect().left);\n    } else {\n      throw new Error('MUI: Wrong drag direction');\n    }\n\n    offset = (offset - CLIFF) * SLOP + CLIFF;\n    clearTimeout(timeout.current); // Avoid freeze and inertia.\n\n    timeout.current = setTimeout(() => {\n      apiRef.current.scroll({\n        left: scrollPosition.current.left + offset,\n        top: scrollPosition.current.top\n      });\n    });\n  }, [scrollDirection, apiRef]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timeout.current);\n    };\n  }, []);\n  const toggleDragging = React.useCallback(() => {\n    setDragging(prevDragging => !prevDragging);\n  }, []);\n  useGridApiEventHandler(apiRef, 'rowsScroll', handleScrolling);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', toggleDragging);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', toggleDragging);\n  return dragging ? /*#__PURE__*/_jsx(GridScrollAreaRawRoot, {\n    ref: rootRef,\n    className: clsx(classes.root),\n    onDragOver: handleDragOver,\n    style: {\n      height\n    }\n  }) : null;\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridScrollAreaRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  scrollDirection: PropTypes.oneOf(['left', 'right']).isRequired\n} : void 0;\nconst GridScrollArea = /*#__PURE__*/React.memo(GridScrollAreaRaw);\nexport { GridScrollArea };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled, alpha, lighten, darken } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaders']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridColumnHeadersRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaders',\n  overridesResolver: (props, styles) => styles.columnHeaders\n})(({\n  theme\n}) => {\n  const borderColor = theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68);\n  return {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    overflow: 'hidden',\n    display: 'flex',\n    alignItems: 'center',\n    borderBottom: `1px solid ${borderColor}`,\n    borderTopLeftRadius: theme.shape.borderRadius,\n    borderTopRightRadius: theme.shape.borderRadius\n  };\n});\nexport const GridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridColumnHeadersRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root)\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"isDragging\", \"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { gridClasses, getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    isDragging,\n    hasScrollX,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeadersInner', isDragging && 'columnHeaderDropZone', hasScrollX && 'columnHeadersInner--scrollable']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridColumnHeadersInnerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'columnHeadersInner',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses.columnHeaderDropZone}`]: styles.columnHeaderDropZone\n  }, styles.columnHeadersInner]\n})(() => ({\n  display: 'flex',\n  alignItems: 'center',\n  [`&.${gridClasses.columnHeaderDropZone} .${gridClasses.columnHeaderDraggableContainer}`]: {\n    cursor: 'move'\n  },\n  [`&.${gridClasses['columnHeadersInner--scrollable']} .${gridClasses.columnHeader}:last-child`]: {\n    borderRight: 'none'\n  }\n}));\nexport const GridColumnHeadersInner = /*#__PURE__*/React.forwardRef(function GridColumnHeadersInner(props, ref) {\n  var _apiRef$current$getRo, _apiRef$current$getRo2;\n\n  const {\n    isDragging,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    isDragging,\n    hasScrollX: (_apiRef$current$getRo = (_apiRef$current$getRo2 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo2.hasScrollX) != null ? _apiRef$current$getRo : false,\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridColumnHeadersInnerRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root)\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"innerRef\", \"className\"];\nimport * as React from 'react';\nimport { useGridColumnHeaders } from '../hooks/features/columnHeaders/useGridColumnHeaders';\nimport { GridScrollArea } from './GridScrollArea';\nimport { GridColumnHeaders } from './columnHeaders/GridColumnHeaders';\nimport { GridColumnHeadersInner } from './columnHeaders/GridColumnHeadersInner';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const DataGridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnsHeader(props, ref) {\n  const {\n    innerRef\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    isDragging,\n    getRootProps,\n    getInnerProps,\n    getColumns\n  } = useGridColumnHeaders({\n    innerRef\n  });\n  return /*#__PURE__*/_jsxs(GridColumnHeaders, _extends({\n    ref: ref\n  }, getRootProps(other), {\n    children: [/*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"left\"\n    }), /*#__PURE__*/_jsx(GridColumnHeadersInner, _extends({\n      isDragging: isDragging\n    }, getInnerProps(), {\n      children: getColumns()\n    })), /*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"right\"\n    })]\n  }));\n});","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@mui/utils';\nimport { GridBody, GridErrorHandler, GridFooterPlaceholder, GridHeaderPlaceholder, GridRoot } from '../components';\nimport { GridContextProvider } from '../context/GridContextProvider';\nimport { useDataGridComponent } from './useDataGridComponent';\nimport { useDataGridProps, MAX_PAGE_SIZE } from './useDataGridProps';\nimport { DataGridVirtualScroller } from '../components/DataGridVirtualScroller';\nimport { DataGridColumnHeaders } from '../components/DataGridColumnHeaders';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DataGridRaw = /*#__PURE__*/React.forwardRef(function DataGrid(inProps, ref) {\n  const props = useDataGridProps(inProps);\n  const apiRef = useDataGridComponent(props);\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    apiRef: apiRef,\n    props: props,\n    children: /*#__PURE__*/_jsx(GridRoot, {\n      className: props.className,\n      style: props.style,\n      sx: props.sx,\n      ref: ref,\n      children: /*#__PURE__*/_jsxs(GridErrorHandler, {\n        children: [/*#__PURE__*/_jsx(GridHeaderPlaceholder, {}), /*#__PURE__*/_jsx(GridBody, {\n          ColumnHeadersComponent: DataGridColumnHeaders,\n          VirtualScrollerComponent: DataGridVirtualScroller\n        }), /*#__PURE__*/_jsx(GridFooterPlaceholder, {})]\n      })\n    })\n  });\n});\nexport const DataGrid = /*#__PURE__*/React.memo(DataGridRaw);\nDataGridRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The label of the grid.\n   */\n  'aria-label': PropTypes.string,\n\n  /**\n   * The id of the element containing a label for the grid.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * If `true`, the grid height is dynamic and follow the number of rows in the grid.\n   * @default false\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n\n  /**\n   * If `true`, the grid get a first column with a checkbox that allows to select rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * Number of extra columns to be rendered before/after the visible slice.\n   * @default 3\n   */\n  columnBuffer: PropTypes.number,\n\n  /**\n   * Set of columns of type [[GridColumns]].\n   */\n  columns: chainPropTypes(PropTypes.array.isRequired, props => {\n    // @ts-ignore because otherwise `build:api` doesn't work\n    if (props.columns && props.columns.some(column => column.resizable)) {\n      return new Error([`MUI: \\`column.resizable = true\\` is not a valid prop.`, 'Column resizing is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Number of rows from the `columnBuffer` that can be visible before a new slice is rendered.\n   * @default 3\n   */\n  columnThreshold: PropTypes.number,\n\n  /**\n   * Extend native column types with your new column types.\n   */\n  columnTypes: PropTypes.object,\n\n  /**\n   * Set the column visibility model of the grid.\n   * If defined, the grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n\n  /**\n   * Overrideable components.\n   */\n  components: PropTypes.object,\n\n  /**\n   * Overrideable components props dynamically passed to the component at rendering.\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * Set the density of the grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n\n  /**\n   * If `true`, rows will not be extended to fill the full width of the grid container.\n   * @default false\n   */\n  disableExtendRowFullWidth: PropTypes.bool,\n\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableSelectionOnClick: PropTypes.bool,\n\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n\n  /**\n   * Set the edit rows model of the grid.\n   */\n  editRowsModel: PropTypes.object,\n\n  /**\n   * An error that will turn the grid into its error state and display the error component.\n   */\n  error: PropTypes.any,\n\n  /**\n   * Features under development.\n   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    newEditingApi: PropTypes.bool,\n    preventCommitWhileValidating: PropTypes.bool,\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n\n  /**\n   * Set the filter model of the grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      columnField: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operatorValue: PropTypes.string,\n      value: PropTypes.any\n    })).isRequired,\n    linkOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n\n  /**\n   * Function that returns the estimated height for a row.\n   * Only works if dynamic row height is used.\n   * Once the row height is measured this value is discarded.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\n   */\n  getEstimatedRowHeight: PropTypes.func,\n\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\n   */\n  getRowHeight: PropTypes.func,\n\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n\n  /**\n   * Set the height in pixel of the column headers in the grid.\n   * @default 56\n   */\n  headerHeight: PropTypes.number,\n\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n\n  /**\n   * The initial state of the DataGrid.\n   * The data in it will be set in the state on initialization but will not be controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the cell is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n\n  /**\n   * If `true`, a  loading overlay is displayed.\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Set the locale text of the grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/grid/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"debug\"\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n\n  /**\n   * Callback fired when the cell changes are committed.\n   * @param {GridCellEditCommitParams} params With all properties from [[GridCellEditCommitParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellEditCommit: PropTypes.func,\n\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n\n  /**\n   * Callback fired when a cell loses focus.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellFocusOut: PropTypes.func,\n\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containig which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n\n  /**\n   * Callback fired when a column visibility changes.\n   * Only works when no `columnVisibilityModel` is provided and if we change the visibility of a single column at a time.\n   * @param {GridColumnVisibilityChangeParams} params With all properties from [[GridColumnVisibilityChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @deprecated Use `onColumnVisibilityModelChange` instead.\n   */\n  onColumnVisibilityChange: PropTypes.func,\n\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when the edit cell value changes.\n   * @param {GridEditCellPropsParams} params With all properties from [[GridEditCellPropsParams]].\n   * @param {MuiEvent<React.SyntheticEvent>} event The event that caused this prop to be called.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @deprecated use `preProcessEditCellProps` from the [`GridColDef`](/x/api/data-grid/grid-col-def/)\n   */\n  onEditCellPropsChange: PropTypes.func,\n\n  /**\n   * Callback fired when the `editRowsModel` changes.\n   * @param {GridEditRowsModel} editRowsModel With all properties from [[GridEditRowsModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onEditRowsModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when an exception is thrown in the grid.\n   * @param {any} args The arguments passed to the `showError` call.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onError: PropTypes.func,\n\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when the menu is closed.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuClose: PropTypes.func,\n\n  /**\n   * Callback fired when the menu is opened.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuOpen: PropTypes.func,\n\n  /**\n   * Callback fired when the current page has changed.\n   * @param {number} page Index of the page displayed on the Grid.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPageChange: PropTypes.func,\n\n  /**\n   * Callback fired when the page size has changed.\n   * @param {number} pageSize Size of the page displayed on the Grid.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPageSizeChange: PropTypes.func,\n\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n\n  /**\n   * Callback fired when the grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback fired when the row changes are committed.\n   * @param {GridRowId} id The row id.\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditCommit: PropTypes.func,\n\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containig which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridSelectionModel} selectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSelectionModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when the state of the grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @internal\n   */\n  onStateChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   * @default 0\n   */\n  page: PropTypes.number,\n\n  /**\n   * Set the number of rows in one page.\n   * If some of the rows have children (for instance in the tree data), this number represents the amount of top level rows wanted on each page.\n   * @default 100\n   */\n  pageSize: chainPropTypes(PropTypes.number, props => {\n    if (props.pageSize && props.pageSize > MAX_PAGE_SIZE) {\n      return new Error([`MUI: \\`<DataGrid pageSize={${props.pageSize}} />\\` is not a valid prop.`, `Only page size below ${MAX_PAGE_SIZE} is available in the MIT version.`, '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n\n    return null;\n  }),\n  pagination: props => {\n    if (props.pagination === false) {\n      return new Error(['MUI: `<DataGrid pagination={false} />` is not a valid prop.', 'Infinite scrolling is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to disable the pagination.'].join('\\n'));\n    }\n\n    return null;\n  },\n\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * Only applied if `props.experimentalFeatures.newEditingApi: true`.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n\n  /**\n   * Number of extra rows to be rendered before/after the visible slice.\n   * @default 3\n   */\n  rowBuffer: PropTypes.number,\n\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   */\n  rowCount: PropTypes.number,\n\n  /**\n   * Set the height in pixel of a row in the grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   */\n  rows: PropTypes.array.isRequired,\n\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.number),\n\n  /**\n   * Number of rows from the `rowBuffer` that can be visible before a new slice is rendered.\n   * @default 3\n   */\n  rowThreshold: PropTypes.number,\n\n  /**\n   * Override the height/width of the grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n\n  /**\n   * Set the selection model of the grid.\n   */\n  selectionModel: chainPropTypes(PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array]), props => {\n    if (!props.checkboxSelection && Array.isArray(props.selectionModel) && props.selectionModel.length > 1) {\n      return new Error([`MUI: \\`<DataGrid selectionModel={${JSON.stringify(props.selectionModel)}} />\\` is not a valid prop.`, 'selectionModel can only be of 1 item in DataGrid.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, the right border of the cells are displayed.\n   * @default false\n   */\n  showCellRightBorder: PropTypes.bool,\n\n  /**\n   * If `true`, the right border of the column headers are displayed.\n   * @default false\n   */\n  showColumnRightBorder: PropTypes.bool,\n\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n\n  /**\n   * Set the sort model of the grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n};","export default function chainPropTypes(propType1, propType2) {\n  if (process.env.NODE_ENV === 'production') {\n    return () => null;\n  }\n\n  return function validate(...args) {\n    return propType1(...args) || propType2(...args);\n  };\n}"],"names":["_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getFormControlLabelUtilityClasses","slot","generateUtilityClass","generateUtilityClasses","_excluded","FormControlLabelRoot","styled","name","overridesResolver","props","styles","ownerState","formControlLabelClasses","label","root","capitalize","labelPlacement","theme","_extends","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","flexDirection","color","vars","palette","text","disabled","React","inProps","ref","useThemeProps","className","componentsProps","control","disabledProp","disableTypography","labelProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","controlProps","forEach","key","fcs","formControlState","states","error","classes","slots","composeClasses","useUtilityClasses","type","Typography","_jsx","component","typography","children","_jsxs","clsx","createSvgIcon","r","e","t","f","n","Array","isArray","length","arguments","getDataGridUtilityClass","gridClasses","GridRootStyles","autoHeight","editBooleanCell","cell","cellContent","cellCheckbox","checkboxInput","columnHeader","columnHeaderCheckbox","columnHeaderDraggableContainer","columnHeaderTitleContainer","columnSeparator","filterIcon","iconSeparator","menuIcon","menuIconButton","menuOpen","menuList","row","rowReorderCellPlaceholder","rowReorderCell","sortIcon","withBorder","treeDataGroupingCell","treeDataGroupingCellToggle","detailPanelToggleCell","borderColor","mode","lighten","alpha","divider","darken","flex","boxSizing","position","border","borderRadius","shape","primary","body2","outline","height","borderBottomColor","lineHeight","padding","main","outlineWidth","outlineOffset","justifyContent","visibility","width","opacity","transition","transitions","create","duration","shorter","minWidth","whiteSpace","overflowX","overflow","fontSize","backgroundColor","action","hover","zIndex","left","right","touchAction","pointerEvents","breakInside","selectedOpacity","hoverOpacity","borderBottom","textOverflow","boxShadow","shadows","background","paper","secondary","gridGap","spacing","disabledOpacity","borderRight","alignSelf","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","i","createCacheKeyComparator","cache","equals","entry","get","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","buildWarning","message","gravity","alreadyWarned","cleanMessage","console","warn","wrapWithWarningOnCall","method","cacheContainer","args","selectorArgs","stateOrApiRef","instanceId","isApiRef","current","cacheKey","state","newSelector","reselectCreateSelector","Map","set","acceptsApiRef","gridColumnsSelector","columns","gridColumnFieldsSelector","columnsState","all","gridColumnLookupSelector","lookup","gridColumnDefinitionsSelector","allFields","field","gridColumnVisibilityModelSelector","columnVisibilityModel","gridVisibleColumnDefinitionsSelector","filter","column","gridColumnPositionsSelector","visibleColumns","positions","currentPosition","computedWidth","gridColumnsTotalWidthSelector","colCount","gridFilterableColumnDefinitionsSelector","col","filterable","gridFilterableColumnLookupSelector","reduce","acc","gridColumnsMetaSelector","totalWidth","useGridSelector","apiRef","isOutputSelector","GridApiContext","useGridApiContext","GridRootPropsContext","useGridRootProps","contextValue","gridRowsStateSelector","rows","gridRowCountSelector","totalRowCount","gridRowsLoadingSelector","loading","gridTopLevelRowCountSelector","totalTopLevelRowCount","gridRowsLookupSelector","idRowsLookup","gridRowsIdToIdLookupSelector","idToIdLookup","gridRowTreeSelector","tree","gridRowGroupingNameSelector","groupingName","gridRowTreeDepthSelector","treeDepth","gridRowIdsSelector","ids","gridDensitySelector","density","gridDensityValueSelector","gridDensityRowHeightSelector","rowHeight","gridDensityHeaderHeightSelector","headerHeight","gridDensityFactorSelector","factor","GridRoot","rootProps","densityValue","rootContainerRef","handleRef","useForkRef","rootElementRef","mountedState","setMountedState","useEnhancedEffect","unstable_updateGridDimensionsRef","role","disableMultipleSelection","useGridLogger","logger","newLogger","getLogger","GridMainContainerRoot","flexGrow","GridMainContainer","ErrorBoundary","errorInfo","this","api","logError","showError","_this$state","hasError","render","componentProps","GridErrorHandler","errorProps","_rootProps$components","components","ErrorOverlay","errorOverlay","GridHeaderPlaceholder","headerRef","Header","header","createDetectElementResize","nonce","hostWindow","resetTriggers","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollLeft","scrollWidth","scrollTop","scrollHeight","style","offsetWidth","offsetHeight","scrollListener","target","indexOf","__resizeRAF__","cancelAnimationFrame","requestAnimationFrame","__resizeLast__","checkTriggers","__resizeListeners__","fn","call","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","document","createElement","animationName","toLowerCase","animationKeyframes","animationStyle","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","getElementById","css","head","getElementsByTagName","id","setAttribute","styleSheet","cssText","appendChild","createTextNode","createStyles","innerHTML","addEventListener","__animationListener__","removeResizeListener","removeEventListener","removeChild","GridAutoSizer","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","setState","rootRef","parentElement","handleResize","useEventCallback","computedStyle","ownerWindow","paddingLeft","parseInt","paddingRight","newHeight","paddingTop","paddingBottom","newWidth","_parentElement$curren","win","detectElementResize","outerStyle","childParams","gridSortingStateSelector","sorting","gridSortedRowIdsSelector","sortingState","sortedRows","gridSortedRowEntriesSelector","sortedIds","model","gridSortModelSelector","sortModel","gridSortColumnLookupSelector","res","sortItem","index","sortDirection","sort","sortIndex","gridFilterStateSelector","gridFilterModelSelector","filterState","filterModel","gridVisibleRowsLookupSelector","quickFilterValues","visibleRowsLookup","gridFilteredRowsLookupSelector","filteredRowsLookup","gridVisibleSortedRowEntriesSelector","filteredDescendantCountLookup","gridVisibleSortedRowIdsSelector","visibleSortedRowEntries","gridFilteredSortedRowEntriesSelector","gridFilteredSortedRowIdsSelector","filteredSortedRowEntries","gridVisibleSortedTopLevelRowEntriesSelector","visibleSortedRows","rowTree","rowTreeDepth","_rowTree$row$id","depth","gridVisibleRowCountSelector","gridVisibleTopLevelRowCountSelector","visibleSortedTopLevelRows","gridFilterActiveItemsSelector","columnLookup","_filterModel$items","items","item","_column$filterOperato","_item$value","columnField","filterOperators","filterOperator","operator","operatorValue","InputComponent","toString","gridFilterActiveItemsLookupSelector","activeFilters","filterItem","GridOverlayWrapper","_viewportInnerSize$he","_viewportInnerSize$wi","_apiRef$current$getRo","_apiRef$current$getRo2","getRootDimensions","viewportInnerSize","setViewportInnerSize","handleViewportSizeChange","_apiRef$current$getRo3","_apiRef$current$getRo4","subscribeEvent","top","bottom","GridOverlays","_rootProps$components2","_rootProps$components3","visibleRowCount","showNoResultsOverlay","overlay","NoRowsOverlay","noRowsOverlay","NoResultsOverlay","noResultsOverlay","LoadingOverlay","loadingOverlay","GridBody","VirtualScrollerComponent","ColumnHeadersComponent","disableVirtualization","isVirtualizationDisabled","setIsVirtualizationDisabled","enableVirtualization","unstable_disableVirtualization","unstable_enableVirtualization","columnHeadersRef","columnsContainerRef","windowRef","renderingZoneRef","columnHeadersContainerElementRef","columnHeadersElementRef","size","publishEvent","innerRef","marginTop","GridFooterPlaceholder","footerRef","hideFooter","Footer","footer","GridContextProvider","Provider","isFunction","localStorageAvailable","window","localStorage","setItem","removeItem","err","escapeRegExp","replace","clamp","min","max","Math","isDeepEqual","constructor","entriesA","from","has","entryA","Set","ArrayBuffer","isView","RegExp","source","flags","valueOf","prototype","keys","hasOwnProperty","forceDebug","getItem","noop","noopLogger","debug","info","LOG_LEVELS","getAppender","logLevel","appender","minLogLevelIdx","loggerObj","idx","useGridApiMethod","apiMethods","apiName","apiMethodsRef","apiMethodsNames","installMethods","methodName","GridSignature","CLEANUP_TIMER_LOOP_MILLIS","TimerBasedCleanupTracking","timeout","timeouts","cleanupTimeout","object","unsubscribe","unregisterToken","setTimeout","delete","cleanupToken","clearTimeout","unregister","FinalizationRegistryBasedCleanupTracking","registry","FinalizationRegistry","register","ObjectToBeRetainedByReact","registryContainer","useGridApiEventHandler","cleanupTokensCounter","eventName","handler","options","objectRetainedByReact","subscription","handlerRef","cleanupTokenRef","event","details","_handlerRef$current","defaultMuiPrevented","_subscription$current","_handlerRef$current2","_subscription$current2","createUseGridApiEventHandler","optionsSubscriberOptions","isFirst","useGridApiOptionHandler","EventManager","maxListeners","warnOnce","events","listener","collection","highPriority","regular","highPriorityListeners","regularListeners","that","on","oneTimeListener","removeListener","isSyntheticEvent","isPropagationStopped","globalId","_toPropertyKey","arg","input","hint","prim","Symbol","toPrimitive","TypeError","String","Number","GRID_DEFAULT_STRATEGY","GRID_STRATEGIES_PROCESSORS","rowTreeCreation","filtering","useGridInitialization","inputApiRef","unstable_eventManager","unstable_caches","signature","DataGridPro","emit","useGridApiInitialization","useGridLoggerFactory","handleError","useGridErrorHandler","controlStateMapRef","rawForceUpdate","registerControlState","controlStateItem","stateId","others","reason","newState","ignoreSetState","updatedControlStateIds","controlState","oldSubState","stateSelector","newSubState","hasPropChanged","propModel","el","propOnChange","changeEvent","updateControlState","previousState","forceUpdate","unstable_updateControlState","unstable_registerControlState","useGridStateInitialization","processorsCache","runAppliers","groupCache","values","appliers","callback","registerPipeProcessor","group","processor","processors","registerPipeApplier","applier","_appliers","otherAppliers","requestPipeProcessorsApplication","applyPipeProcessors","context","preProcessor","unstable_registerPipeProcessor","unstable_registerPipeApplier","unstable_requestPipeProcessorsApplication","unstable_applyPipeProcessors","useGridPipeProcessing","availableStrategies","strategiesCache","registerStrategyProcessor","strategyName","processorName","cleanup","_ref","otherProcessors","groupPreProcessors","previousProcessor","unstable_getActiveStrategy","applyStrategyProcessor","activeStrategy","getActiveStrategy","strategyGroup","_availableStrategyEnt","availableStrategyEntry","strategy","isAvailable","setStrategyAvailability","unstable_registerStrategyProcessor","unstable_applyStrategyProcessor","unstable_setStrategyAvailability","useGridStrategyProcessing","getLocaleText","localeText","useGridLocaleText","useGridInitializeState","initializer","isInitialized","writeToClipboardPolyfill","data","span","userSelect","textContent","body","range","createRange","selectNode","selection","getSelection","removeAllRanges","addRange","execCommand","useGridClipboard","copySelectedRowsToClipboard","includeHeaders","getSelectedRows","getDataAsCsv","delimiter","navigator","clipboard","writeText","catch","handleKeydown","_window$getSelection","isModifierKeyPressed","ctrlKey","metaKey","altKey","fromCharCode","keyCode","unstable_copySelectedRowsToClipboard","added","setAdded","wrapHandler","targetElement","boundElem","useGridNativeEventListener","gridColumnMenuSelector","columnMenu","columnMenuStateInitializer","open","useFirstRender","isFirstRender","useGridRegisterPipeProcessor","round","random","registerPreProcessor","useGridRegisterPipeApplier","GridArrowUpwardIcon","GridArrowDownwardIcon","GridKeyboardArrowRight","GridExpandMoreIcon","GridFilterListIcon","GridFilterAltIcon","GridSearchIcon","GridColumnIcon","GridSeparatorIcon","GridViewHeadlineIcon","GridTableRowsIcon","GridViewStreamIcon","GridTripleDotsVerticalIcon","GridCloseIcon","GridAddIcon","GridRemoveIcon","GridLoadIcon","GridDragIcon","GridSaveAltIcon","GridCheckIcon","GridMoreVertIcon","getValueFromOption","option","getValueFromValueOptions","valueOptions","result","optionValue","renderSingleSelectOptions","OptionComponent","valueFormatter","isOptionTypeObject","formattedValue","content","GridFilterInputValue","_baseSelectProps$nati","applyValue","focusElementRef","filterTimeout","filterValueState","setFilterValueState","applying","setIsApplying","useId","isSelectNative","baseSelect","native","singleSelectProps","select","SelectProps","getColumn","MenuItem","onFilterChange","columnValueOptions","_item$value2","itemValue","InputProps","endAdornment","BaseTextField","placeholder","onChange","variant","InputLabelProps","shrink","inputRef","baseTextField","GridEditInputCellRoot","InputBase","editInputCell","GridEditInputCell","_rootProps$experiment","colDef","hasFocus","debounceMs","experimentalFeatures","newEditingApi","isProcessingProps","onValueChange","valueState","setValueState","handleChange","newValue","setEditCellValue","focus","fullWidth","sortModelDisableMultiColumnsSortingWarning","sanitizeSortModel","disableMultipleColumnsSorting","mergeStateWithSortModel","getNextGridSortDirection","sortingOrder","currentIdx","gridNillComparator","v1","v2","collator","Intl","Collator","gridNumberComparator","value1","value2","nillResult","gridDateComparator","stripDiacritics","string","normalize","createFilterOptions","config","ignoreAccents","ignoreCase","limit","matchFrom","stringify","trim","inputValue","getOptionLabel","filteredOptions","candidate","slice","array","comp","defaultFilterOptions","useAutocomplete","autoComplete","autoHighlight","autoSelect","blurOnSelect","clearOnBlur","freeSolo","clearOnEscape","componentName","defaultValue","multiple","disableClearable","disableCloseOnSelect","disabledItemsFocusable","disableListWrap","filterOptions","filterSelectedOptions","getOptionDisabled","getOptionLabelProp","_option$label","isOptionEqualToValue","groupBy","handleHomeEndKeys","idProp","includeInputInList","inputValueProp","onClose","onHighlightChange","onInputChange","onOpen","openProp","openOnFocus","readOnly","selectOnFocus","valueProp","optionLabel","ignoreFocus","firstFocus","listboxRef","anchorEl","setAnchorEl","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","useControlled","controlled","setInputValueState","focused","setFocused","resetInputValue","newInputValue","prevValue","valueChange","setOpenState","inputPristine","setInputPristine","inputValueIsSelectedValue","popupOpen","some","listboxAvailable","focusTag","tagToFocus","querySelector","setHighlightedIndex","removeAttribute","classList","remove","listboxNode","add","clientHeight","scrollBottom","elementBottom","offsetTop","changeHighlightedIndex","diff","direction","nextIndex","nextFocus","nextFocusDisabled","getAttribute","hasAttribute","validOptionIndex","maxIndex","newIndex","abs","getNextIndex","setSelectionRange","syncHighlightedIndex","valueItem","currentOption","val","itemIndex","optionItem","handleListboxRef","node","setRef","handleOpen","handleClose","handleValue","isTouch","selectNewValue","reasonProp","origin","blur","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","onKeyDown","which","preventDefault","stopPropagation","handleFocus","handleBlur","contains","activeElement","handleInputChange","handleOptionMouseOver","currentTarget","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","handleInputMouseDown","dirty","groupedOptions","getRootProps","onMouseDown","onClick","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","autoCapitalize","spellCheck","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","onDelete","getListboxProps","getOptionProps","selected","onMouseOver","onTouchStart","getAutocompleteUtilityClass","_ClearIcon","_ArrowDropDownIcon","AutocompleteRoot","hasClearIcon","hasPopupIcon","inputFocused","autocompleteClasses","tag","inputRoot","margin","maxWidth","flexWrap","inputClasses","inputBaseClasses","outlinedInputClasses","filledInputClasses","AutocompleteEndAdornment","AutocompleteClearIndicator","IconButton","clearIndicator","AutocompletePopupIndicator","popupIndicator","popupIndicatorOpen","transform","AutocompletePopper","Popper","popper","disablePortal","popperDisablePortal","modal","AutocompletePaper","Paper","body1","AutocompleteLoading","AutocompleteNoOptions","noOptions","AutocompleteListbox","listbox","listStyle","maxHeight","minHeight","breakpoints","up","mainChannel","focusOpacity","AutocompleteGroupLabel","ListSubheader","groupLabel","AutocompleteGroupUl","groupUl","_componentsProps$clea","_componentsProps$pape","startAdornment","ChipProps","clearIcon","ClearIcon","clearText","closeText","forcePopupIcon","getLimitTagsText","more","limitTags","ListboxComponent","ListboxProps","loadingText","noOptionsText","openText","PaperComponent","PopperComponent","popupIcon","ArrowDropDownIcon","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","getCustomizedTagProps","Chip","props2","renderListOption","optionProps","title","inputProps","as","clientWidth","option2","index2","GridFilterInputMultipleValue","helperText","TextFieldProps","Autocomplete","GRID_STRING_COL_DEF","Infinity","hide","hideable","sortable","resizable","groupable","pinnable","editable","sortComparator","compare","align","disableTrim","getApplyFilterFn","filterItemValue","filterRegex","test","sensitivity","usage","filterValue","getGridStringOperators","renderEditCell","getApplyQuickFilterFn","columnValue","parseNumericValue","getGridNumericOperators","isNaN","InputComponentProps","includes","GRID_NUMERIC_COL_DEF","headerAlign","valueParser","isNumber","toLocaleString","GridFilterInputDate","dateRegex","dateTimeRegex","buildApplyFilterFn","compareFn","showTime","keepHours","match","year","month","day","hour","minute","time","Date","getTime","valueAsDate","timeToCompare","setHours","getHours","getMinutes","getGridDateOperators","GridEditDateCell","isDateTime","valueTransformed","parsedDate","formattedDate","getTimezoneOffset","toISOString","substr","parsed","formatted","newFormattedDate","newParsedDate","date","setFullYear","hours","minutes","_valueTransformed$par","_state$parsed","renderEditDateCell","GRID_DATE_COL_DEF","toLocaleDateString","GRID_DATETIME_COL_DEF","GridBooleanCell","Icon","BooleanCellTrueIcon","BooleanCellFalseIcon","titleAccess","Boolean","GridEditBooleanCell","checked","BaseCheckbox","baseCheckbox","GridFilterInputBoolean","displayEmpty","GridEditModes","GridCellModes","GridRowModes","GRID_BOOLEAN_COL_DEF","renderCell","rowNode","isAutoGenerated","valueAsBoolean","isEscapeKey","isEnterKey","isTabKey","isSpaceKey","isDeleteKeys","isPrintableKey","GRID_CELL_EXIT_EDIT_MODE_KEYS","GRID_CELL_EDIT_COMMIT_KEYS","isCellExitEditModeKeys","isCellEditCommitKeys","isNavigationKey","isHomeOrEndKeys","isArrowKeys","isPageKeys","isKeyboardEvent","GridEditSingleSelectCell","valueOptionsFormatted","editMode","setOpen","formattedTargetValue","isValid","Row","Promise","resolve","commitCellChange","setCellMode","getCellParams","BaseSelect","MenuProps","_rootProps$experiment2","stopCellEditMode","ignoreModifications","GridFilterInputSingleSelect","currentColumn","currentValueOptions","_itemValue","GridFilterInputMultipleSingleSelect","resolvedColumn","resolvedValueOptions","resolvedFormattedValueOptions","filterValueOptionFormatter","filterValues","formattedElement","formatedOption","parseObjectValue","GRID_SINGLE_SELECT_COL_DEF","filterItemValues","potentialValues","iterableColumnValues","mapEventPropToEvent","eventProp","substring","disableReactTree","mouseEvent","onClickAway","touchEvent","movedRef","nodeRef","activatedRef","syntheticEventRef","handleClickAway","insideReactTree","documentElement","clientX","clientY","clickedRootScrollbar","composedPath","createHandleSynthetic","handlerName","childrenPropsHandler","childrenProps","mappedTouchEvent","handleTouchMove","mappedMouseEvent","GridMenuRoot","menu","transformOrigin","GridMenu","onExited","prevTarget","prevOpen","BasePopper","placement","basePopper","popperOnExited","TransitionProps","ClickAwayListener","Grow","GridActionsCell","focusedButtonIndex","setFocusedButtonIndex","buttonRef","ignoreCallToFocus","touchRippleRefs","menuId","buttonId","stop","getActions","hasActions","getRowParams","iconButtons","showInMenu","menuButtons","numberOfButtons","hideMenu","handleTouchRippleRef","instance","handleButtonClick","button","touchRippleRef","MoreActionsIcon","MenuList","autoFocusItem","GRID_ACTIONS_COLUMN_TYPE","GRID_ACTIONS_COL_DEF","headerName","disableColumnMenu","disableExport","DEFAULT_GRID_COL_TYPE_KEY","getGridDefaultColumnTypes","number","dateTime","boolean","singleSelect","COLUMNS_DIMENSION_PROPERTIES","computeColumnTypes","customColumnTypes","mergedColumnTypes","colType","colTypeDef","extendType","GridPreferencePanelsValue","hydrateColumnsWidth","rawState","viewportInnerWidth","columnsLookup","totalFlexUnits","widthAllocatedBeforeFlex","flexColumns","newColumn","initialFreeSpace","computedColumnWidths","flexColumnsLookup","frozenFields","freeze","frozen","loopOverFlexItems","violationsLookup","remainingFreeSpace","flexUnits","totalViolation","computeFlexColumnsWidth","createColumnsState","_apiRef$current","columnsStateWithoutColumnVisibilityModel","columnsToUpsert","initialState","columnTypes","currentColumnVisibilityModel","shouldRegenColumnVisibilityModelFromColumns","keepOnlyColumnsToUpsert","isInsideStateInitializer","currentState","columnsToKeep","columnsToUpsertLookup","existingState","getGridColDef","hasBeenResized","columnsLookupBeforePreProcessing","columnsStateWithPreProcessing","hasModelChanged","newColumnVisibilityModel","isVisibleBefore","isVisibleAfter","columnsStateWithPortableColumns","orderedFields","dimensions","columnsWithUpdatedDimensions","orderedFieldsLookup","cleanOrderedFields","newOrderedFields","newColumnLookup","newColDef","applyInitialState","mergeColumnsState","getFirstNonSpannedColumnToRender","firstColumnToRender","firstRowToRender","lastRowToRender","visibleRows","firstNonSpannedColumnToRender","rowId","cellColSpanInfo","unstable_getCellColSpanInfo","spannedByColSpan","leftVisibleCellIndex","getFirstColumnIndexToRender","firstColumnIndex","minColumnIndex","columnBuffer","GridDensityTypes","columnsStateInitializer","_props$initialState","_props$initialState$c","_props$initialState2","_props$columnVisibili","_props$initialState3","_props$initialState3$","isUsingColumnVisibilityModel","columnsTypes","getUpdatedDensityState","newDensity","newHeaderHeight","newRowHeight","Compact","floor","Comfortable","densityStateInitializer","GridCellCheckboxForwardRef","isChecked","checkboxElement","rippleRef","getCellElement","_checkboxElement$curr","shiftKey","isSelectable","isRowSelectable","GridCellCheckboxRenderer","gridFocusStateSelector","gridFocusCellSelector","focusState","gridFocusColumnHeaderSelector","gridTabIndexStateSelector","gridTabIndexCellSelector","gridTabIndexColumnHeaderSelector","gridSelectionStateSelector","selectedGridRowsCountSelector","selectedGridRowsSelector","selectedRows","rowsLookup","selectedIdsLookupSelector","gridPaginationSelector","pagination","gridPageSelector","page","gridPageSizeSelector","pageSize","gridPaginationRowRangeSelector","pageCount","visibleSortedTopLevelRowEntries","visibleTopLevelRowCount","topLevelFirstRowIndex","topLevelLastRowIndex","firstRowIndex","lastRowIndex","topLevelFirstRow","topLevelRowsInCurrentPageCount","topLevelRowAdded","gridPaginatedVisibleSortedGridRowEntriesSelector","paginationRange","gridPaginatedVisibleSortedGridRowIdsSelector","visibleSortedRowIds","GridHeaderCheckbox","tabIndexState","visibleRowIds","paginatedVisibleRowIds","filteredSelection","getRow","selectionCandidates","checkboxSelectionVisibleOnly","currentSelectionSize","isIndeterminate","getColumnHeaderElement","handleSelectionChange","p","indeterminate","GRID_CHECKBOX_SELECTION_FIELD","GRID_CHECKBOX_SELECTION_COL_DEF","disableReorder","valueGetter","renderHeader","serializeCellValue","delimiterCharacter","buildCSV","rowIds","CSVBody","cellParams","serializeRow","CSVHead","GridLinkOperator","getColumnsToExport","fields","allColumns","defaultGetRowsToExport","filteredSortedRowIds","GridCsvExportMenuItem","exportDataAsCsv","GridPrintExportMenuItem","exportDataAsPrint","useGridCsvExport","_options$getRowsToExp","_options$includeHeade","exportedColumns","getRowsToExport","exportedRowIds","csv","blob","extension","filename","fullName","HTMLAnchorElement","url","URL","createObjectURL","href","download","click","revokeObjectURL","exportAs","Blob","utf8WithBom","Uint8Array","fileName","addExportMenuButtons","initialValue","_options$csvOptions","csvOptions","disableToolbarButton","gridRowsMetaSelector","rowsMeta","GridFeatureModeConstant","getDefaultGridFilterModel","linkOperator","And","quickFilterLogicOperator","useGridRegisterStrategyProcessor","cleanFilterItem","cleanItem","filterModelDisableMultiColumnsFilteringWarning","filterModelMissingItemIdWarning","filterModelMissingItemOperatorWarning","sanitizeFilterModel","disableMultipleColumnsFiltering","hasSeveralItems","hasItemsWithoutIds","hasItemWithoutOperator","mergeStateWithFilterModel","filteringState","buildAggregatedFilterApplier","isRowMatchingFilterItems","parsedValue","_filterItem$value","parser","x","newFilterItem","applyFilterOnRow","shouldApplyFilter","filteredAppliers","buildAggregatedFilterItemsApplier","isRowMatchingQuickFilter","columnsFields","appliersPerColumnField","sanitizedQuickFilterValues","usedCellParams","columnsFieldsToFilter","_appliersPerColumnFie","_appliersPerColumnFie2","_appliersPerColumnFie3","_appliersPerColumnFie4","buildAggregatedQuickFilterApplier","filterStateInitializer","_props$filterModel","_props$initialState$f","getVisibleRows","paginationMode","useGridVisibleRows","response","focusStateInitializer","GRID_DETAIL_PANEL_TOGGLE_FIELD","defaultPageSize","autoPageSize","mergeStateWithPageSize","getPageCount","rowCount","ceil","applyValidPage","paginationState","mergeStateWithPage","paginationStateInitializer","_props$initialState$p","_props$page","_props$initialState2$","_props$rowCount","_props$rowCount2","useGridPagination","onPageSizeChange","setPageSize","stateExportPreProcessing","prevState","pageSizeToExport","stateRestorePreProcessing","_context$stateToResto","stateToRestore","handleUpdateAutoPageSize","maximumPageSizeWithoutScrollBar","useGridPageSize","onPageChange","setPage","pageToExport","_context$stateToResto2","scrollToIndexes","rowIndex","useGridPage","gridPreferencePanelStateSelector","preferencePanel","preferencePanelStateInitializer","gridEditRowsStateSelector","editRows","isPromise","promise","then","GridCellEditStartReasons","GridCellEditStopReasons","editingStateInitializer","useGridEditing","_props$experimentalFe2","buildCallback","Cell","getCellMode","newEditRowsState","Edit","getCellValue","editRowsState","View","_props$experimentalFe","unstable_runPendingEditCellValueMutation","getEditRowsModel","editCellProps","preventCommitWhileValidating","cellProps","isValidating","commitParams","preProcessEditCellProps","newEditCellProps","unstable_setEditCellProps","setCellEditingEditCellValue","unstable_parseValue","newEditCellPropsProcessed","unstable_setCellEditingEditCellValue","handleCellKeyDown","cellMode","isEditable","isEditMode","handleCellDoubleClick","commitPropsAndExit","handleCellFocusOut","handleColumnHeaderDragStart","handleCellEditStart","handleCellEditStop","setCellFocus","handleCellEditCommit","rowUpdate","valueSetter","updateRows","handleEditCellPropsChange","onCellEditCommit","onCellEditStart","onCellEditStop","useCellEditing","_props$experimentalFe4","focusTimeout","nextFocusedCell","setRowMode","getRowMode","commitRowChange","editRowProps","fieldsWithValidator","validatorErrors","errors","setRowEditingEditCellValue","editRow","unstable_setRowEditingEditCellValue","rowParams","_props$experimentalFe3","handleRowEditStart","handleRowEditStop","handleRowEditCommit","handleCellFocusIn","_nextFocusedCell$curr","onRowEditCommit","onRowEditStart","onRowEditStop","useGridRowEditing","debounceMap","editRowsModel","onEditRowsModelChange","isCellEditable","maybeDebounce","runPendingEditCellValueMutation","debouncedField","newParams","parseValue","setEditCellProps","editProps","setEditRowsModel","preventTextSelection","isMoreThanOneClick","detail","onEditCellPropsChange","GridRowEditStartReasons","GridRowEditStopReasons","_excluded2","missingOnProcessRowUpdateErrorWarning","cellModesModel","setCellModesModel","prevCellModesModel","processRowUpdate","onProcessRowUpdateError","cellModesModelProp","onCellModesModelChange","runIfEditModeIsCell","throwIfNotEditable","throwIfNotInMode","cellDoubleClick","cellFocusOut","escapeKeyDown","enterKeyDown","shiftTabKeyDown","tabKeyDown","printableKeyDown","deleteKeyDown","startCellEditModeParams","deleteValue","startCellEditMode","cellToFocusAfter","editingState","updateCellModesModel","newModel","isNewModelDifferentFromProp","updateFieldInCellModesModel","newProps","_cellModesModel$id","otherFields","updateOrDeleteFieldState","newEditingState","updateStateToStartCellEditMode","updateStateToStopCellEditMode","finishCellEditMode","unstable_moveFocusToRelativeCell","unstable_getRowWithUpdatedValuesFromCellEditing","errorThrown","finalRowUpdate","hasChanged","getRowWithUpdatedValuesFromCellEditing","copyOfPrevCellModes","_copyOfPrevCellModes$","_copyOfPrevCellModes$2","_idToIdLookup$id","prevMode","originalId","useGridCellEditing","rowModesModel","setRowModesModel","prevRowModesModel","rowModesModelProp","onRowModesModelChange","runIfEditModeIsRow","rowFocusOut","columnFields","startRowEditModeParams","fieldToFocus","startRowEditMode","fieldProps","stopRowEditMode","updateRowModesModel","updateRowInRowModesModel","updateOrDeleteRowState","updateStateToStartRowEditMode","shouldDeleteValue","updateStateToStopRowEditMode","focusedField","finishRowEditMode","unstable_getRowWithUpdatedValuesFromRowEditing","promises","_editingState$id","otherFieldsProps","processedProps","thisField","fieldColumn","_editingState$id2","getRowWithUpdatedValuesFromRowEditing","copyOfPrevRowModesModel","_copyOfPrevRowModesMo","isCellEditableProp","debounces","runCallback","setEditCellValueToCall","getRowWithUpdatedValues","unstable_getRowWithUpdatedValues","getRowIdFromRowModel","rowModel","getRowId","detailErrorMessage","JSON","checkGridRowIdIsValid","createRowsInternalCache","rowsBeforePartialUpdates","loadingPropBeforePartialUpdates","getRowsStateFromCache","previousTree","rowCountProp","loadingProp","_apiRef$current$unsta","cacheForGrouping","groupingResponse","processedGroupingResponse","dataTopLevelRowCount","parent","groupingResponseBeforeRowHydration","getTreeNodeDescendants","parentId","skipAutoGeneratedRows","_tree$parentId","validDescendants","child","childNode","rowsStateInitializer","useGridRows","currentPage","lastUpdateMs","now","throttledRowsChange","newCache","throttle","run","throttleRemainingTimeMs","throttleRowsMs","setRows","updates","DataGrid","uniqUpdates","update","deletedRowIds","prevCache","partialRow","_action","getRowModels","allRows","getRowsCount","getAllRowIds","getRowIndexRelativeToVisibleRows","setRowChildrenExpansion","isExpanded","currentNode","getRowNode","newNode","childrenExpanded","_gridRowTreeSelector$","getRowGroupChildren","groupId","applySorting","applyFiltering","groupNode","sortedRowIds","startIndex","childId","rowApi","setRowIndex","targetIndex","oldIndex","updatedRows","groupRows","handleStrategyProcessorChange","handleStrategyActivityChange","applyHydrateRowsProcessor","areNewRowsAlreadyInState","isNewLoadingAlreadyInState","flatRowTreeCreationMethod","groupingKey","groupingField","findParentElementFromClassName","elem","closest","escapeOperandAttributeSelector","operand","getGridRowElement","useGridParamsApi","getColumnHeaderParams","getCellValueWithDeprecationWarning","getAllColumns","getValue","getBaseCellParams","cellFocus","cellTabIndex","getGridColumnHeaderElement","getRowElement","getGridCellElement","getSelectionModelPropValue","selectionModelProp","prevSelectionModel","selectionStateInitializer","_getSelectionModelPro","selectionModel","useGridSelectionPreProcessors","updateSelectionColumn","selectionColumn","cellClassName","headerClassName","shouldHaveSelectionColumn","checkboxSelection","haveSelectionColumn","sortingStateInitializer","_props$sortModel","_props$initialState$s","scrollIntoView","cachedSupportsPreventScroll","rowsMetaStateInitializer","currentPageTotalHeight","useDataGridComponent","useGridRowsPreProcessors","editingStateInitializer_new","editingStateInitializer_old","goToCell","colIndex","_visibleSortedRows$ro","closestColumnToUse","nextCellColSpanInfo","rightVisibleCellIndex","getVisibleColumns","goToHeader","setColumnHeaderFocus","handleCellNavigationKeyDown","viewportPageSize","unstable_getViewportPageSize","colIndexBefore","getColumnIndex","rowIndexBefore","firstRowIndexInPage","lastRowIndexInPage","lastColIndex","shouldPreventDefault","nextRowIndex","handleColumnHeaderKeyDown","_currentPage$range$fi","_currentPage$range","_currentPage$range$la","_currentPage$range2","headerTitleNode","toggleColumnMenu","useGridKeyboardNavigation","propSelectionModel","lastRowToggled","onSelectionModelChange","disableSelectionOnClick","canHaveMultipleSelection","expandMouseRowRangeSelection","_lastRowToggled$curre","endId","startId","isSelected","isRowSelected","endIndex","selectRowRange","setSelectionModel","selectRow","resetSelection","newSelection","selectRows","selectableIds","selectionLookup","allPagesRowIds","start","end","rowsBetweenStartAndEnd","removeOutdatedSelection","keepNonExistentRowsSelected","currentSelection","handleSingleRowSelection","hasCtrlKey","isMultipleSelectionDisabled","handleCellClick","preventSelectionOnShift","handleRowSelectionCheckboxChange","nativeEvent","handleHeaderSelectionCheckboxChange","rowsToBeSelected","focusCell","isNextRowSelected","newRowIndex","previousRowIndex","isStateControlled","currentPageRowsLookup","firstSelectableRow","useGridSelection","_props$componentsProp2","previousColumnsProp","previousColumnTypesProp","onColumnVisibilityModelChange","setGridColumnsState","getColumnsMeta","getColumnPosition","setColumnVisibilityModel","updateColumns","updateColumn","setColumnVisibility","isVisible","_columnVisibilityMode","setColumnIndex","targetIndexPosition","oldIndexPosition","updatedColumns","fieldRemoved","setColumnWidth","columnsStateToExport","columnVisibilityModelToExport","colDefDimensions","propertyName","propertyValue","columnVisibilityModelToImport","preferencePanelPreProcessing","_props$componentsProp","ColumnsPanel","columnsPanel","prevInnerWidth","onColumnVisibilityChange","hydrateColumns","useGridColumns","setCellColSpanInfo","columnIndex","sizes","getCellColSpanInfo","_lookup$current$rowId","calculateCellColSpan","minFirstColumnIndex","maxLastColumnIndex","columnsLength","colSpan","j","nextColumnIndex","calculateColSpan","minFirstColumn","maxLastColumn","unstable_calculateColSpan","handleColumnReorderChange","useGridColumnSpanning","useGridEditing_new","useGridEditing_old","lastClickedCell","focusedCell","moveFocusToRelativeCell","columnIndexToFocus","rowIndexToFocus","rowToFocus","columnToFocus","handleColumnHeaderFocus","handleCellMouseUp","handleDocumentClick","cellElement","handleCellModeChange","handleRowSet","useGridFocus","hideTimeout","immediateTimeout","hidePreferences","preferencePanelState","openedPanelValue","doNotHidePanel","hidePreferencesDelayed","showPreferences","preferencePanelToExport","useGridPreferencesPanel","onFilterModelChange","updateFilteredRows","isRowMatchingFilters","filterMode","filteringResult","applyFilters","upsertFilterItem","setFilterModel","upsertFilterItems","existingItems","deleteFilterItem","itemToDelete","showFilterPanel","targetColumnField","newFilterItems","filterItemsWithValue","filters","hideFilterPanel","setFilterLinkOperator","setQuickFilterValues","unstable_applyFilters","getVisibleRowModels","filterModelToExport","callbacks","FilterPanel","filterPanel","flatFilteringMethod","handleColumnsChange","filterableColumnsLookup","useGridFilter","onSortModelChange","upsertSortModel","existingIdx","c","newSortModel","createSortItem","directionOverride","_col$sortingOrder2","existing","_col$sortingOrder","nextSort","sortingMode","sortRowList","comparatorList","getSortCellParams","parseSortItem","rowList","parsedSortItems","row1Params","row2Params","sortCellParams1","sortCellParams2","buildAggregatedSortingApplier","setSortModel","sortColumn","allowMultipleSorting","getSortModel","getSortedRows","getSortedRowIds","getRowIndex","getRowIdFromRowIndex","sortModelToExport","flatSortingMethod","handleColumnHeaderClick","latestColumns","useGridSorting","setDensity","currentDensityState","newDensityState","useGridDensity","getRowHeightProp","getRowHeight","getRowSpacing","getEstimatedRowHeight","rowsHeightLookup","lastMeasuredRowIndex","hasRowWithAutoHeight","rowHeightFromDensity","hydrateRowsMeta","densityFactor","base","isResized","needsFirstMeasurement","baseRowHeight","existingBaseRowHeight","rowHeightFromUser","estimatedRowHeight","initialHeights","_spacing$top","_spacing$bottom","indexRelativeToCurrentPage","isFirstVisible","isLastVisible","spacingTop","spacingBottom","processedSizes","acc2","setRowHeight","debouncedHydrateRowsMeta","debounce","storeMeasuredRowHeight","needsHydration","rowHasAutoHeight","_rowsHeightLookup$cur2","getLastMeasuredRowIndex","setLastMeasuredRowIndex","unstable_getLastMeasuredRowIndex","unstable_setLastMeasuredRowIndex","unstable_rowHasAutoHeight","unstable_getRowHeight","unstable_getRowInternalSizes","_rowsHeightLookup$cur","unstable_setRowHeight","unstable_storeRowHeightMeasurement","useGridRowsMeta","colRef","scrollCoordinates","cellWidth","columnPositions","_visibleSortedRows$pa","elementIndex","targetOffsetHeight","scroll","getScrollPosition","useGridScroll","showColumnMenu","hideColumnMenu","relatedTarget","columnMenuLostFocus","columnMenuItemLostFocus","useGridColumnMenu","previousGridState","previousColumnVisibility","updateGridColumnsForPrint","exportedColumnFields","buildPrintWindow","iframeEl","src","location","handlePrintWindowLoad","printWindow","_printWindow$contentW","_querySelector","_querySelector2","normalizeOptions","copyStyles","hideToolbar","onload","printDoc","contentDocument","contentWindow","gridRootElement","gridClone","cloneNode","gridCloneViewport","_gridClone$querySelec","_gridClone$querySelec2","gridToolbarElementHeight","gridFooterElementHeight","defaultPageStyle","pageStyle","styleElement","bodyClassName","headStyleElements","querySelectorAll","tagName","newHeadStyleElements","sheet","styleCSS","cssRules","attributes","attr","nodeName","nodeValue","print","handlePrintWindowAfterPrint","_previousGridState$cu","_previousGridState$cu2","restoreState","exportState","onafterprint","_options$printOptions","printOptions","useGridPrintExport","errorShown","rootDimensionsRef","fullDimensionsRef","updateGridDimensionsRef","_apiRef$current$rootE","rootElement","columnsTotalWidth","scrollBarSize","viewportOuterSize","hasScrollX","hasScrollY","scrollbarSize","scrollDiv","scrollInformation","container","hasScrollXIfNoYScrollBar","hasScrollYIfNoXScrollBar","hasScroll","newFullDimensions","prevDimensions","resize","getViewportPageSize","renderContext","unstable_getRenderContext","debounceResize","isFirstSizing","isJSDOM","userAgent","useGridDimensions","onColumnHeaderClick","onColumnHeaderDoubleClick","onColumnHeaderOver","onColumnHeaderOut","onColumnHeaderEnter","onColumnHeaderLeave","onColumnOrderChange","onCellClick","onCellDoubleClick","onCellKeyDown","onCellFocusOut","onPreferencePanelClose","onPreferencePanelOpen","onMenuOpen","onMenuClose","onRowDoubleClick","onRowClick","onError","onStateChange","useGridEvents","useGridStatePersistence","GRID_DEFAULT_LOCALE_TEXT","noRowsLabel","noResultsOverlayLabel","errorOverlayDefaultLabel","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","toolbarColumns","toolbarColumnsLabel","toolbarFilters","toolbarFiltersLabel","toolbarFiltersTooltipHide","toolbarFiltersTooltipShow","toolbarFiltersTooltipActive","count","toolbarQuickFilterPlaceholder","toolbarQuickFilterLabel","toolbarQuickFilterDeleteIconLabel","toolbarExport","toolbarExportLabel","toolbarExportCSV","toolbarExportPrint","toolbarExportExcel","columnsPanelTextFieldLabel","columnsPanelTextFieldPlaceholder","columnsPanelDragIconLabel","columnsPanelShowAllButton","columnsPanelHideAllButton","filterPanelAddFilter","filterPanelDeleteIconLabel","filterPanelLinkOperator","filterPanelOperators","filterPanelOperatorAnd","filterPanelOperatorOr","filterPanelColumns","filterPanelInputLabel","filterPanelInputPlaceholder","filterOperatorContains","filterOperatorEquals","filterOperatorStartsWith","filterOperatorEndsWith","filterOperatorIs","filterOperatorNot","filterOperatorAfter","filterOperatorOnOrAfter","filterOperatorBefore","filterOperatorOnOrBefore","filterOperatorIsEmpty","filterOperatorIsNotEmpty","filterOperatorIsAnyOf","filterValueAny","filterValueTrue","filterValueFalse","columnMenuLabel","columnMenuShowColumns","columnMenuFilter","columnMenuHideColumn","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnHeaderFiltersTooltipActive","columnHeaderFiltersLabel","columnHeaderSortIconLabel","footerRowSelected","footerTotalRows","footerTotalVisibleRows","visibleCount","totalCount","checkboxSelectionHeaderName","checkboxSelectionSelectAllRows","checkboxSelectionUnselectAllRows","checkboxSelectionSelectRow","checkboxSelectionUnselectRow","booleanCellTrueLabel","booleanCellFalseLabel","actionsCellMore","pinToLeft","pinToRight","unpin","treeDataGroupingHeaderName","treeDataExpand","treeDataCollapse","groupingColumnHeaderName","groupColumn","unGroupColumn","detailPanelToggle","expandDetailPanel","collapseDetailPanel","MuiTablePagination","rowReorderingHeaderName","GridIconButtonContainerRoot","iconButtonContainer","GridIconButtonContainer","GridColumnMenuContainer","labelledby","handleListKeyDown","autoFocus","GridColumnsMenuItem","showColumns","disableColumnSelector","GridFilterMenuItem","showFilter","disableColumnFilter","HideGridColMenuItem","timeoutRef","toggleColumn","SortGridMenuItems","onSortMenuItemClick","GridColumnMenu","defaultButtons","preProcessedButtons","GridRowCountRoot","GridRowCount","GridSelectedRowCountRoot","selectedRowCount","GridSelectedRowCount","rowSelectedText","GridFooterContainerRoot","footerContainer","borderTop","GridFooterContainer","GridFooter","selectedRowCountElement","hideFooterSelectedRowCount","rowCountElement","hideFooterRowCount","paginationElement","hideFooterPagination","Pagination","GridHeader","PreferencesPanel","preferencesPanel","Toolbar","toolbar","GridPreferencesPanel","_preferencePanelState","panelContent","Panel","panel","GridOverlayRoot","GridOverlay","GridLoadingOverlay","CircularProgress","GridNoRowsOverlay","GridPaginationRoot","TablePagination","tablePaginationClasses","GridPagination","_rootProps$rowsPerPag","lastPage","handlePageSizeChange","newPageSize","handlePageChange","rowsPerPageOptions","rowsPerPage","onRowsPerPageChange","GridPanelContentRoot","GridPanelContent","GridPanelFooterRoot","panelFooter","GridPanelFooter","GridPanelWrapperRoot","panelWrapper","isEnabled","GridPanelWrapper","TrapFocus","disableEnforceFocus","GridFilterFormRoot","filterForm","FilterFormDeleteIcon","FormControl","_","filterFormDeleteIcon","flexShrink","marginBottom","FilterFormLinkOperatorInput","filterFormLinkOperatorInput","FilterFormColumnInput","filterFormColumnInput","FilterFormOperatorInput","filterFormOperatorInput","FilterFormValueInput","filterFormValueInput","getLinkOperatorLocaleKey","Or","getColumnLabel","GridFilterForm","_rootProps$components4","_rootProps$components5","_currentColumn$filter2","hasMultipleFilters","deleteFilter","applyFilterChanges","multiFilterOperator","showMultiFilterOperators","disableMultiFilterOperator","applyMultiFilterOperatorChanges","linkOperators","columnsSort","deleteIconProps","linkOperatorInputProps","operatorInputProps","columnInputProps","valueInputProps","filterableColumns","columnSelectId","columnSelectLabelId","operatorSelectId","operatorSelectLabelId","deleteIcon","linkOperatorInput","columnInput","operatorInput","valueInput","valueRef","filterSelectorRef","hasLinkOperatorColumn","baseFormControlProps","baseFormControl","isBaseSelectNative","valueInputPropsOther","sortedFilterableColumns","currentOperator","_currentColumn$filter","changeColumn","newOperator","eraseItemValue","changeOperator","changeLinkOperator","_valueRef$current","BaseFormControl","FilterPanelDeleteIcon","sx","InputLabel","labelId","GridFilterPanel","lastFilterRef","filterFormProps","applyFilter","applyFilterLinkOperator","getDefaultItem","firstColumnWithOperator","_colDef$filterOperato","defaultItem","shouldCloseFilterPanel","BaseButton","startIcon","baseButton","GridPanelHeaderRoot","panelHeader","GridPanelHeader","experimentalEnabled","process","GRID_EXPERIMENTAL_ENABLED","GridColumnsPanelRoot","GridColumnsPanelRowRoot","columnsPanelRow","switchClasses","GridIconButtonRoot","gridPanelClasses","GridPanelRoot","GridPaperRoot","GridPanel","_apiRef$current$colum","isPlaced","setIsPlaced","modifiers","enabled","phase","effect","elevation","EmptyCell","GridColumnUnsortedIcon","ColumnSortedAscendingIcon","ColumnSortedDescendingIcon","defaultLabel","GridNoResultsOverlay","DEFAULT_GRID_ICON_SLOTS_COMPONENTS","ColumnMenuIcon","OpenFilterButtonIcon","ColumnFilteredIcon","ColumnSelectorIcon","ColumnUnsortedIcon","ColumnResizeIcon","DensityCompactIcon","DensityStandardIcon","DensityComfortableIcon","ExportIcon","TreeDataCollapseIcon","TreeDataExpandIcon","GroupingCriteriaCollapseIcon","GroupingCriteriaExpandIcon","DetailPanelExpandIcon","DetailPanelCollapseIcon","RowReorderIcon","QuickFilterIcon","QuickFilterClearIcon","DATA_GRID_DEFAULT_SLOTS_COMPONENTS","MUICheckbox","MUITextField","MUIFormControl","MUISelect","BaseSwitch","MUISwitch","MUIButton","BaseTooltip","MUITooltip","MUIPopper","showRightBorder","disableDragEvents","onDoubleClick","onMouseUp","onDragEnter","onDragOver","valueToRender","cellRef","publishMouseUp","publish","propHandler","focusableElement","elementToFocus","preventScroll","scrollPosition","managesOwnFocus","draggableEventHandlers","ColumnHeaderFilterIconButton","counter","icon","toggleFilter","iconButton","enterDelay","baseTooltip","Badge","badgeContent","ColumnMenu","searchInputRef","searchValue","setSearchValue","toggleAllColumns","fromEntries","handleSearchValueChange","currentColumns","searchValueToCheck","FormControlLabel","baseSwitch","disableColumnReorder","draggable","styleProp","renderedColumns","containerWidth","onMouseEnter","onMouseLeave","ariaRowIndex","editing","ResizeObserver","resizeObserver","borderBoxSize","blockSize","contentRect","observe","disconnect","nodeType","publishClick","rowSpacingType","rowClassName","getRowClassName","cells","indexRelativeToAllColumns","isLastColumn","disableExtendRowFullWidth","showCellRightBorder","classNames","rowReordering","_rootProps$classes","editCellState","_rootProps$classes2","updatedRow","getCellClassName","emptyCellWidth","DATA_GRID_FORCED_PROPS","disableColumnResize","DATA_GRID_PROPS_DEFAULT_VALUES","rowBuffer","columnThreshold","rowThreshold","Standard","disableDensitySelector","showColumnRightBorder","VirtualScrollerRoot","virtualScroller","GridVirtualScroller","VirtualScrollerContentRoot","virtualScrollerContent","GridVirtualScrollerContent","overflowedContent","VirtualScrollerRenderZoneRoot","virtualScrollerRenderZone","GridVirtualScrollerRenderZone","binarySearch","offset","sliceStart","sliceEnd","pivot","itemOffset","getRenderableIndexes","firstIndex","lastIndex","buffer","minFirstIndex","maxLastIndex","useGridVirtualScroller","onRenderZonePositioning","renderZoneMinColumnIndex","renderZoneMaxColumnIndex","getRowProps","selectedRowsLookup","renderZoneRef","setRenderContext","prevRenderContext","setContainerWidth","prevTotalWidth","getNearestIndexToRender","lastMeasuredIndex","interval","exponentialSearch","computeRenderContext","lastColumnIndex","updateRenderZonePosition","nextRenderContext","updateRenderContext","initialRenderContext","handleScroll","topRowsScrolledSincePreviousRender","bottomRowsScrolledSincePreviousRender","topColumnsScrolledSincePreviousRender","bottomColumnsScrolledSincePreviousRender","shouldSetState","ReactDOM","handleWheel","needsHorizontalScrollbar","contentSize","shouldExtendContent","rootStyle","overflowY","getRenderContext","getRows","availableSpace","ignoreAutoHeight","renderedRows","initialFirstColumnToRender","lastColumnToRender","lastVisibleRowIndex","onScroll","onWheel","onTouchMove","getContentProps","getRenderZoneProps","DataGridVirtualScroller","GridColumnHeaderSortIconRaw","iconElement","icons","iconProps","getIcon","GridColumnHeaderSortIcon","GridColumnHeaderTitleRoot","columnHeaderTitle","fontWeight","fontWeightMedium","ColumnHeaderInnerTitle","GridColumnHeaderTitle","description","columnWidth","titleRef","tooltip","setTooltip","isOver","GridColumnHeaderSeparatorSides","GridColumnHeaderSeparatorRaw","side","Right","resizing","stopClick","GridColumnHeaderSeparator","ColumnHeaderMenuIcon","columnMenuId","columnMenuButtonId","iconButtonRef","handleMenuIconClick","GridColumnHeaderMenu","ContentComponent","contentComponentProps","GridColumnHeaderItem","_column$sortingOrder","_column$headerName","columnMenuOpen","isResizing","filterItemsCounter","extendRowFullWidth","separatorSide","headerCellRef","showColumnMenuIcon","setShowColumnMenuIcon","isDraggable","headerComponent","mouseEventsHandlers","onMouseOut","onDragStart","onDragEnd","isDragging","isColumnSorted","isColumnFiltered","isColumnNumeric","draggableContainer","titleContainer","titleContainerContent","ariaSort","handleExited","columnMenuIconButton","columnTitleIconButtons","columnHeaderFilterIconButton","hideSortIcons","columnMenuState","GridScrollAreaRawRoot","scrollArea","GridScrollAreaRaw","scrollDirection","dragging","setDragging","handleScrolling","newScrollPosition","handleDragOver","getBoundingClientRect","toggleDragging","prevDragging","GridScrollArea","GridColumnHeadersRoot","columnHeaders","borderTopLeftRadius","borderTopRightRadius","GridColumnHeaders","GridColumnHeadersInnerRoot","columnHeaderDropZone","columnHeadersInner","GridColumnHeadersInner","DataGridColumnHeaders","innerRefProp","dragCol","setDragCol","resizeCol","setResizeCol","cellTabIndexState","columnHeaderFocus","filterColumnLookup","sortColumnLookup","handleInnerRef","prevScrollLeft","getFirstColumnIndexToRenderRef","updateInnerPosition","_prevRenderContext$cu","_prevRenderContext$cu2","canUpdateInnerPosition","isUIEvent","handleColumnResizeStart","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","getColumns","isFirstColumn","hasTabbableElement","getInnerProps","useGridColumnHeaders","DataGridRaw","themedProps","overrides","mergedComponents","defaultComponent","useDataGridProps","propTypes","PropTypes","warnIfFocusStateIsNotSynced","isRequired","getDetailPanelContent"],"sourceRoot":""}