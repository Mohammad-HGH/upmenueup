{"version":3,"file":"static/js/814.2a9562ce.chunk.js","mappings":"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","sources":["components/modules/pages/admin/CreateMenu.tsx","components/modules/shared/BottomNav.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport BottomNav from '../../shared/BottomNav';\nimport { Helmet } from 'react-helmet-async';\nimport Alert from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\nimport {\n  Container,\n  Grid,\n  Card,\n  Divider,\n  Typography,\n  Box,\n  Button,\n  IconButton,\n  Modal,\n  Backdrop,\n  Fade,\n  useTheme,\n  InputLabel,\n  InputAdornment,\n  FormControl,\n  OutlinedInput,\n  Tooltip\n} from '@mui/material';\nimport Footer from 'src/components/modules/shared/Footer';\nimport TextField from '@mui/material/TextField';\nimport { Form } from 'antd';\n\n// Import Swiper React components\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\n// import required modules\nimport { Pagination } from 'swiper';\n// import { IOSwitch } from '../../interfaces/CustomizedSwitches';\n// import MyButton from '../../interfaces/Button/MyButton';\n\nimport { DataGrid, GridApi, GridColDef } from '@mui/x-data-grid';\nimport DeleteSweepIcon from '@mui/icons-material/DeleteSweep';\nimport DoneIcon from '@mui/icons-material/Done';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DoneOutlineIcon from '@mui/icons-material/DoneOutline';\nimport AddTaskIcon from '@mui/icons-material/AddTask';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch, { SwitchProps } from '@mui/material/Switch';\nimport { useContext } from 'react';\nimport ProgressContext from 'src/contexts/ProgressContext';\nimport images from 'src/importer';\nimport toast, { Toaster } from 'react-hot-toast';\n\nconst CreateMenu: React.FunctionComponent = () => {\n  const [foodList, setFoodList] = useState([]);\n  const progressContext = useContext(ProgressContext);\n  const [form] = Form.useForm();\n  const theme = useTheme();\n\n  const [open, setOpen] = useState(false);\n  const [ID, setID] = useState(0);\n\n  const ErrAlert = styled(Alert)`\n    border: 1px solid red;\n    color: ${theme.palette.mode === 'dark' ? '#FF1943' : 'red'};\n    background-color: ${theme.palette.mode === 'dark'\n      ? 'rgba(122, 2, 2, 0.3)'\n      : '#fbaaaa'};\n    justify-content: center;\n\n    svg {\n      color: ${theme.palette.mode === 'dark' ? '#FF1943' : 'red'};\n      padding-top: 1px;\n    }\n  `;\n  const MyAlert = styled(Alert)`\n    border: 1px solid green;\n    color: rgb(187, 233, 166);\n    background-color: rgba(17, 57, 0, 0.3);\n  `;\n\n  const MyDataGrid = styled(DataGrid)`\n    .MuiDataGrid-row:hover {\n      background-color: rgb(140 124 240 / 8%);\n    }\n    .MuiDataGrid-columnHeader:focus,\n    .MuiDataGrid-cell:focus,\n    .MuiDataGrid-columnHeader:focus-within,\n    .MuiDataGrid-cell:focus-within {\n      outline: solid transparent 1px !important;\n    }\n  `;\n\n  const style = {\n    position: 'absolute' as 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4\n  };\n\n  //* call on form submit\n  const onFinish = (values: any) => {\n    let valuesWithIdGenerator = {\n      id: foodList.length,\n      ...values\n    };\n\n    setFoodList((foodList) => [...foodList, valuesWithIdGenerator]);\n    form.resetFields();\n  };\n\n  const sendMenu = () => {\n    progressContext.onMenu(true);\n    toast.success('form submitted successfully!');\n    console.log(foodList);\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    toast.error('Failed:', errorInfo);\n  };\n\n  const columns: GridColDef[] = [\n    {\n      field: 'action',\n      headerName: 'Action',\n      sortable: false,\n      width: 100,\n      renderCell: (params) => {\n        const deleteHandler = (e: { stopPropagation: () => void }) => {\n          e.stopPropagation(); // don't select this row after clicking\n          setOpen(true);\n          const api: GridApi = params.api;\n          api\n            .getAllColumns()\n            .filter((c) => c.field !== '__check__' && !!c)\n            .forEach(() => {\n              setID(params.row.id);\n            });\n        };\n\n        return (\n          <Box display=\"flex\" flexDirection=\"row\">\n            <Tooltip title=\"Delete Order\" arrow>\n              <IconButton\n                sx={{\n                  '&:hover': {\n                    background: 'rgba(255, 25, 67, 0.25)'\n                  },\n                  color: '#FF1943'\n                }}\n                onClick={deleteHandler}\n                color=\"error\"\n                size=\"small\"\n              >\n                <DeleteSweepIcon fontSize=\"small\" />\n              </IconButton>\n            </Tooltip>\n          </Box>\n        );\n      }\n    },\n    { field: 'id', headerName: 'ID', width: 50 },\n    {\n      field: 'productName',\n      editable: true,\n      headerName: 'Product Name',\n      width: 180\n    },\n    { field: 'category', editable: true, headerName: 'Category', width: 130 },\n    { field: 'price', editable: true, headerName: 'Price', width: 100 },\n    {\n      field: 'description',\n      editable: true,\n      headerName: 'Description',\n      width: 330\n    }\n  ];\n  const handleCellEditCommit = React.useCallback(\n    ({ id, field, value }) => {\n      if (field === 'productName') {\n        const productName = value.toString();\n        const updatedRows = foodList.map((row) => {\n          if (row.id === id) {\n            return { ...row, productName };\n          }\n          return row;\n        });\n        setFoodList(updatedRows);\n      } else if (field === 'category') {\n        const category = value.toString();\n        const updatedRows = foodList.map((row) => {\n          if (row.id === id) {\n            return { ...row, category };\n          }\n          return row;\n        });\n        setFoodList(updatedRows);\n      } else if (field === 'price') {\n        const price = value.toString();\n        const updatedRows = foodList.map((row) => {\n          if (row.id === id) {\n            return { ...row, price };\n          }\n          return row;\n        });\n        setFoodList(updatedRows);\n      } else if (field === 'description') {\n        const description = value.toString();\n        const updatedRows = foodList.map((row) => {\n          if (row.id === id) {\n            return { ...row, description };\n          }\n          return row;\n        });\n        setFoodList(updatedRows);\n      }\n    },\n    [foodList]\n  );\n\n  const IOSSwitch = styled((props: SwitchProps) => (\n    <Switch\n      focusVisibleClassName=\".Mui-focusVisible\"\n      disableRipple\n      {...props}\n    />\n  ))(({ theme }) => ({\n    width: 42,\n    height: 26,\n    padding: 0,\n    '& .MuiSwitch-switchBase': {\n      padding: 0,\n      margin: 2,\n      transitionDuration: '300ms',\n      '&.Mui-checked': {\n        transform: 'translateX(16px)',\n        color: '#fff',\n        '& + .MuiSwitch-track': {\n          backgroundColor: '#57CA22 !important',\n          opacity: 1,\n          border: 0\n        },\n        '&.Mui-disabled + .MuiSwitch-track': {\n          opacity: 0.5\n        }\n      },\n      '&.Mui-focusVisible .MuiSwitch-thumb': {\n        color: '#57CA22',\n        border: '6px solid #fff'\n      },\n\n      '&.Mui-disabled + .MuiSwitch-track': {\n        opacity: 0.3\n      }\n    },\n    '& .MuiSwitch-thumb': {\n      boxSizing: 'border-box',\n      width: 22,\n      height: 22\n    },\n    '& .MuiSwitch-track': {\n      borderRadius: 26 / 2,\n      backgroundColor: '#FF1943',\n      opacity: 1\n    }\n  }));\n\n  const removeConfirmation = () => {\n    let newFoodList = [...foodList];\n    newFoodList = newFoodList.filter((food) => food.id !== ID);\n    setFoodList(newFoodList);\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Toaster />\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        open={open}\n        onClose={() => {\n          setOpen(false);\n        }}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500\n        }}\n      >\n        <Fade in={open}>\n          <Box sx={style}>\n            <Stack>\n              <ErrAlert severity=\"error\">Pay attention</ErrAlert>\n            </Stack>\n\n            <Typography\n              id=\"transition-modal-description\"\n              sx={{ mt: 2, textAlign: 'center' }}\n            >\n              Are you sure you want to delete this item?\n            </Typography>\n\n            <Stack direction=\"row\" justifyContent=\"center\" spacing={2} pt={4}>\n              <Tooltip title=\"Confirm deletion\" arrow>\n                <IconButton\n                  onClick={removeConfirmation}\n                  sx={{ ml: 1 }}\n                  color=\"success\"\n                >\n                  <DoneIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Deny removal\" arrow>\n                <IconButton\n                  onClick={() => {\n                    setOpen(false);\n                  }}\n                  sx={{ ml: 1 }}\n                  color=\"error\"\n                >\n                  <CloseIcon />\n                </IconButton>\n              </Tooltip>\n            </Stack>\n          </Box>\n        </Fade>\n      </Modal>\n      <Helmet>\n        <title>صفحه ساخت منو</title>\n      </Helmet>\n      <Container maxWidth=\"lg\">\n        <Box pt={3} pb={5}>\n          <Stack sx={{ width: '100%' }} spacing={2}>\n            <MyAlert severity=\"success\">\n              Well done! You successfully read this important alert message.\n            </MyAlert>\n          </Stack>\n        </Box>\n\n        <Grid container spacing={5}>\n          <Grid item xs={12} md={6}>\n            <Card variant=\"outlined\">\n              <Grid\n                container\n                direction=\"column\"\n                justifyContent=\"left\"\n                alignItems=\"stretch\"\n                spacing={0}\n              >\n                <Box pt={2} pb={2} pl={2}>\n                  <Typography variant=\"h3\">Add Product Form</Typography>\n                </Box>\n                <Divider />\n                <Box pt={3} pb={2} pl={2} pr={2}>\n                  <Form\n                    form={form}\n                    name=\"control-hooks\"\n                    wrapperCol={{ span: 12 }}\n                    initialValues={{ remember: true }}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    autoComplete=\"on\"\n                  >\n                    <Box\n                      display=\"flex\"\n                      flexDirection=\"column\"\n                      textAlign=\"justify\"\n                      pt={1}\n                      pb={1}\n                    >\n                      <Form.Item\n                        name=\"productName\"\n                        rules={[{ message: 'Please input your product name!' }]}\n                        style={{ paddingTop: '10px' }}\n                      >\n                        <TextField\n                          value={''}\n                          label=\"Product name\"\n                          type=\"text\"\n                          fullWidth\n                        />\n                      </Form.Item>\n                    </Box>\n\n                    <Box\n                      display=\"flex\"\n                      flexDirection=\"row\"\n                      textAlign=\"justify\"\n                      pb={1}\n                    >\n                      <Grid container columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                        <Grid item xs={6}>\n                          <Form.Item\n                            name=\"category\"\n                            rules={[{ message: 'Please input your Category!' }]}\n                            style={{ paddingTop: '10px' }}\n                          >\n                            <TextField\n                              label=\"Category\"\n                              type=\"text\"\n                              fullWidth\n                              value={''}\n                            />\n                          </Form.Item>\n                        </Grid>\n                        <Grid item xs={6}>\n                          <Form.Item\n                            name=\"price\"\n                            rules={[{ message: 'Please input your Price!' }]}\n                            style={{ paddingTop: '10px' }}\n                          >\n                            <FormControl variant=\"outlined\">\n                              <InputLabel>Price</InputLabel>\n                              <OutlinedInput\n                                type=\"text\"\n                                endAdornment={\n                                  <InputAdornment position=\"end\">\n                                    تومان\n                                  </InputAdornment>\n                                }\n                                label=\"Price\"\n                              />\n                            </FormControl>\n                          </Form.Item>\n                        </Grid>\n                      </Grid>\n                    </Box>\n\n                    <Box\n                      display=\"flex\"\n                      flexDirection=\"column\"\n                      textAlign=\"justify\"\n                      pb={1}\n                    >\n                      <Form.Item\n                        name=\"description\"\n                        rules={[{ message: 'Please input your product name!' }]}\n                        style={{ paddingTop: '10px' }}\n                      >\n                        <TextField\n                          id=\"outlined-multiline-static\"\n                          label=\"Food Description\"\n                          multiline\n                          fullWidth\n                          value={''}\n                          rows={5}\n                        />\n                      </Form.Item>\n                    </Box>\n\n                    <Box>\n                      <Form.Item\n                        name=\"foodImage\"\n                        rules={[{ message: 'Please input your food image!' }]}\n                        style={{ paddingTop: '10px' }}\n                      >\n                        <TextField value={''} type=\"file\" fullWidth />\n                      </Form.Item>\n                    </Box>\n\n                    <Box\n                      display=\"flex\"\n                      flexDirection=\"row\"\n                      justifyContent=\"center\"\n                      alignItems=\"center\"\n                      textAlign=\"center\"\n                    >\n                      <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                        <Box\n                          pt={2}\n                          pb={2}\n                          pl={2}\n                          pr={2}\n                          display=\"flex\"\n                          flexDirection=\"row\"\n                          justifyContent=\"space-between\"\n                        >\n                          <Button\n                            sx={{ margin: 1 }}\n                            size=\"medium\"\n                            color=\"success\"\n                            variant=\"outlined\"\n                            startIcon={<DoneOutlineIcon />}\n                            onClick={sendMenu}\n                          >\n                            Submit\n                          </Button>\n                          <Button\n                            size=\"medium\"\n                            sx={{ margin: 1 }}\n                            type=\"submit\"\n                            color=\"warning\"\n                            startIcon={<AddTaskIcon />}\n                          >\n                            Save & Add\n                          </Button>\n                        </Box>\n                      </Form.Item>\n                    </Box>\n                  </Form>\n                </Box>\n              </Grid>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Card variant=\"outlined\">\n              <Grid\n                container\n                direction=\"column\"\n                justifyContent=\"left\"\n                alignItems=\"stretch\"\n                spacing={0}\n              >\n                <Box pt={2} pb={2} pl={2}>\n                  <Typography variant=\"h3\">Products</Typography>\n                </Box>\n                <Divider />\n              </Grid>\n              <Box>\n                <Swiper\n                  pagination={{\n                    dynamicBullets: true\n                  }}\n                  modules={[Pagination]}\n                  className=\"mySwiper\"\n                >\n                  <SwiperSlide>\n                    <img src={images['new-home-1.png']} alt=\"\" />\n                  </SwiperSlide>\n                  <SwiperSlide>\n                    <img src={images['new-home-1.png']} alt=\"\" />\n                  </SwiperSlide>{' '}\n                  <SwiperSlide>\n                    <img src={images['new-home-1.png']} alt=\"\" />\n                  </SwiperSlide>\n                  <SwiperSlide>\n                    <img src={images['new-home-1.png']} alt=\"\" />\n                  </SwiperSlide>\n                </Swiper>\n\n                <Grid\n                  container\n                  direction=\"column\"\n                  justifyContent=\"left\"\n                  alignItems=\"stretch\"\n                  spacing={0}\n                >\n                  <Box\n                    pt={2}\n                    pb={2}\n                    pl={2}\n                    pr={2}\n                    display=\"flex\"\n                    flexDirection=\"row\"\n                    justifyContent=\"space-between\"\n                    alignItems=\"center\"\n                  >\n                    <Typography variant=\"h6\">Status Available</Typography>\n                    {/* <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Switch\n                            sx={{ m: 1 }}\n                            defaultChecked\n                            color=\"success\"\n                          />\n                        }\n                        label=\"\"\n                      />\n                    </FormGroup> */}\n                    <FormGroup>\n                      <FormControlLabel\n                        control={<IOSSwitch sx={{ m: 1 }} defaultChecked />}\n                        label=\"\"\n                      />\n                    </FormGroup>\n                  </Box>\n                  <Divider />\n                  <Box\n                    pt={2}\n                    pb={2}\n                    pl={2}\n                    pr={2}\n                    display=\"flex\"\n                    flexDirection=\"row\"\n                    justifyContent=\"space-between\"\n                    alignItems=\"center\"\n                  >\n                    <Typography variant=\"h6\">Discount Active</Typography>\n\n                    {/* <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Switch\n                            sx={{ m: 1 }}\n                            defaultChecked\n                            color=\"success\"\n                          />\n                        }\n                        label=\"\"\n                      />\n                    </FormGroup> */}\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={<IOSSwitch sx={{ m: 1 }} defaultChecked />}\n                        label=\"\"\n                      />\n                    </FormGroup>\n                  </Box>\n                </Grid>\n              </Box>\n            </Card>\n          </Grid>\n        </Grid>\n\n        <Box pt={3} pb={3}>\n          <Card>\n            <div style={{ height: 400, width: '100%' }}>\n              <MyDataGrid\n                rows={foodList}\n                columns={columns}\n                pageSize={5}\n                rowsPerPageOptions={[5]}\n                checkboxSelection\n                onCellEditCommit={handleCellEditCommit}\n              />\n            </div>\n          </Card>\n        </Box>\n\n        <BottomNav\n          className=\"pt-5\"\n          nextStep={true}\n          preStep={true}\n          backLink=\"orders\"\n          forLink=\"themes\"\n          forText=\"Select theme\"\n          backText=\"Select order\"\n        />\n      </Container>\n      <Footer />\n    </>\n  );\n};\n\nexport default CreateMenu;\n","import React, { useEffect } from 'react';\nimport AOS from 'aos';\nimport { Link } from 'react-router-dom';\nimport { Box, Button } from '@mui/material';\nimport DoubleArrowIcon from '@mui/icons-material/DoubleArrow';\nimport styled from 'styled-components';\n\nconst LeftArrow = styled(DoubleArrowIcon)`\n  -webkit-transform: rotate(180deg);\n  -moz-transform: rotate(180deg);\n  -ms-transform: rotate(180deg);\n  -o-transform: rotate(180deg);\n  transform: rotate(180deg);\n`;\n\nconst BottomNav = (props: any) => {\n  useEffect(() => {\n    AOS.init({\n      // Global settings:\n      disable: false, // accepts following values: 'phone', 'tablet', 'mobile', boolean, expression or function\n      startEvent: 'DOMContentLoaded', // name of the event dispatched on the document, that AOS should initialize on\n      initClassName: 'aos-init', // class applied after initialization\n      animatedClassName: 'aos-animate', // class applied on animation\n      useClassNames: false, // if true, will add content of `data-aos` as classes on scroll\n      disableMutationObserver: false, // disables automatic mutations' detections (advanced)\n      debounceDelay: 50, // the delay on debounce used while resizing window (advanced)\n      throttleDelay: 99, // the delay on throttle used while scrolling the page (advanced)\n\n      // Settings that can be overridden on per-element basis, by `data-aos-*` attributes:\n      offset: 120, // offset (in px) from the original trigger point\n      delay: 0, // values from 0 to 3000, with step 50ms\n      duration: 400, // values from 0 to 3000, with step 50ms\n      easing: 'ease', // default easing for AOS animations\n      once: true, // whether animation should happen only once - while scrolling down\n      mirror: false, // whether elements should animate out while scrolling past them\n      anchorPlacement: 'top-bottom' // defines which position of the element regarding to window should trigger the animation\n    });\n    AOS.refresh();\n  });\n  return (\n    <Box\n      pt={3}\n      display=\"flex\"\n      alignItems=\"flex-center\"\n      justifyContent=\"space-between\"\n      data-aos=\"fade-up\"\n      data-aos-delay=\"50\"\n      data-aos-duration=\"400\"\n      data-aos-easing=\"ease-in\"\n    >\n      <Link to={`/dashboards/${props.backLink}`}>\n        <Button\n          color=\"success\"\n          startIcon={<LeftArrow />}\n          variant=\"outlined\"\n          disabled={!props.preStep}\n          size=\"small\"\n        >\n          {props.backText}\n        </Button>\n      </Link>\n\n      {props.nextStep && (\n        <Link to={`/dashboards/${props.forLink}`}>\n          <Button color=\"error\" endIcon={<DoubleArrowIcon />} size=\"small\">\n            {props.forText}\n          </Button>\n        </Link>\n      )}\n    </Box>\n  );\n};\n\nexport default BottomNav;\n"],"names":["useState","foodList","setFoodList","progressContext","useContext","ProgressContext","Form","form","theme","useTheme","open","setOpen","ID","setID","ErrAlert","styled","Alert","palette","mode","MyAlert","MyDataGrid","DataGrid","columns","field","headerName","sortable","width","renderCell","params","display","flexDirection","title","arrow","sx","background","color","onClick","e","stopPropagation","api","getAllColumns","filter","c","forEach","row","id","size","fontSize","editable","handleCellEditCommit","React","value","productName","toString","updatedRows","map","category","price","description","IOSSwitch","props","focusVisibleClassName","disableRipple","height","padding","margin","transitionDuration","transform","backgroundColor","opacity","border","boxSizing","borderRadius","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","in","position","top","left","bgcolor","boxShadow","p","severity","mt","textAlign","direction","justifyContent","spacing","pt","newFoodList","food","ml","maxWidth","pb","container","item","xs","md","variant","alignItems","pl","pr","name","wrapperCol","span","initialValues","remember","onFinish","values","valuesWithIdGenerator","length","resetFields","onFinishFailed","errorInfo","toast","autoComplete","rules","message","style","paddingTop","label","type","fullWidth","columnSpacing","sm","endAdornment","multiline","rows","offset","startIcon","onMenu","console","log","pagination","dynamicBullets","modules","Pagination","className","src","images","alt","control","m","defaultChecked","pageSize","rowsPerPageOptions","checkboxSelection","onCellEditCommit","nextStep","preStep","backLink","forLink","forText","backText","LeftArrow","DoubleArrowIcon","useEffect","AOS","disable","startEvent","initClassName","animatedClassName","useClassNames","disableMutationObserver","debounceDelay","throttleDelay","delay","duration","easing","once","mirror","anchorPlacement","to","disabled","endIcon"],"sourceRoot":""}