{"version":3,"file":"static/js/373.a6e3901a.chunk.js","mappings":"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","sources":["../node_modules/qrcode.react/lib/esm/index.js","components/modules/pages/admin/TableMng.tsx","components/modules/shared/BottomNav.tsx","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\n\n// src/index.tsx\nimport React, { useRef, useEffect, useState } from \"react\";\n\n// src/third-party/qrcodegen/index.ts\n/**\n * @license QR Code generator library (TypeScript)\n * Copyright (c) Project Nayuki.\n * SPDX-License-Identifier: MIT\n */\nvar qrcodegen;\n((qrcodegen2) => {\n  const _QrCode = class {\n    constructor(version, errorCorrectionLevel, dataCodewords, msk) {\n      this.version = version;\n      this.errorCorrectionLevel = errorCorrectionLevel;\n      this.modules = [];\n      this.isFunction = [];\n      if (version < _QrCode.MIN_VERSION || version > _QrCode.MAX_VERSION)\n        throw new RangeError(\"Version value out of range\");\n      if (msk < -1 || msk > 7)\n        throw new RangeError(\"Mask value out of range\");\n      this.size = version * 4 + 17;\n      let row = [];\n      for (let i = 0; i < this.size; i++)\n        row.push(false);\n      for (let i = 0; i < this.size; i++) {\n        this.modules.push(row.slice());\n        this.isFunction.push(row.slice());\n      }\n      this.drawFunctionPatterns();\n      const allCodewords = this.addEccAndInterleave(dataCodewords);\n      this.drawCodewords(allCodewords);\n      if (msk == -1) {\n        let minPenalty = 1e9;\n        for (let i = 0; i < 8; i++) {\n          this.applyMask(i);\n          this.drawFormatBits(i);\n          const penalty = this.getPenaltyScore();\n          if (penalty < minPenalty) {\n            msk = i;\n            minPenalty = penalty;\n          }\n          this.applyMask(i);\n        }\n      }\n      assert(0 <= msk && msk <= 7);\n      this.mask = msk;\n      this.applyMask(msk);\n      this.drawFormatBits(msk);\n      this.isFunction = [];\n    }\n    static encodeText(text, ecl) {\n      const segs = qrcodegen2.QrSegment.makeSegments(text);\n      return _QrCode.encodeSegments(segs, ecl);\n    }\n    static encodeBinary(data, ecl) {\n      const seg = qrcodegen2.QrSegment.makeBytes(data);\n      return _QrCode.encodeSegments([seg], ecl);\n    }\n    static encodeSegments(segs, ecl, minVersion = 1, maxVersion = 40, mask = -1, boostEcl = true) {\n      if (!(_QrCode.MIN_VERSION <= minVersion && minVersion <= maxVersion && maxVersion <= _QrCode.MAX_VERSION) || mask < -1 || mask > 7)\n        throw new RangeError(\"Invalid value\");\n      let version;\n      let dataUsedBits;\n      for (version = minVersion; ; version++) {\n        const dataCapacityBits2 = _QrCode.getNumDataCodewords(version, ecl) * 8;\n        const usedBits = QrSegment.getTotalBits(segs, version);\n        if (usedBits <= dataCapacityBits2) {\n          dataUsedBits = usedBits;\n          break;\n        }\n        if (version >= maxVersion)\n          throw new RangeError(\"Data too long\");\n      }\n      for (const newEcl of [_QrCode.Ecc.MEDIUM, _QrCode.Ecc.QUARTILE, _QrCode.Ecc.HIGH]) {\n        if (boostEcl && dataUsedBits <= _QrCode.getNumDataCodewords(version, newEcl) * 8)\n          ecl = newEcl;\n      }\n      let bb = [];\n      for (const seg of segs) {\n        appendBits(seg.mode.modeBits, 4, bb);\n        appendBits(seg.numChars, seg.mode.numCharCountBits(version), bb);\n        for (const b of seg.getData())\n          bb.push(b);\n      }\n      assert(bb.length == dataUsedBits);\n      const dataCapacityBits = _QrCode.getNumDataCodewords(version, ecl) * 8;\n      assert(bb.length <= dataCapacityBits);\n      appendBits(0, Math.min(4, dataCapacityBits - bb.length), bb);\n      appendBits(0, (8 - bb.length % 8) % 8, bb);\n      assert(bb.length % 8 == 0);\n      for (let padByte = 236; bb.length < dataCapacityBits; padByte ^= 236 ^ 17)\n        appendBits(padByte, 8, bb);\n      let dataCodewords = [];\n      while (dataCodewords.length * 8 < bb.length)\n        dataCodewords.push(0);\n      bb.forEach((b, i) => dataCodewords[i >>> 3] |= b << 7 - (i & 7));\n      return new _QrCode(version, ecl, dataCodewords, mask);\n    }\n    getModule(x, y) {\n      return 0 <= x && x < this.size && 0 <= y && y < this.size && this.modules[y][x];\n    }\n    getModules() {\n      return this.modules;\n    }\n    drawFunctionPatterns() {\n      for (let i = 0; i < this.size; i++) {\n        this.setFunctionModule(6, i, i % 2 == 0);\n        this.setFunctionModule(i, 6, i % 2 == 0);\n      }\n      this.drawFinderPattern(3, 3);\n      this.drawFinderPattern(this.size - 4, 3);\n      this.drawFinderPattern(3, this.size - 4);\n      const alignPatPos = this.getAlignmentPatternPositions();\n      const numAlign = alignPatPos.length;\n      for (let i = 0; i < numAlign; i++) {\n        for (let j = 0; j < numAlign; j++) {\n          if (!(i == 0 && j == 0 || i == 0 && j == numAlign - 1 || i == numAlign - 1 && j == 0))\n            this.drawAlignmentPattern(alignPatPos[i], alignPatPos[j]);\n        }\n      }\n      this.drawFormatBits(0);\n      this.drawVersion();\n    }\n    drawFormatBits(mask) {\n      const data = this.errorCorrectionLevel.formatBits << 3 | mask;\n      let rem = data;\n      for (let i = 0; i < 10; i++)\n        rem = rem << 1 ^ (rem >>> 9) * 1335;\n      const bits = (data << 10 | rem) ^ 21522;\n      assert(bits >>> 15 == 0);\n      for (let i = 0; i <= 5; i++)\n        this.setFunctionModule(8, i, getBit(bits, i));\n      this.setFunctionModule(8, 7, getBit(bits, 6));\n      this.setFunctionModule(8, 8, getBit(bits, 7));\n      this.setFunctionModule(7, 8, getBit(bits, 8));\n      for (let i = 9; i < 15; i++)\n        this.setFunctionModule(14 - i, 8, getBit(bits, i));\n      for (let i = 0; i < 8; i++)\n        this.setFunctionModule(this.size - 1 - i, 8, getBit(bits, i));\n      for (let i = 8; i < 15; i++)\n        this.setFunctionModule(8, this.size - 15 + i, getBit(bits, i));\n      this.setFunctionModule(8, this.size - 8, true);\n    }\n    drawVersion() {\n      if (this.version < 7)\n        return;\n      let rem = this.version;\n      for (let i = 0; i < 12; i++)\n        rem = rem << 1 ^ (rem >>> 11) * 7973;\n      const bits = this.version << 12 | rem;\n      assert(bits >>> 18 == 0);\n      for (let i = 0; i < 18; i++) {\n        const color = getBit(bits, i);\n        const a = this.size - 11 + i % 3;\n        const b = Math.floor(i / 3);\n        this.setFunctionModule(a, b, color);\n        this.setFunctionModule(b, a, color);\n      }\n    }\n    drawFinderPattern(x, y) {\n      for (let dy = -4; dy <= 4; dy++) {\n        for (let dx = -4; dx <= 4; dx++) {\n          const dist = Math.max(Math.abs(dx), Math.abs(dy));\n          const xx = x + dx;\n          const yy = y + dy;\n          if (0 <= xx && xx < this.size && 0 <= yy && yy < this.size)\n            this.setFunctionModule(xx, yy, dist != 2 && dist != 4);\n        }\n      }\n    }\n    drawAlignmentPattern(x, y) {\n      for (let dy = -2; dy <= 2; dy++) {\n        for (let dx = -2; dx <= 2; dx++)\n          this.setFunctionModule(x + dx, y + dy, Math.max(Math.abs(dx), Math.abs(dy)) != 1);\n      }\n    }\n    setFunctionModule(x, y, isDark) {\n      this.modules[y][x] = isDark;\n      this.isFunction[y][x] = true;\n    }\n    addEccAndInterleave(data) {\n      const ver = this.version;\n      const ecl = this.errorCorrectionLevel;\n      if (data.length != _QrCode.getNumDataCodewords(ver, ecl))\n        throw new RangeError(\"Invalid argument\");\n      const numBlocks = _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n      const blockEccLen = _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver];\n      const rawCodewords = Math.floor(_QrCode.getNumRawDataModules(ver) / 8);\n      const numShortBlocks = numBlocks - rawCodewords % numBlocks;\n      const shortBlockLen = Math.floor(rawCodewords / numBlocks);\n      let blocks = [];\n      const rsDiv = _QrCode.reedSolomonComputeDivisor(blockEccLen);\n      for (let i = 0, k = 0; i < numBlocks; i++) {\n        let dat = data.slice(k, k + shortBlockLen - blockEccLen + (i < numShortBlocks ? 0 : 1));\n        k += dat.length;\n        const ecc = _QrCode.reedSolomonComputeRemainder(dat, rsDiv);\n        if (i < numShortBlocks)\n          dat.push(0);\n        blocks.push(dat.concat(ecc));\n      }\n      let result = [];\n      for (let i = 0; i < blocks[0].length; i++) {\n        blocks.forEach((block, j) => {\n          if (i != shortBlockLen - blockEccLen || j >= numShortBlocks)\n            result.push(block[i]);\n        });\n      }\n      assert(result.length == rawCodewords);\n      return result;\n    }\n    drawCodewords(data) {\n      if (data.length != Math.floor(_QrCode.getNumRawDataModules(this.version) / 8))\n        throw new RangeError(\"Invalid argument\");\n      let i = 0;\n      for (let right = this.size - 1; right >= 1; right -= 2) {\n        if (right == 6)\n          right = 5;\n        for (let vert = 0; vert < this.size; vert++) {\n          for (let j = 0; j < 2; j++) {\n            const x = right - j;\n            const upward = (right + 1 & 2) == 0;\n            const y = upward ? this.size - 1 - vert : vert;\n            if (!this.isFunction[y][x] && i < data.length * 8) {\n              this.modules[y][x] = getBit(data[i >>> 3], 7 - (i & 7));\n              i++;\n            }\n          }\n        }\n      }\n      assert(i == data.length * 8);\n    }\n    applyMask(mask) {\n      if (mask < 0 || mask > 7)\n        throw new RangeError(\"Mask value out of range\");\n      for (let y = 0; y < this.size; y++) {\n        for (let x = 0; x < this.size; x++) {\n          let invert;\n          switch (mask) {\n            case 0:\n              invert = (x + y) % 2 == 0;\n              break;\n            case 1:\n              invert = y % 2 == 0;\n              break;\n            case 2:\n              invert = x % 3 == 0;\n              break;\n            case 3:\n              invert = (x + y) % 3 == 0;\n              break;\n            case 4:\n              invert = (Math.floor(x / 3) + Math.floor(y / 2)) % 2 == 0;\n              break;\n            case 5:\n              invert = x * y % 2 + x * y % 3 == 0;\n              break;\n            case 6:\n              invert = (x * y % 2 + x * y % 3) % 2 == 0;\n              break;\n            case 7:\n              invert = ((x + y) % 2 + x * y % 3) % 2 == 0;\n              break;\n            default:\n              throw new Error(\"Unreachable\");\n          }\n          if (!this.isFunction[y][x] && invert)\n            this.modules[y][x] = !this.modules[y][x];\n        }\n      }\n    }\n    getPenaltyScore() {\n      let result = 0;\n      for (let y = 0; y < this.size; y++) {\n        let runColor = false;\n        let runX = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let x = 0; x < this.size; x++) {\n          if (this.modules[y][x] == runColor) {\n            runX++;\n            if (runX == 5)\n              result += _QrCode.PENALTY_N1;\n            else if (runX > 5)\n              result++;\n          } else {\n            this.finderPenaltyAddHistory(runX, runHistory);\n            if (!runColor)\n              result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runX = 1;\n          }\n        }\n        result += this.finderPenaltyTerminateAndCount(runColor, runX, runHistory) * _QrCode.PENALTY_N3;\n      }\n      for (let x = 0; x < this.size; x++) {\n        let runColor = false;\n        let runY = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let y = 0; y < this.size; y++) {\n          if (this.modules[y][x] == runColor) {\n            runY++;\n            if (runY == 5)\n              result += _QrCode.PENALTY_N1;\n            else if (runY > 5)\n              result++;\n          } else {\n            this.finderPenaltyAddHistory(runY, runHistory);\n            if (!runColor)\n              result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runY = 1;\n          }\n        }\n        result += this.finderPenaltyTerminateAndCount(runColor, runY, runHistory) * _QrCode.PENALTY_N3;\n      }\n      for (let y = 0; y < this.size - 1; y++) {\n        for (let x = 0; x < this.size - 1; x++) {\n          const color = this.modules[y][x];\n          if (color == this.modules[y][x + 1] && color == this.modules[y + 1][x] && color == this.modules[y + 1][x + 1])\n            result += _QrCode.PENALTY_N2;\n        }\n      }\n      let dark = 0;\n      for (const row of this.modules)\n        dark = row.reduce((sum, color) => sum + (color ? 1 : 0), dark);\n      const total = this.size * this.size;\n      const k = Math.ceil(Math.abs(dark * 20 - total * 10) / total) - 1;\n      assert(0 <= k && k <= 9);\n      result += k * _QrCode.PENALTY_N4;\n      assert(0 <= result && result <= 2568888);\n      return result;\n    }\n    getAlignmentPatternPositions() {\n      if (this.version == 1)\n        return [];\n      else {\n        const numAlign = Math.floor(this.version / 7) + 2;\n        const step = this.version == 32 ? 26 : Math.ceil((this.version * 4 + 4) / (numAlign * 2 - 2)) * 2;\n        let result = [6];\n        for (let pos = this.size - 7; result.length < numAlign; pos -= step)\n          result.splice(1, 0, pos);\n        return result;\n      }\n    }\n    static getNumRawDataModules(ver) {\n      if (ver < _QrCode.MIN_VERSION || ver > _QrCode.MAX_VERSION)\n        throw new RangeError(\"Version number out of range\");\n      let result = (16 * ver + 128) * ver + 64;\n      if (ver >= 2) {\n        const numAlign = Math.floor(ver / 7) + 2;\n        result -= (25 * numAlign - 10) * numAlign - 55;\n        if (ver >= 7)\n          result -= 36;\n      }\n      assert(208 <= result && result <= 29648);\n      return result;\n    }\n    static getNumDataCodewords(ver, ecl) {\n      return Math.floor(_QrCode.getNumRawDataModules(ver) / 8) - _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver] * _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n    }\n    static reedSolomonComputeDivisor(degree) {\n      if (degree < 1 || degree > 255)\n        throw new RangeError(\"Degree out of range\");\n      let result = [];\n      for (let i = 0; i < degree - 1; i++)\n        result.push(0);\n      result.push(1);\n      let root = 1;\n      for (let i = 0; i < degree; i++) {\n        for (let j = 0; j < result.length; j++) {\n          result[j] = _QrCode.reedSolomonMultiply(result[j], root);\n          if (j + 1 < result.length)\n            result[j] ^= result[j + 1];\n        }\n        root = _QrCode.reedSolomonMultiply(root, 2);\n      }\n      return result;\n    }\n    static reedSolomonComputeRemainder(data, divisor) {\n      let result = divisor.map((_) => 0);\n      for (const b of data) {\n        const factor = b ^ result.shift();\n        result.push(0);\n        divisor.forEach((coef, i) => result[i] ^= _QrCode.reedSolomonMultiply(coef, factor));\n      }\n      return result;\n    }\n    static reedSolomonMultiply(x, y) {\n      if (x >>> 8 != 0 || y >>> 8 != 0)\n        throw new RangeError(\"Byte out of range\");\n      let z = 0;\n      for (let i = 7; i >= 0; i--) {\n        z = z << 1 ^ (z >>> 7) * 285;\n        z ^= (y >>> i & 1) * x;\n      }\n      assert(z >>> 8 == 0);\n      return z;\n    }\n    finderPenaltyCountPatterns(runHistory) {\n      const n = runHistory[1];\n      assert(n <= this.size * 3);\n      const core = n > 0 && runHistory[2] == n && runHistory[3] == n * 3 && runHistory[4] == n && runHistory[5] == n;\n      return (core && runHistory[0] >= n * 4 && runHistory[6] >= n ? 1 : 0) + (core && runHistory[6] >= n * 4 && runHistory[0] >= n ? 1 : 0);\n    }\n    finderPenaltyTerminateAndCount(currentRunColor, currentRunLength, runHistory) {\n      if (currentRunColor) {\n        this.finderPenaltyAddHistory(currentRunLength, runHistory);\n        currentRunLength = 0;\n      }\n      currentRunLength += this.size;\n      this.finderPenaltyAddHistory(currentRunLength, runHistory);\n      return this.finderPenaltyCountPatterns(runHistory);\n    }\n    finderPenaltyAddHistory(currentRunLength, runHistory) {\n      if (runHistory[0] == 0)\n        currentRunLength += this.size;\n      runHistory.pop();\n      runHistory.unshift(currentRunLength);\n    }\n  };\n  let QrCode = _QrCode;\n  QrCode.MIN_VERSION = 1;\n  QrCode.MAX_VERSION = 40;\n  QrCode.PENALTY_N1 = 3;\n  QrCode.PENALTY_N2 = 3;\n  QrCode.PENALTY_N3 = 40;\n  QrCode.PENALTY_N4 = 10;\n  QrCode.ECC_CODEWORDS_PER_BLOCK = [\n    [-1, 7, 10, 15, 20, 26, 18, 20, 24, 30, 18, 20, 24, 26, 30, 22, 24, 28, 30, 28, 28, 28, 28, 30, 30, 26, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\n    [-1, 10, 16, 26, 18, 24, 16, 18, 22, 22, 26, 30, 22, 22, 24, 24, 28, 28, 26, 26, 26, 26, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28],\n    [-1, 13, 22, 18, 26, 18, 24, 18, 22, 20, 24, 28, 26, 24, 20, 30, 24, 28, 28, 26, 30, 28, 30, 30, 30, 30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\n    [-1, 17, 28, 22, 16, 22, 28, 26, 26, 24, 28, 24, 28, 22, 24, 24, 30, 28, 28, 26, 28, 30, 24, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30]\n  ];\n  QrCode.NUM_ERROR_CORRECTION_BLOCKS = [\n    [-1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 4, 6, 6, 6, 6, 7, 8, 8, 9, 9, 10, 12, 12, 12, 13, 14, 15, 16, 17, 18, 19, 19, 20, 21, 22, 24, 25],\n    [-1, 1, 1, 1, 2, 2, 4, 4, 4, 5, 5, 5, 8, 9, 9, 10, 10, 11, 13, 14, 16, 17, 17, 18, 20, 21, 23, 25, 26, 28, 29, 31, 33, 35, 37, 38, 40, 43, 45, 47, 49],\n    [-1, 1, 1, 2, 2, 4, 4, 6, 6, 8, 8, 8, 10, 12, 16, 12, 17, 16, 18, 21, 20, 23, 23, 25, 27, 29, 34, 34, 35, 38, 40, 43, 45, 48, 51, 53, 56, 59, 62, 65, 68],\n    [-1, 1, 1, 2, 4, 4, 4, 5, 6, 8, 8, 11, 11, 16, 16, 18, 16, 19, 21, 25, 25, 25, 34, 30, 32, 35, 37, 40, 42, 45, 48, 51, 54, 57, 60, 63, 66, 70, 74, 77, 81]\n  ];\n  qrcodegen2.QrCode = QrCode;\n  function appendBits(val, len, bb) {\n    if (len < 0 || len > 31 || val >>> len != 0)\n      throw new RangeError(\"Value out of range\");\n    for (let i = len - 1; i >= 0; i--)\n      bb.push(val >>> i & 1);\n  }\n  function getBit(x, i) {\n    return (x >>> i & 1) != 0;\n  }\n  function assert(cond) {\n    if (!cond)\n      throw new Error(\"Assertion error\");\n  }\n  const _QrSegment = class {\n    constructor(mode, numChars, bitData) {\n      this.mode = mode;\n      this.numChars = numChars;\n      this.bitData = bitData;\n      if (numChars < 0)\n        throw new RangeError(\"Invalid argument\");\n      this.bitData = bitData.slice();\n    }\n    static makeBytes(data) {\n      let bb = [];\n      for (const b of data)\n        appendBits(b, 8, bb);\n      return new _QrSegment(_QrSegment.Mode.BYTE, data.length, bb);\n    }\n    static makeNumeric(digits) {\n      if (!_QrSegment.isNumeric(digits))\n        throw new RangeError(\"String contains non-numeric characters\");\n      let bb = [];\n      for (let i = 0; i < digits.length; ) {\n        const n = Math.min(digits.length - i, 3);\n        appendBits(parseInt(digits.substr(i, n), 10), n * 3 + 1, bb);\n        i += n;\n      }\n      return new _QrSegment(_QrSegment.Mode.NUMERIC, digits.length, bb);\n    }\n    static makeAlphanumeric(text) {\n      if (!_QrSegment.isAlphanumeric(text))\n        throw new RangeError(\"String contains unencodable characters in alphanumeric mode\");\n      let bb = [];\n      let i;\n      for (i = 0; i + 2 <= text.length; i += 2) {\n        let temp = _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)) * 45;\n        temp += _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i + 1));\n        appendBits(temp, 11, bb);\n      }\n      if (i < text.length)\n        appendBits(_QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)), 6, bb);\n      return new _QrSegment(_QrSegment.Mode.ALPHANUMERIC, text.length, bb);\n    }\n    static makeSegments(text) {\n      if (text == \"\")\n        return [];\n      else if (_QrSegment.isNumeric(text))\n        return [_QrSegment.makeNumeric(text)];\n      else if (_QrSegment.isAlphanumeric(text))\n        return [_QrSegment.makeAlphanumeric(text)];\n      else\n        return [_QrSegment.makeBytes(_QrSegment.toUtf8ByteArray(text))];\n    }\n    static makeEci(assignVal) {\n      let bb = [];\n      if (assignVal < 0)\n        throw new RangeError(\"ECI assignment value out of range\");\n      else if (assignVal < 1 << 7)\n        appendBits(assignVal, 8, bb);\n      else if (assignVal < 1 << 14) {\n        appendBits(2, 2, bb);\n        appendBits(assignVal, 14, bb);\n      } else if (assignVal < 1e6) {\n        appendBits(6, 3, bb);\n        appendBits(assignVal, 21, bb);\n      } else\n        throw new RangeError(\"ECI assignment value out of range\");\n      return new _QrSegment(_QrSegment.Mode.ECI, 0, bb);\n    }\n    static isNumeric(text) {\n      return _QrSegment.NUMERIC_REGEX.test(text);\n    }\n    static isAlphanumeric(text) {\n      return _QrSegment.ALPHANUMERIC_REGEX.test(text);\n    }\n    getData() {\n      return this.bitData.slice();\n    }\n    static getTotalBits(segs, version) {\n      let result = 0;\n      for (const seg of segs) {\n        const ccbits = seg.mode.numCharCountBits(version);\n        if (seg.numChars >= 1 << ccbits)\n          return Infinity;\n        result += 4 + ccbits + seg.bitData.length;\n      }\n      return result;\n    }\n    static toUtf8ByteArray(str) {\n      str = encodeURI(str);\n      let result = [];\n      for (let i = 0; i < str.length; i++) {\n        if (str.charAt(i) != \"%\")\n          result.push(str.charCodeAt(i));\n        else {\n          result.push(parseInt(str.substr(i + 1, 2), 16));\n          i += 2;\n        }\n      }\n      return result;\n    }\n  };\n  let QrSegment = _QrSegment;\n  QrSegment.NUMERIC_REGEX = /^[0-9]*$/;\n  QrSegment.ALPHANUMERIC_REGEX = /^[A-Z0-9 $%*+.\\/:-]*$/;\n  QrSegment.ALPHANUMERIC_CHARSET = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:\";\n  qrcodegen2.QrSegment = QrSegment;\n})(qrcodegen || (qrcodegen = {}));\n((qrcodegen2) => {\n  let QrCode;\n  ((QrCode2) => {\n    const _Ecc = class {\n      constructor(ordinal, formatBits) {\n        this.ordinal = ordinal;\n        this.formatBits = formatBits;\n      }\n    };\n    let Ecc = _Ecc;\n    Ecc.LOW = new _Ecc(0, 1);\n    Ecc.MEDIUM = new _Ecc(1, 0);\n    Ecc.QUARTILE = new _Ecc(2, 3);\n    Ecc.HIGH = new _Ecc(3, 2);\n    QrCode2.Ecc = Ecc;\n  })(QrCode = qrcodegen2.QrCode || (qrcodegen2.QrCode = {}));\n})(qrcodegen || (qrcodegen = {}));\n((qrcodegen2) => {\n  let QrSegment;\n  ((QrSegment2) => {\n    const _Mode = class {\n      constructor(modeBits, numBitsCharCount) {\n        this.modeBits = modeBits;\n        this.numBitsCharCount = numBitsCharCount;\n      }\n      numCharCountBits(ver) {\n        return this.numBitsCharCount[Math.floor((ver + 7) / 17)];\n      }\n    };\n    let Mode = _Mode;\n    Mode.NUMERIC = new _Mode(1, [10, 12, 14]);\n    Mode.ALPHANUMERIC = new _Mode(2, [9, 11, 13]);\n    Mode.BYTE = new _Mode(4, [8, 16, 16]);\n    Mode.KANJI = new _Mode(8, [8, 10, 12]);\n    Mode.ECI = new _Mode(7, [0, 0, 0]);\n    QrSegment2.Mode = Mode;\n  })(QrSegment = qrcodegen2.QrSegment || (qrcodegen2.QrSegment = {}));\n})(qrcodegen || (qrcodegen = {}));\nvar qrcodegen_default = qrcodegen;\n\n// src/index.tsx\n/**\n * @license qrcode.react\n * Copyright (c) Paul O'Shannessy\n * SPDX-License-Identifier: ISC\n */\nvar ERROR_LEVEL_MAP = {\n  L: qrcodegen_default.QrCode.Ecc.LOW,\n  M: qrcodegen_default.QrCode.Ecc.MEDIUM,\n  Q: qrcodegen_default.QrCode.Ecc.QUARTILE,\n  H: qrcodegen_default.QrCode.Ecc.HIGH\n};\nvar DEFAULT_SIZE = 128;\nvar DEFAULT_LEVEL = \"L\";\nvar DEFAULT_BGCOLOR = \"#FFFFFF\";\nvar DEFAULT_FGCOLOR = \"#000000\";\nvar DEFAULT_INCLUDEMARGIN = false;\nvar MARGIN_SIZE = 4;\nvar DEFAULT_IMG_SCALE = 0.1;\nfunction generatePath(modules, margin = 0) {\n  const ops = [];\n  modules.forEach(function(row, y) {\n    let start = null;\n    row.forEach(function(cell, x) {\n      if (!cell && start !== null) {\n        ops.push(`M${start + margin} ${y + margin}h${x - start}v1H${start + margin}z`);\n        start = null;\n        return;\n      }\n      if (x === row.length - 1) {\n        if (!cell) {\n          return;\n        }\n        if (start === null) {\n          ops.push(`M${x + margin},${y + margin} h1v1H${x + margin}z`);\n        } else {\n          ops.push(`M${start + margin},${y + margin} h${x + 1 - start}v1H${start + margin}z`);\n        }\n        return;\n      }\n      if (cell && start === null) {\n        start = x;\n      }\n    });\n  });\n  return ops.join(\"\");\n}\nfunction excavateModules(modules, excavation) {\n  return modules.slice().map((row, y) => {\n    if (y < excavation.y || y >= excavation.y + excavation.h) {\n      return row;\n    }\n    return row.map((cell, x) => {\n      if (x < excavation.x || x >= excavation.x + excavation.w) {\n        return cell;\n      }\n      return false;\n    });\n  });\n}\nfunction getImageSettings(cells, size, includeMargin, imageSettings) {\n  if (imageSettings == null) {\n    return null;\n  }\n  const margin = includeMargin ? MARGIN_SIZE : 0;\n  const numCells = cells.length + margin * 2;\n  const defaultSize = Math.floor(size * DEFAULT_IMG_SCALE);\n  const scale = numCells / size;\n  const w = (imageSettings.width || defaultSize) * scale;\n  const h = (imageSettings.height || defaultSize) * scale;\n  const x = imageSettings.x == null ? cells.length / 2 - w / 2 : imageSettings.x * scale;\n  const y = imageSettings.y == null ? cells.length / 2 - h / 2 : imageSettings.y * scale;\n  let excavation = null;\n  if (imageSettings.excavate) {\n    let floorX = Math.floor(x);\n    let floorY = Math.floor(y);\n    let ceilW = Math.ceil(w + x - floorX);\n    let ceilH = Math.ceil(h + y - floorY);\n    excavation = { x: floorX, y: floorY, w: ceilW, h: ceilH };\n  }\n  return { x, y, h, w, excavation };\n}\nvar SUPPORTS_PATH2D = function() {\n  try {\n    new Path2D().addPath(new Path2D());\n  } catch (e) {\n    return false;\n  }\n  return true;\n}();\nfunction QRCodeCanvas(props) {\n  const _a = props, {\n    value,\n    size = DEFAULT_SIZE,\n    level = DEFAULT_LEVEL,\n    bgColor = DEFAULT_BGCOLOR,\n    fgColor = DEFAULT_FGCOLOR,\n    includeMargin = DEFAULT_INCLUDEMARGIN,\n    style,\n    imageSettings\n  } = _a, otherProps = __objRest(_a, [\n    \"value\",\n    \"size\",\n    \"level\",\n    \"bgColor\",\n    \"fgColor\",\n    \"includeMargin\",\n    \"style\",\n    \"imageSettings\"\n  ]);\n  const imgSrc = imageSettings == null ? void 0 : imageSettings.src;\n  const _canvas = useRef(null);\n  const _image = useRef(null);\n  const [isImgLoaded, setIsImageLoaded] = useState(false);\n  useEffect(() => {\n    if (_canvas.current != null) {\n      const canvas = _canvas.current;\n      const ctx = canvas.getContext(\"2d\");\n      if (!ctx) {\n        return;\n      }\n      let cells = qrcodegen_default.QrCode.encodeText(value, ERROR_LEVEL_MAP[level]).getModules();\n      const margin = includeMargin ? MARGIN_SIZE : 0;\n      const numCells = cells.length + margin * 2;\n      const calculatedImageSettings = getImageSettings(cells, size, includeMargin, imageSettings);\n      const image = _image.current;\n      const haveImageToRender = calculatedImageSettings != null && image !== null && image.complete && image.naturalHeight !== 0 && image.naturalWidth !== 0;\n      if (haveImageToRender) {\n        if (calculatedImageSettings.excavation != null) {\n          cells = excavateModules(cells, calculatedImageSettings.excavation);\n        }\n      }\n      const pixelRatio = window.devicePixelRatio || 1;\n      canvas.height = canvas.width = size * pixelRatio;\n      const scale = size / numCells * pixelRatio;\n      ctx.scale(scale, scale);\n      ctx.fillStyle = bgColor;\n      ctx.fillRect(0, 0, numCells, numCells);\n      ctx.fillStyle = fgColor;\n      if (SUPPORTS_PATH2D) {\n        ctx.fill(new Path2D(generatePath(cells, margin)));\n      } else {\n        cells.forEach(function(row, rdx) {\n          row.forEach(function(cell, cdx) {\n            if (cell) {\n              ctx.fillRect(cdx + margin, rdx + margin, 1, 1);\n            }\n          });\n        });\n      }\n      if (haveImageToRender) {\n        ctx.drawImage(image, calculatedImageSettings.x + margin, calculatedImageSettings.y + margin, calculatedImageSettings.w, calculatedImageSettings.h);\n      }\n    }\n  });\n  useEffect(() => {\n    setIsImageLoaded(false);\n  }, [imgSrc]);\n  const canvasStyle = __spreadValues({ height: size, width: size }, style);\n  let img = null;\n  if (imgSrc != null) {\n    img = /* @__PURE__ */ React.createElement(\"img\", {\n      src: imgSrc,\n      key: imgSrc,\n      style: { display: \"none\" },\n      onLoad: () => {\n        setIsImageLoaded(true);\n      },\n      ref: _image\n    });\n  }\n  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(\"canvas\", __spreadValues({\n    style: canvasStyle,\n    height: size,\n    width: size,\n    ref: _canvas\n  }, otherProps)), img);\n}\nfunction QRCodeSVG(props) {\n  const _a = props, {\n    value,\n    size = DEFAULT_SIZE,\n    level = DEFAULT_LEVEL,\n    bgColor = DEFAULT_BGCOLOR,\n    fgColor = DEFAULT_FGCOLOR,\n    includeMargin = DEFAULT_INCLUDEMARGIN,\n    imageSettings\n  } = _a, otherProps = __objRest(_a, [\n    \"value\",\n    \"size\",\n    \"level\",\n    \"bgColor\",\n    \"fgColor\",\n    \"includeMargin\",\n    \"imageSettings\"\n  ]);\n  let cells = qrcodegen_default.QrCode.encodeText(value, ERROR_LEVEL_MAP[level]).getModules();\n  const margin = includeMargin ? MARGIN_SIZE : 0;\n  const numCells = cells.length + margin * 2;\n  const calculatedImageSettings = getImageSettings(cells, size, includeMargin, imageSettings);\n  let image = null;\n  if (imageSettings != null && calculatedImageSettings != null) {\n    if (calculatedImageSettings.excavation != null) {\n      cells = excavateModules(cells, calculatedImageSettings.excavation);\n    }\n    image = /* @__PURE__ */ React.createElement(\"image\", {\n      xlinkHref: imageSettings.src,\n      height: calculatedImageSettings.h,\n      width: calculatedImageSettings.w,\n      x: calculatedImageSettings.x + margin,\n      y: calculatedImageSettings.y + margin,\n      preserveAspectRatio: \"none\"\n    });\n  }\n  const fgPath = generatePath(cells, margin);\n  return /* @__PURE__ */ React.createElement(\"svg\", __spreadValues({\n    height: size,\n    width: size,\n    viewBox: `0 0 ${numCells} ${numCells}`\n  }, otherProps), /* @__PURE__ */ React.createElement(\"path\", {\n    fill: bgColor,\n    d: `M0,0 h${numCells}v${numCells}H0z`,\n    shapeRendering: \"crispEdges\"\n  }), /* @__PURE__ */ React.createElement(\"path\", {\n    fill: fgColor,\n    d: fgPath,\n    shapeRendering: \"crispEdges\"\n  }), image);\n}\nvar QRCode = (props) => {\n  const _a = props, { renderAs } = _a, otherProps = __objRest(_a, [\"renderAs\"]);\n  if (renderAs === \"svg\") {\n    return /* @__PURE__ */ React.createElement(QRCodeSVG, __spreadValues({}, otherProps));\n  }\n  return /* @__PURE__ */ React.createElement(QRCodeCanvas, __spreadValues({}, otherProps));\n};\nexport {\n  QRCodeCanvas,\n  QRCodeSVG,\n  QRCode as default\n};\n","import {\n  Container,\n  Grid,\n  Card,\n  Divider,\n  Typography,\n  Box,\n  Button,\n  styled,\n  IconButton,\n  Modal,\n  Fade,\n  Stack,\n  Alert,\n  useTheme,\n  Backdrop,\n  Tooltip\n} from '@mui/material';\nimport React, { useContext, useState } from 'react';\nimport BottomNav from '../../shared/BottomNav';\nimport Footer from '../../shared/Footer';\nimport TextField from '@mui/material/TextField';\nimport { Form } from 'antd';\n\nimport { DataGrid, GridApi, GridColDef } from '@mui/x-data-grid';\nimport DeleteSweepIcon from '@mui/icons-material/DeleteSweep';\nimport { QRCodeSVG } from 'qrcode.react';\nimport DoneOutlineIcon from '@mui/icons-material/DoneOutline';\nimport AddTaskIcon from '@mui/icons-material/AddTask';\nimport ProgressContext from 'src/contexts/ProgressContext';\nimport { Toaster } from 'react-hot-toast';\nimport { Helmet } from 'react-helmet-async';\nimport DoneIcon from '@mui/icons-material/Done';\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst CreateTable = () => {\n  const progressContext = useContext(ProgressContext);\n  const [tableList, setTableList] = useState([]);\n  const [qrText, setQRText] = useState('');\n  const [open, setOpen] = useState(false);\n  const [ID, setID] = useState(0);\n  const [form] = Form.useForm();\n  const theme = useTheme();\n\n  const ErrAlert = styled(Alert)`\n    border: 1px solid red;\n    color: ${theme.palette.mode === 'dark' ? '#FF1943' : 'red'};\n    background-color: ${theme.palette.mode === 'dark'\n      ? 'rgba(122, 2, 2, 0.3)'\n      : '#fbaaaa'};\n    justify-content: center;\n\n    svg {\n      color: ${theme.palette.mode === 'dark' ? '#FF1943' : 'red'};\n      padding-top: 1px;\n    }\n  `;\n\n  //! call on form submit\n  const onFinish = (values: any) => {\n    let valuesWithIdGenerator = {\n      id: tableList.length,\n      ...values\n    };\n\n    setTableList((tableList) => [...tableList, valuesWithIdGenerator]);\n    form.resetFields();\n  };\n\n  const sendTable = () => {\n    console.log(tableList);\n    progressContext.onTable(true);\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log('Failed:', errorInfo);\n  };\n  const MyDataGrid = styled(DataGrid)`\n    .MuiDataGrid-row:hover {\n      background-color: rgb(140 124 240 / 8%);\n    }\n    .MuiDataGrid-columnHeader:focus,\n    .MuiDataGrid-cell:focus,\n    .MuiDataGrid-columnHeader:focus-within,\n    .MuiDataGrid-cell:focus-within {\n      outline: solid transparent 1px !important;\n    }\n  `;\n  const columns: GridColDef[] = [\n    {\n      field: 'action',\n      headerName: 'Action',\n      sortable: false,\n      width: 70,\n      renderCell: (params) => {\n        const deleteHandler = (e: { stopPropagation: () => void }) => {\n          e.stopPropagation(); // don't select this row after clicking\n          setOpen(true);\n          const api: GridApi = params.api;\n          api\n            .getAllColumns()\n            .filter((c) => c.field !== '__check__' && !!c)\n            .forEach(() => {\n              setID(params.row.id);\n            });\n        };\n\n        return (\n          <Box display=\"flex\" flexDirection=\"row\">\n            <Tooltip title=\"Delete Order\" arrow>\n              <IconButton\n                sx={{\n                  '&:hover': {\n                    background: 'rgba(255, 25, 67, 0.25)'\n                  },\n                  color: '#FF1943'\n                }}\n                onClick={deleteHandler}\n                color=\"error\"\n                size=\"small\"\n              >\n                <DeleteSweepIcon fontSize=\"small\" />\n              </IconButton>\n            </Tooltip>\n          </Box>\n        );\n      }\n    },\n    { field: 'id', headerName: 'ID', width: 50 },\n    {\n      field: 'tableName',\n      editable: true,\n      headerName: 'Table Name',\n      width: 250\n    }\n  ];\n\n  const handleCellEditCommit = React.useCallback(\n    ({ id, field, value }) => {\n      if (field === 'tableName') {\n        const tableName = value.toString();\n        const updatedRows = tableList.map((row) => {\n          if (row.id === id) return { ...row, tableName };\n          return row;\n        });\n        setTableList(updatedRows);\n      }\n    },\n    [tableList]\n  );\n  const style = {\n    position: 'absolute' as 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4\n  };\n  const removeConfirmation = () => {\n    let newTableList = [...tableList];\n    newTableList = newTableList.filter((table) => table.id !== ID);\n    setTableList(newTableList);\n    setOpen(false);\n  };\n  const qrSend = (e: { target: { value: React.SetStateAction<string> } }) => {\n    setQRText(e.target.value);\n  };\n  return (\n    <>\n      <Toaster />\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        open={open}\n        onClose={() => {\n          setOpen(false);\n        }}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500\n        }}\n      >\n        <Fade in={open}>\n          <Box sx={style}>\n            <Stack>\n              <ErrAlert severity=\"error\">Pay attention</ErrAlert>\n            </Stack>\n\n            <Typography\n              id=\"transition-modal-description\"\n              sx={{ mt: 2, textAlign: 'center' }}\n            >\n              Are you sure you want to delete this item?\n            </Typography>\n\n            <Stack direction=\"row\" justifyContent=\"center\" spacing={2} pt={4}>\n              <Tooltip title=\"Confirm deletion\" arrow>\n                <IconButton\n                  onClick={removeConfirmation}\n                  sx={{ ml: 1 }}\n                  color=\"success\"\n                >\n                  <DoneIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Deny removal\" arrow>\n                <IconButton\n                  onClick={() => {\n                    setOpen(false);\n                  }}\n                  sx={{ ml: 1 }}\n                  color=\"error\"\n                >\n                  <CloseIcon />\n                </IconButton>\n              </Tooltip>\n            </Stack>\n          </Box>\n        </Fade>\n      </Modal>\n      <Helmet>\n        <title>مدیریت میز</title>\n      </Helmet>\n      <Container>\n        <Card variant=\"outlined\">\n          <Box p={2}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} md={5}>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justifyContent=\"left\"\n                  alignItems=\"stretch\"\n                  spacing={0}\n                >\n                  <Box pt={2} pb={2} pl={2}>\n                    <Typography variant=\"h3\">Add Table </Typography>\n                  </Box>\n                  <Divider />\n                  <Box pt={3} pb={2} pl={2} pr={2}>\n                    <Form\n                      form={form}\n                      name=\"control-hooks\"\n                      wrapperCol={{ span: 12 }}\n                      initialValues={{ remember: true }}\n                      onFinish={onFinish}\n                      onFinishFailed={onFinishFailed}\n                      autoComplete=\"on\"\n                    >\n                      <Box\n                        display=\"flex\"\n                        flexDirection=\"column\"\n                        textAlign=\"justify\"\n                        pt={1}\n                        pb={1}\n                      >\n                        <Form.Item\n                          name=\"tableName\"\n                          rules={[{ message: 'Please input your table name!' }]}\n                          style={{ paddingTop: '10px' }}\n                        >\n                          <TextField\n                            onChange={qrSend}\n                            value={''}\n                            label=\"Table name\"\n                            type=\"text\"\n                            fullWidth\n                          />\n                        </Form.Item>\n                      </Box>\n\n                      <Box\n                        display=\"flex\"\n                        flexDirection=\"row\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        textAlign=\"center\"\n                      >\n                        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                          <Box\n                            pt={2}\n                            pb={2}\n                            pl={2}\n                            pr={2}\n                            display=\"flex\"\n                            flexDirection=\"row\"\n                            flexWrap=\"wrap\"\n                            justifyContent=\"space-between\"\n                          >\n                            <Button\n                              sx={{ margin: 1 }}\n                              size=\"medium\"\n                              color=\"success\"\n                              variant=\"outlined\"\n                              startIcon={<DoneOutlineIcon />}\n                              onClick={sendTable}\n                            >\n                              Submit\n                            </Button>\n                            <Button\n                              size=\"medium\"\n                              sx={{ margin: 1 }}\n                              type=\"submit\"\n                              color=\"warning\"\n                              startIcon={<AddTaskIcon />}\n                            >\n                              Add new table\n                            </Button>\n                          </Box>\n                        </Form.Item>\n                      </Box>\n\n                      <Box\n                        display=\"flex\"\n                        flexDirection=\"row\"\n                        justifyContent=\"center\"\n                      >\n                        <Card>\n                          <Box p={1}>\n                            <QRCodeSVG value={`${qrText}`} />\n                          </Box>\n                        </Card>\n                      </Box>\n                    </Form>\n                  </Box>\n                </Grid>\n              </Grid>\n              <Grid item xs={12} md={7}>\n                <Box pt={3} pb={3}>\n                  <Card>\n                    <div style={{ height: 400, width: '100%' }}>\n                      <MyDataGrid\n                        rows={tableList}\n                        columns={columns}\n                        pageSize={5}\n                        rowsPerPageOptions={[5]}\n                        checkboxSelection\n                        onCellEditCommit={handleCellEditCommit}\n                      />\n                    </div>\n                  </Card>\n                </Box>\n              </Grid>\n            </Grid>\n          </Box>\n        </Card>\n        <BottomNav\n          className=\"pt-5\"\n          nextStep={true}\n          preStep={true}\n          forLink=\"orders\"\n          backLink=\"delivery\"\n          forText=\"Chose orders\"\n          backText=\"Delivery zone\"\n        />\n      </Container>\n      <Footer />\n    </>\n  );\n};\n\nexport default CreateTable;\n","import React, { useEffect } from 'react';\nimport AOS from 'aos';\nimport { Link } from 'react-router-dom';\nimport { Box, Button } from '@mui/material';\nimport DoubleArrowIcon from '@mui/icons-material/DoubleArrow';\nimport styled from 'styled-components';\n\nconst LeftArrow = styled(DoubleArrowIcon)`\n  -webkit-transform: rotate(180deg);\n  -moz-transform: rotate(180deg);\n  -ms-transform: rotate(180deg);\n  -o-transform: rotate(180deg);\n  transform: rotate(180deg);\n`;\n\nconst BottomNav = (props: any) => {\n  useEffect(() => {\n    AOS.init({\n      // Global settings:\n      disable: false, // accepts following values: 'phone', 'tablet', 'mobile', boolean, expression or function\n      startEvent: 'DOMContentLoaded', // name of the event dispatched on the document, that AOS should initialize on\n      initClassName: 'aos-init', // class applied after initialization\n      animatedClassName: 'aos-animate', // class applied on animation\n      useClassNames: false, // if true, will add content of `data-aos` as classes on scroll\n      disableMutationObserver: false, // disables automatic mutations' detections (advanced)\n      debounceDelay: 50, // the delay on debounce used while resizing window (advanced)\n      throttleDelay: 99, // the delay on throttle used while scrolling the page (advanced)\n\n      // Settings that can be overridden on per-element basis, by `data-aos-*` attributes:\n      offset: 120, // offset (in px) from the original trigger point\n      delay: 0, // values from 0 to 3000, with step 50ms\n      duration: 400, // values from 0 to 3000, with step 50ms\n      easing: 'ease', // default easing for AOS animations\n      once: true, // whether animation should happen only once - while scrolling down\n      mirror: false, // whether elements should animate out while scrolling past them\n      anchorPlacement: 'top-bottom' // defines which position of the element regarding to window should trigger the animation\n    });\n    AOS.refresh();\n  });\n  return (\n    <Box\n      pt={3}\n      display=\"flex\"\n      alignItems=\"flex-center\"\n      justifyContent=\"space-between\"\n      data-aos=\"fade-up\"\n      data-aos-delay=\"50\"\n      data-aos-duration=\"400\"\n      data-aos-easing=\"ease-in\"\n    >\n      <Link to={`/dashboards/${props.backLink}`}>\n        <Button\n          color=\"success\"\n          startIcon={<LeftArrow />}\n          variant=\"outlined\"\n          disabled={!props.preStep}\n          size=\"small\"\n        >\n          {props.backText}\n        </Button>\n      </Link>\n\n      {props.nextStep && (\n        <Link to={`/dashboards/${props.forLink}`}>\n          <Button color=\"error\" endIcon={<DoubleArrowIcon />} size=\"small\">\n            {props.forText}\n          </Button>\n        </Link>\n      )}\n    </Box>\n  );\n};\n\nexport default BottomNav;\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["qrcodegen","qrcodegen2","__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","_QrCode","version","errorCorrectionLevel","dataCodewords","msk","this","modules","isFunction","MIN_VERSION","MAX_VERSION","RangeError","size","row","i","push","slice","drawFunctionPatterns","allCodewords","addEccAndInterleave","drawCodewords","minPenalty","applyMask","drawFormatBits","penalty","getPenaltyScore","assert","mask","x","y","setFunctionModule","drawFinderPattern","alignPatPos","getAlignmentPatternPositions","numAlign","length","j","drawAlignmentPattern","drawVersion","data","formatBits","rem","bits","getBit","color","Math","floor","dy","dx","dist","max","abs","xx","yy","isDark","ver","ecl","getNumDataCodewords","numBlocks","NUM_ERROR_CORRECTION_BLOCKS","ordinal","blockEccLen","ECC_CODEWORDS_PER_BLOCK","rawCodewords","getNumRawDataModules","numShortBlocks","shortBlockLen","blocks","rsDiv","reedSolomonComputeDivisor","k","dat","ecc","reedSolomonComputeRemainder","concat","result","forEach","block","right","vert","invert","Error","runColor","runX","runHistory","PENALTY_N1","finderPenaltyAddHistory","finderPenaltyCountPatterns","PENALTY_N3","finderPenaltyTerminateAndCount","runY","PENALTY_N2","dark","reduce","sum","total","ceil","PENALTY_N4","step","pos","splice","n","core","currentRunColor","currentRunLength","pop","unshift","text","segs","QrSegment","makeSegments","encodeSegments","seg","makeBytes","dataUsedBits","minVersion","maxVersion","boostEcl","dataCapacityBits2","usedBits","getTotalBits","Ecc","MEDIUM","QUARTILE","HIGH","newEcl","bb","appendBits","mode","modeBits","numChars","numCharCountBits","getData","dataCapacityBits","min","padByte","degree","root","reedSolomonMultiply","divisor","map","_","factor","shift","coef","z","QrCode","val","len","cond","bitData","_QrSegment","Mode","BYTE","digits","isNumeric","parseInt","substr","NUMERIC","isAlphanumeric","temp","ALPHANUMERIC_CHARSET","charAt","ALPHANUMERIC","makeNumeric","makeAlphanumeric","toUtf8ByteArray","assignVal","ECI","NUMERIC_REGEX","test","ALPHANUMERIC_REGEX","ccbits","Infinity","str","encodeURI","charCodeAt","QrCode2","_Ecc","LOW","QrSegment2","_Mode","numBitsCharCount","KANJI","qrcodegen_default","ERROR_LEVEL_MAP","L","M","Q","H","DEFAULT_BGCOLOR","DEFAULT_FGCOLOR","generatePath","margin","ops","start","cell","join","excavateModules","excavation","h","w","getImageSettings","cells","includeMargin","imageSettings","numCells","defaultSize","scale","width","height","excavate","floorX","floorY","Path2D","addPath","e","QRCodeSVG","props","_a","level","bgColor","fgColor","otherProps","encodeText","getModules","calculatedImageSettings","image","React","xlinkHref","src","preserveAspectRatio","fgPath","viewBox","fill","d","shapeRendering","progressContext","useContext","ProgressContext","useState","tableList","setTableList","qrText","setQRText","open","setOpen","ID","setID","Form","form","theme","useTheme","ErrAlert","styled","Alert","palette","MyDataGrid","DataGrid","columns","field","headerName","sortable","renderCell","params","Box","display","flexDirection","Tooltip","title","arrow","IconButton","sx","background","onClick","stopPropagation","api","getAllColumns","filter","c","id","DeleteSweep","fontSize","editable","handleCellEditCommit","tableName","toString","updatedRows","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","position","top","left","transform","bgcolor","border","boxShadow","p","Stack","severity","Typography","mt","textAlign","direction","justifyContent","spacing","pt","newTableList","table","ml","Done","Close","Container","Card","variant","Grid","container","item","xs","md","alignItems","pb","pl","Divider","pr","name","wrapperCol","span","initialValues","remember","onFinish","values","valuesWithIdGenerator","resetFields","onFinishFailed","errorInfo","console","log","autoComplete","rules","message","style","paddingTop","TextField","onChange","label","type","fullWidth","offset","flexWrap","Button","startIcon","DoneOutline","onTable","AddTask","rows","pageSize","rowsPerPageOptions","checkboxSelection","onCellEditCommit","BottomNav","className","nextStep","preStep","forLink","backLink","forText","backText","Footer","LeftArrow","DoubleArrowIcon","useEffect","AOS","disable","startEvent","initClassName","animatedClassName","useClassNames","disableMutationObserver","debounceDelay","throttleDelay","delay","duration","easing","once","mirror","anchorPlacement","to","disabled","endIcon","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","F","s","done","_e","f","TypeError","err","normalCompletion","didErr","next","_e2"],"sourceRoot":""}