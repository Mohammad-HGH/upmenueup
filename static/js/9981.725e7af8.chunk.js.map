{"version":3,"file":"static/js/9981.725e7af8.chunk.js","mappings":"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","sources":["components/modules/pages/admin/TableMng.tsx","components/modules/shared/BottomNav.tsx"],"sourcesContent":["import {\n  Container,\n  Grid,\n  Card,\n  Divider,\n  Typography,\n  Box,\n  Button,\n  styled,\n  IconButton\n} from '@mui/material';\nimport React from 'react';\nimport BottomNav from '../../shared/BottomNav';\nimport Footer from '../../shared/Footer';\nimport TextField from '@mui/material/TextField';\nimport { Form } from 'antd';\n\nimport { DataGrid, GridApi, GridColDef } from '@mui/x-data-grid';\nimport DeleteSweepIcon from '@mui/icons-material/DeleteSweep';\nimport { QRCodeSVG } from 'qrcode.react';\nimport DoneOutlineIcon from '@mui/icons-material/DoneOutline';\nimport AddTaskIcon from '@mui/icons-material/AddTask';\n\nconst CreateTable = () => {\n  const [tableList, setTableList] = React.useState([]);\n  const [qrText, setQRText] = React.useState('');\n  const [form] = Form.useForm();\n\n  //! call on form submit\n  const onFinish = (values: any) => {\n    let valuesWithIdGenerator = {\n      id: tableList.length,\n      ...values\n    };\n\n    setTableList((tableList) => [...tableList, valuesWithIdGenerator]);\n    form.resetFields();\n  };\n\n  const sendTable = () => {\n    console.log(tableList);\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log('Failed:', errorInfo);\n  };\n  const MyDataGrid = styled(DataGrid)`\n    .MuiDataGrid-row:hover {\n      background-color: rgb(140 124 240 / 8%);\n    }\n    .MuiDataGrid-columnHeader:focus,\n    .MuiDataGrid-cell:focus,\n    .MuiDataGrid-columnHeader:focus-within,\n    .MuiDataGrid-cell:focus-within {\n      outline: solid transparent 1px !important;\n    }\n  `;\n  const columns: GridColDef[] = [\n    {\n      field: 'action',\n      headerName: 'Action',\n      sortable: false,\n      width: 70,\n      renderCell: (params) => {\n        const deleteHandler = (e: { stopPropagation: () => void }) => {\n          e.stopPropagation(); // don't select this row after clicking\n\n          let newUserSet1 = [...tableList];\n          const api: GridApi = params.api;\n\n          api\n            .getAllColumns()\n            .filter((c) => c.field !== '__check__' && !!c)\n            .forEach(() => {\n              newUserSet1 = newUserSet1.filter(\n                (user) => user.id !== params.row.id\n              );\n            });\n\n          setTableList(newUserSet1);\n        };\n\n        return (\n          <Box display=\"flex\" flexDirection=\"row\">\n            <IconButton onClick={deleteHandler} sx={{ ml: 1 }} color=\"inherit\">\n              <DeleteSweepIcon />\n            </IconButton>\n          </Box>\n        );\n      }\n    },\n    { field: 'id', headerName: 'ID', width: 50 },\n    {\n      field: 'tableName',\n      editable: true,\n      headerName: 'Table Name',\n      width: 250\n    }\n  ];\n\n  const handleCellEditCommit = React.useCallback(\n    ({ id, field, value }) => {\n      if (field === 'tableName') {\n        const tableName = value.toString();\n        const updatedRows = tableList.map((row) => {\n          if (row.id === id) return { ...row, tableName };\n          return row;\n        });\n        setTableList(updatedRows);\n      }\n    },\n    [tableList]\n  );\n\n  const qrSend = (e) => {\n    setQRText(e.target.value);\n  };\n  return (\n    <div>\n      <Container>\n        <Card variant=\"outlined\">\n          <Box p={2}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} md={5}>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justifyContent=\"left\"\n                  alignItems=\"stretch\"\n                  spacing={0}\n                >\n                  <Box pt={2} pb={2} pl={2}>\n                    <Typography variant=\"h3\">Add Table </Typography>\n                  </Box>\n                  <Divider />\n                  <Box pt={3} pb={2} pl={2} pr={2}>\n                    <Form\n                      form={form}\n                      name=\"control-hooks\"\n                      wrapperCol={{ span: 12 }}\n                      initialValues={{ remember: true }}\n                      onFinish={onFinish}\n                      onFinishFailed={onFinishFailed}\n                      autoComplete=\"on\"\n                    >\n                      <Box\n                        display=\"flex\"\n                        flexDirection=\"column\"\n                        textAlign=\"justify\"\n                        pt={1}\n                        pb={1}\n                      >\n                        <Form.Item\n                          name=\"tableName\"\n                          rules={[{ message: 'Please input your table name!' }]}\n                          style={{ paddingTop: '10px' }}\n                        >\n                          <TextField\n                            onChange={qrSend}\n                            value={''}\n                            label=\"Table name\"\n                            type=\"text\"\n                            fullWidth\n                          />\n                        </Form.Item>\n                      </Box>\n\n                      <Box\n                        display=\"flex\"\n                        flexDirection=\"row\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        textAlign=\"center\"\n                      >\n                        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                          <Box\n                            pt={2}\n                            pb={2}\n                            pl={2}\n                            pr={2}\n                            display=\"flex\"\n                            flexDirection=\"row\"\n                            flexWrap=\"wrap\"\n                            justifyContent=\"space-between\"\n                          >\n                            <Button\n                              sx={{ margin: 1 }}\n                              size=\"medium\"\n                              color=\"success\"\n                              variant=\"outlined\"\n                              startIcon={<DoneOutlineIcon />}\n                              onClick={sendTable}\n                            >\n                              Submit\n                            </Button>\n                            <Button\n                              size=\"medium\"\n                              sx={{ margin: 1 }}\n                              type=\"submit\"\n                              color=\"warning\"\n                              startIcon={<AddTaskIcon />}\n                            >\n                              Add new table\n                            </Button>\n                          </Box>\n                        </Form.Item>\n                      </Box>\n\n                      <Box\n                        display=\"flex\"\n                        flexDirection=\"row\"\n                        justifyContent=\"center\"\n                      >\n                        <Card>\n                          <Box p={1}>\n                            <QRCodeSVG value={`${qrText}`} />\n                          </Box>\n                        </Card>\n                      </Box>\n                    </Form>\n                  </Box>\n                </Grid>\n              </Grid>\n              <Grid item xs={12} md={7}>\n                <Box pt={3} pb={3}>\n                  <Card>\n                    <div style={{ height: 400, width: '100%' }}>\n                      <MyDataGrid\n                        rows={tableList}\n                        columns={columns}\n                        pageSize={5}\n                        rowsPerPageOptions={[5]}\n                        checkboxSelection\n                        onCellEditCommit={handleCellEditCommit}\n                      />\n                    </div>\n                  </Card>\n                </Box>\n              </Grid>\n            </Grid>\n          </Box>\n        </Card>\n        <BottomNav\n          className=\"pt-5\"\n          nextStep={true}\n          preStep={true}\n          forLink=\"orders\"\n          backLink=\"delivery\"\n          forText=\"Chose orders\"\n          backText=\"Delivery zone\"\n        />\n      </Container>\n      <Footer />\n    </div>\n  );\n};\n\nexport default CreateTable;\n","import React, { useEffect } from 'react';\nimport AOS from 'aos';\nimport { Link } from 'react-router-dom';\nimport { Box, Button } from '@mui/material';\nimport DoubleArrowIcon from '@mui/icons-material/DoubleArrow';\nimport styled from 'styled-components';\n\nconst LeftArrow = styled(DoubleArrowIcon)`\n  -webkit-transform: rotate(180deg);\n  -moz-transform: rotate(180deg);\n  -ms-transform: rotate(180deg);\n  -o-transform: rotate(180deg);\n  transform: rotate(180deg);\n`;\n\nconst BottomNav = (props: any) => {\n  useEffect(() => {\n    AOS.init({\n      // Global settings:\n      disable: false, // accepts following values: 'phone', 'tablet', 'mobile', boolean, expression or function\n      startEvent: 'DOMContentLoaded', // name of the event dispatched on the document, that AOS should initialize on\n      initClassName: 'aos-init', // class applied after initialization\n      animatedClassName: 'aos-animate', // class applied on animation\n      useClassNames: false, // if true, will add content of `data-aos` as classes on scroll\n      disableMutationObserver: false, // disables automatic mutations' detections (advanced)\n      debounceDelay: 50, // the delay on debounce used while resizing window (advanced)\n      throttleDelay: 99, // the delay on throttle used while scrolling the page (advanced)\n\n      // Settings that can be overridden on per-element basis, by `data-aos-*` attributes:\n      offset: 120, // offset (in px) from the original trigger point\n      delay: 0, // values from 0 to 3000, with step 50ms\n      duration: 400, // values from 0 to 3000, with step 50ms\n      easing: 'ease', // default easing for AOS animations\n      once: true, // whether animation should happen only once - while scrolling down\n      mirror: false, // whether elements should animate out while scrolling past them\n      anchorPlacement: 'top-bottom' // defines which position of the element regarding to window should trigger the animation\n    });\n    AOS.refresh();\n  });\n  return (\n    <Box\n      pt={3}\n      display=\"flex\"\n      alignItems=\"flex-center\"\n      justifyContent=\"space-between\"\n      data-aos=\"fade-up\"\n      data-aos-delay=\"50\"\n      data-aos-duration=\"400\"\n      data-aos-easing=\"ease-in\"\n    >\n      <Link to={`/dashboards/${props.backLink}`}>\n        <Button\n          color=\"success\"\n          startIcon={<LeftArrow />}\n          variant=\"outlined\"\n          disabled={!props.preStep}\n          size=\"small\"\n        >\n          {props.backText}\n        </Button>\n      </Link>\n\n      {props.nextStep && (\n        <Link to={`/dashboards/${props.forLink}`}>\n          <Button color=\"error\" endIcon={<DoubleArrowIcon />} size=\"small\">\n            {props.forText}\n          </Button>\n        </Link>\n      )}\n    </Box>\n  );\n};\n\nexport default BottomNav;\n"],"names":["React","tableList","setTableList","qrText","setQRText","Form","form","MyDataGrid","styled","DataGrid","columns","field","headerName","sortable","width","renderCell","params","display","flexDirection","onClick","e","stopPropagation","newUserSet1","api","getAllColumns","filter","c","forEach","user","id","row","sx","ml","color","editable","handleCellEditCommit","value","tableName","toString","updatedRows","map","variant","p","container","spacing","item","xs","md","direction","justifyContent","alignItems","pt","pb","pl","pr","name","wrapperCol","span","initialValues","remember","onFinish","values","valuesWithIdGenerator","length","resetFields","onFinishFailed","errorInfo","console","log","autoComplete","textAlign","rules","message","style","paddingTop","onChange","target","label","type","fullWidth","offset","flexWrap","margin","size","startIcon","height","rows","pageSize","rowsPerPageOptions","checkboxSelection","onCellEditCommit","className","nextStep","preStep","forLink","backLink","forText","backText","LeftArrow","DoubleArrowIcon","props","useEffect","AOS","disable","startEvent","initClassName","animatedClassName","useClassNames","disableMutationObserver","debounceDelay","throttleDelay","delay","duration","easing","once","mirror","anchorPlacement","to","disabled","endIcon"],"sourceRoot":""}