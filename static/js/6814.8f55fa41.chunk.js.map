{"version":3,"file":"static/js/6814.8f55fa41.chunk.js","mappings":"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","sources":["components/modules/interfaces/CustomizedSwitches.tsx","components/modules/pages/admin/CreateMenu.tsx","components/modules/shared/BottomNav.tsx"],"sourcesContent":["import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch, { SwitchProps } from '@mui/material/Switch';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\n\nconst Android12Switch = styled(Switch)(({ theme }) => ({\n  padding: 8,\n  '& .MuiSwitch-track': {\n    borderRadius: 22 / 2,\n    '&:before, &:after': {\n      content: '\"\"',\n      position: 'absolute',\n      top: '50%',\n      transform: 'translateY(-50%)',\n      width: 16,\n      height: 16\n    },\n    '&:before': {\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\n        theme.palette.getContrastText(theme.palette.primary.main)\n      )}\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"/></svg>')`,\n      left: 12\n    },\n    '&:after': {\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\n        theme.palette.getContrastText(theme.palette.primary.main)\n      )}\" d=\"M19,13H5V11H19V13Z\" /></svg>')`,\n      right: 12\n    }\n  },\n  '& .MuiSwitch-thumb': {\n    boxShadow: 'none',\n    width: 16,\n    height: 16,\n    margin: 2\n  }\n}));\n\n// const IOSSwitch = styled((props: SwitchProps) => (\n//   <Switch focusVisibleClassName=\".Mui-focusVisible\" disableRipple {...props} />\n// ))(({ theme }) => ({\n//   width: 42,\n//   height: 26,\n//   padding: 0,\n//   '& .MuiSwitch-switchBase': {\n//     padding: 0,\n//     margin: 2,\n//     transitionDuration: '300ms',\n//     '&.Mui-checked': {\n//       transform: 'translateX(16px)',\n//       color: '#fff',\n//       '& + .MuiSwitch-track': {\n//         backgroundColor: theme.palette.mode === 'dark' ? '#2ECA45' : '#65C466',\n//         opacity: 1,\n//         border: 0\n//       },\n//       '&.Mui-disabled + .MuiSwitch-track': {\n//         opacity: 0.5\n//       }\n//     },\n//     '&.Mui-focusVisible .MuiSwitch-thumb': {\n//       color: '#33cf4d',\n//       border: '6px solid #fff'\n//     },\n//     '&.Mui-disabled .MuiSwitch-thumb': {\n//       color:\n//         theme.palette.mode === 'light'\n//           ? theme.palette.grey[100]\n//           : theme.palette.grey[600]\n//     },\n//     '&.Mui-disabled + .MuiSwitch-track': {\n//       opacity: theme.palette.mode === 'light' ? 0.7 : 0.3\n//     }\n//   },\n//   '& .MuiSwitch-thumb': {\n//     boxSizing: 'border-box',\n//     width: 22,\n//     height: 22\n//   },\n//   '& .MuiSwitch-track': {\n//     borderRadius: 26 / 2,\n//     backgroundColor: theme.palette.mode === 'light' ? '#E9E9EA' : '#39393D',\n//     opacity: 1,\n//     transition: theme.transitions.create(['background-color'], {\n//       duration: 500\n//     })\n//   }\n// }));\n\nconst AntSwitch = styled(Switch)(({ theme }) => ({\n  width: 28,\n  height: 16,\n  padding: 0,\n  display: 'flex',\n  '&:active': {\n    '& .MuiSwitch-thumb': {\n      width: 15\n    },\n    '& .MuiSwitch-switchBase.Mui-checked': {\n      transform: 'translateX(9px)'\n    }\n  },\n  '& .MuiSwitch-switchBase': {\n    padding: 2,\n    '&.Mui-checked': {\n      transform: 'translateX(12px)',\n      color: '#fff',\n      '& + .MuiSwitch-track': {\n        opacity: 1,\n        backgroundColor: theme.palette.mode === 'dark' ? '#177ddc' : '#1890ff'\n      }\n    }\n  },\n  '& .MuiSwitch-thumb': {\n    boxShadow: '0 2px 4px 0 rgb(0 35 11 / 20%)',\n    width: 12,\n    height: 12,\n    borderRadius: 6,\n    transition: theme.transitions.create(['width'], {\n      duration: 200\n    })\n  },\n  '& .MuiSwitch-track': {\n    borderRadius: 16 / 2,\n    opacity: 1,\n    backgroundColor:\n      theme.palette.mode === 'dark'\n        ? 'rgba(255,255,255,.35)'\n        : 'rgba(0,0,0,.25)',\n    boxSizing: 'border-box'\n  }\n}));\n\nexport function DefaultSwitch() {\n  return (\n    <FormGroup>\n      <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n        <Typography>Off</Typography>\n        <AntSwitch defaultChecked inputProps={{ 'aria-label': 'ant design' }} />\n        <Typography>On</Typography>\n      </Stack>\n    </FormGroup>\n  );\n}\nexport function AndroidSwitch() {\n  return (\n    <FormGroup>\n      <FormControlLabel\n        control={<Android12Switch defaultChecked />}\n        label=\"Android 12\"\n      />\n    </FormGroup>\n  );\n}\nexport function IOSwitch() {\n  return (\n    <FormGroup>\n      <FormControlLabel\n        control={<Switch sx={{ m: 1 }} defaultChecked color=\"success\" />}\n        label=\"\"\n      />\n    </FormGroup>\n  );\n}\n\nexport function MuiSwitch() {\n  return (\n    <FormGroup>\n      <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n        <Typography>Off</Typography>\n        <AntSwitch defaultChecked inputProps={{ 'aria-label': 'ant design' }} />\n        <Typography>On</Typography>\n      </Stack>\n    </FormGroup>\n  );\n}\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport BottomNav from '../../shared/BottomNav';\nimport { Helmet } from 'react-helmet-async';\nimport Alert from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\nimport {\n  Container,\n  Grid,\n  Card,\n  Divider,\n  Typography,\n  Box,\n  Button,\n  IconButton,\n  Modal,\n  Backdrop,\n  Fade,\n  useTheme,\n  InputLabel,\n  InputAdornment,\n  FormControl,\n  OutlinedInput\n} from '@mui/material';\nimport Footer from 'src/components/modules/shared/Footer';\nimport TextField from '@mui/material/TextField';\nimport { Form } from 'antd';\n\n// Import Swiper React components\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\n// import required modules\nimport { Pagination } from 'swiper';\nimport { IOSwitch } from '../../interfaces/CustomizedSwitches';\n// import MyButton from '../../interfaces/Button/MyButton';\n\nimport { DataGrid, GridApi, GridColDef } from '@mui/x-data-grid';\nimport DeleteSweepIcon from '@mui/icons-material/DeleteSweep';\nimport DoneIcon from '@mui/icons-material/Done';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DoneOutlineIcon from '@mui/icons-material/DoneOutline';\nimport AddTaskIcon from '@mui/icons-material/AddTask';\n\nconst CreateMenu: React.FunctionComponent = () => {\n  const [foodList, setFoodList] = useState([]);\n\n  const [form] = Form.useForm();\n  const theme = useTheme();\n\n  const [open, setOpen] = useState(false);\n\n  const ErrAlert = styled(Alert)`\n    border: 1px solid red;\n    color: ${theme.palette.mode === 'dark' ? '#FF1943' : 'red'};\n    background-color: ${theme.palette.mode === 'dark'\n      ? 'rgba(122, 2, 2, 0.3)'\n      : '#fbaaaa'};\n    justify-content: center;\n\n    svg {\n      color: ${theme.palette.mode === 'dark' ? '#FF1943' : 'red'};\n      padding-top: 1px;\n    }\n  `;\n  const MyAlert = styled(Alert)`\n    border: 1px solid green;\n    color: rgb(187, 233, 166);\n    background-color: rgba(17, 57, 0, 0.3);\n  `;\n\n  const MyDataGrid = styled(DataGrid)`\n    .MuiDataGrid-row:hover {\n      background-color: rgb(140 124 240 / 8%);\n    }\n    .MuiDataGrid-columnHeader:focus,\n    .MuiDataGrid-cell:focus,\n    .MuiDataGrid-columnHeader:focus-within,\n    .MuiDataGrid-cell:focus-within {\n      outline: solid transparent 1px !important;\n    }\n  `;\n\n  const style = {\n    position: 'absolute' as 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4\n  };\n\n  //! call on form submit\n  const onFinish = (values: any) => {\n    let valuesWithIdGenerator = {\n      id: foodList.length,\n      ...values\n    };\n\n    setFoodList((foodList) => [...foodList, valuesWithIdGenerator]);\n    form.resetFields();\n  };\n\n  const sendMenu = () => {\n    console.log(foodList);\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const columns: GridColDef[] = [\n    {\n      field: 'action',\n      headerName: 'Action',\n      sortable: false,\n      width: 150,\n      renderCell: (params) => {\n        const deleteHandler = (e: { stopPropagation: () => void }) => {\n          e.stopPropagation(); // don't select this row after clicking\n\n          let newUserSet1 = [...foodList];\n          const api: GridApi = params.api;\n\n          api\n            .getAllColumns()\n            .filter((c) => c.field !== '__check__' && !!c)\n            .forEach(() => {\n              newUserSet1 = newUserSet1.filter(\n                (user) => user.id !== params.row.id\n              );\n            });\n\n          setFoodList(newUserSet1);\n        };\n\n        return (\n          <Box display=\"flex\" flexDirection=\"row\">\n            <IconButton onClick={deleteHandler} sx={{ ml: 1 }} color=\"error\">\n              <DeleteSweepIcon />\n            </IconButton>\n          </Box>\n        );\n      }\n    },\n    { field: 'id', headerName: 'ID', width: 50 },\n    {\n      field: 'productName',\n      editable: true,\n      headerName: 'Product Name',\n      width: 180\n    },\n    { field: 'category', editable: true, headerName: 'Category', width: 130 },\n    { field: 'price', editable: true, headerName: 'Price', width: 100 },\n    {\n      field: 'description',\n      editable: true,\n      headerName: 'Description',\n      width: 330\n    }\n  ];\n  const handleCellEditCommit = React.useCallback(\n    ({ id, field, value }) => {\n      if (field === 'productName') {\n        const productName = value.toString();\n        const updatedRows = foodList.map((row) => {\n          if (row.id === id) {\n            return { ...row, productName };\n          }\n          return row;\n        });\n        setFoodList(updatedRows);\n      } else if (field === 'category') {\n        const category = value.toString();\n        const updatedRows = foodList.map((row) => {\n          if (row.id === id) {\n            return { ...row, category };\n          }\n          return row;\n        });\n        setFoodList(updatedRows);\n      } else if (field === 'price') {\n        const price = value.toString();\n        const updatedRows = foodList.map((row) => {\n          if (row.id === id) {\n            return { ...row, price };\n          }\n          return row;\n        });\n        setFoodList(updatedRows);\n      } else if (field === 'description') {\n        const description = value.toString();\n        const updatedRows = foodList.map((row) => {\n          if (row.id === id) {\n            return { ...row, description };\n          }\n          return row;\n        });\n        setFoodList(updatedRows);\n      }\n    },\n    [foodList]\n  );\n  return (\n    <>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        open={open}\n        onClose={() => {\n          setOpen(false);\n        }}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500\n        }}\n      >\n        <Fade in={open}>\n          <Box sx={style}>\n            <Stack>\n              <ErrAlert severity=\"error\">Pay attention</ErrAlert>\n            </Stack>\n\n            <Typography id=\"transition-modal-description\" sx={{ mt: 2 }}>\n              Are you sure you want to delete this item?\n            </Typography>\n\n            <Stack direction=\"row\" spacing={2} pt={4}>\n              <IconButton\n                onClick={() => {\n                  setOpen(false);\n                }}\n                sx={{ ml: 1 }}\n                color=\"inherit\"\n              >\n                <DoneIcon />\n              </IconButton>\n              <IconButton\n                onClick={() => {\n                  setOpen(false);\n                }}\n                sx={{ ml: 1 }}\n                color=\"inherit\"\n              >\n                <CloseIcon />\n              </IconButton>\n            </Stack>\n          </Box>\n        </Fade>\n      </Modal>\n      <Container maxWidth=\"lg\">\n        <Helmet>\n          <title>صفحه ساخت منو</title>\n        </Helmet>\n        <Box pt={3} pb={5}>\n          <Stack sx={{ width: '100%' }} spacing={2}>\n            <MyAlert severity=\"success\">\n              Well done! You successfully read this important alert message.\n            </MyAlert>\n          </Stack>\n        </Box>\n\n        <Grid container spacing={5}>\n          <Grid item xs={12} md={6}>\n            <Card variant=\"outlined\">\n              <Grid\n                container\n                direction=\"column\"\n                justifyContent=\"left\"\n                alignItems=\"stretch\"\n                spacing={0}\n              >\n                <Box pt={2} pb={2} pl={2}>\n                  <Typography variant=\"h3\">Add Product Form</Typography>\n                </Box>\n                <Divider />\n                <Box pt={3} pb={2} pl={2} pr={2}>\n                  <Form\n                    form={form}\n                    name=\"control-hooks\"\n                    wrapperCol={{ span: 12 }}\n                    initialValues={{ remember: true }}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    autoComplete=\"on\"\n                  >\n                    <Box\n                      display=\"flex\"\n                      flexDirection=\"column\"\n                      textAlign=\"justify\"\n                      pt={1}\n                      pb={1}\n                    >\n                      <Form.Item\n                        name=\"productName\"\n                        rules={[{ message: 'Please input your product name!' }]}\n                        style={{ paddingTop: '10px' }}\n                      >\n                        <TextField\n                          value={''}\n                          label=\"Product name\"\n                          type=\"text\"\n                          fullWidth\n                        />\n                      </Form.Item>\n                    </Box>\n\n                    <Box\n                      display=\"flex\"\n                      flexDirection=\"row\"\n                      textAlign=\"justify\"\n                      pb={1}\n                    >\n                      <Grid container columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                        <Grid item xs={6}>\n                          <Form.Item\n                            name=\"category\"\n                            rules={[{ message: 'Please input your Category!' }]}\n                            style={{ paddingTop: '10px' }}\n                          >\n                            <TextField\n                              label=\"Category\"\n                              type=\"text\"\n                              fullWidth\n                              value={''}\n                            />\n                          </Form.Item>\n                        </Grid>\n                        <Grid item xs={6}>\n                          <Form.Item\n                            name=\"price\"\n                            rules={[{ message: 'Please input your Price!' }]}\n                            style={{ paddingTop: '10px' }}\n                          >\n                            {/* <InputMask\n                              mask=\"999, 999\"\n                              value={' '}\n                              disabled={false}\n                            > */}\n                            <FormControl variant=\"outlined\">\n                              <InputLabel>Price</InputLabel>\n                              <OutlinedInput\n                                type=\"text\"\n                                endAdornment={\n                                  <InputAdornment position=\"end\">\n                                    تومان\n                                  </InputAdornment>\n                                }\n                                label=\"Price\"\n                              />\n                            </FormControl>\n                            {/* </InputMask> */}\n                          </Form.Item>\n                        </Grid>\n                      </Grid>\n                    </Box>\n\n                    <Box\n                      display=\"flex\"\n                      flexDirection=\"column\"\n                      textAlign=\"justify\"\n                      pb={1}\n                    >\n                      <Form.Item\n                        name=\"description\"\n                        rules={[{ message: 'Please input your product name!' }]}\n                        style={{ paddingTop: '10px' }}\n                      >\n                        <TextField\n                          id=\"outlined-multiline-static\"\n                          label=\"Food Description\"\n                          multiline\n                          fullWidth\n                          value={''}\n                          rows={5}\n                        />\n                      </Form.Item>\n                    </Box>\n\n                    <Box>\n                      <Form.Item\n                        name=\"foodImage\"\n                        rules={[{ message: 'Please input your food image!' }]}\n                        style={{ paddingTop: '10px' }}\n                      >\n                        <TextField value={''} type=\"file\" fullWidth />\n                      </Form.Item>\n                    </Box>\n\n                    <Box\n                      display=\"flex\"\n                      flexDirection=\"row\"\n                      justifyContent=\"center\"\n                      alignItems=\"center\"\n                      textAlign=\"center\"\n                    >\n                      <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                        <Box\n                          pt={2}\n                          pb={2}\n                          pl={2}\n                          pr={2}\n                          display=\"flex\"\n                          flexDirection=\"row\"\n                          justifyContent=\"space-between\"\n                        >\n                          <Button\n                            sx={{ margin: 1 }}\n                            size=\"medium\"\n                            color=\"success\"\n                            variant=\"outlined\"\n                            startIcon={<DoneOutlineIcon />}\n                            onClick={sendMenu}\n                          >\n                            Submit\n                          </Button>\n                          <Button\n                            size=\"medium\"\n                            sx={{ margin: 1 }}\n                            type=\"submit\"\n                            color=\"warning\"\n                            startIcon={<AddTaskIcon />}\n                          >\n                            Save & Add\n                          </Button>\n                        </Box>\n                      </Form.Item>\n                    </Box>\n                  </Form>\n                </Box>\n              </Grid>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Card variant=\"outlined\">\n              <Grid\n                container\n                direction=\"column\"\n                justifyContent=\"left\"\n                alignItems=\"stretch\"\n                spacing={0}\n              >\n                <Box pt={2} pb={2} pl={2}>\n                  <Typography variant=\"h3\">Products</Typography>\n                </Box>\n                <Divider />\n              </Grid>\n              <Box>\n                <Swiper\n                  pagination={{\n                    dynamicBullets: true\n                  }}\n                  modules={[Pagination]}\n                  className=\"mySwiper\"\n                >\n                  {foodList.map((foodItems) => {\n                    return (\n                      <SwiperSlide key={foodItems.id}>\n                        <img src={foodItems.foodImage} alt=\"\" />\n                      </SwiperSlide>\n                    );\n                  })}\n                </Swiper>\n\n                <Grid\n                  container\n                  direction=\"column\"\n                  justifyContent=\"left\"\n                  alignItems=\"stretch\"\n                  spacing={0}\n                >\n                  <Box\n                    pt={2}\n                    pb={2}\n                    pl={2}\n                    pr={2}\n                    display=\"flex\"\n                    flexDirection=\"row\"\n                    justifyContent=\"space-between\"\n                    alignItems=\"center\"\n                  >\n                    <Typography variant=\"h6\">Status Available</Typography>\n                    <IOSwitch />\n                  </Box>\n                  <Divider />\n                  <Box\n                    pt={2}\n                    pb={2}\n                    pl={2}\n                    pr={2}\n                    display=\"flex\"\n                    flexDirection=\"row\"\n                    justifyContent=\"space-between\"\n                    alignItems=\"center\"\n                  >\n                    <Typography variant=\"h6\">Discount Active</Typography>\n                    <IOSwitch />\n                  </Box>\n                </Grid>\n              </Box>\n            </Card>\n          </Grid>\n        </Grid>\n\n        <Box pt={3} pb={3}>\n          <Card>\n            <div style={{ height: 400, width: '100%' }}>\n              <MyDataGrid\n                rows={foodList}\n                columns={columns}\n                pageSize={5}\n                rowsPerPageOptions={[5]}\n                checkboxSelection\n                onCellEditCommit={handleCellEditCommit}\n              />\n            </div>\n          </Card>\n        </Box>\n\n        <BottomNav\n          className=\"pt-5\"\n          nextStep={true}\n          preStep={true}\n          backLink=\"orders\"\n          forLink=\"themes\"\n          forText=\"Select theme\"\n          backText=\"Select order\"\n        />\n      </Container>\n      <Footer />\n    </>\n  );\n};\n\nexport default CreateMenu;\n","import React, { useEffect } from 'react';\nimport AOS from 'aos';\nimport { Link } from 'react-router-dom';\nimport { Box, Button } from '@mui/material';\nimport DoubleArrowIcon from '@mui/icons-material/DoubleArrow';\nimport styled from 'styled-components';\n\nconst LeftArrow = styled(DoubleArrowIcon)`\n  -webkit-transform: rotate(180deg);\n  -moz-transform: rotate(180deg);\n  -ms-transform: rotate(180deg);\n  -o-transform: rotate(180deg);\n  transform: rotate(180deg);\n`;\n\nconst BottomNav = (props: any) => {\n  useEffect(() => {\n    AOS.init({\n      // Global settings:\n      disable: false, // accepts following values: 'phone', 'tablet', 'mobile', boolean, expression or function\n      startEvent: 'DOMContentLoaded', // name of the event dispatched on the document, that AOS should initialize on\n      initClassName: 'aos-init', // class applied after initialization\n      animatedClassName: 'aos-animate', // class applied on animation\n      useClassNames: false, // if true, will add content of `data-aos` as classes on scroll\n      disableMutationObserver: false, // disables automatic mutations' detections (advanced)\n      debounceDelay: 50, // the delay on debounce used while resizing window (advanced)\n      throttleDelay: 99, // the delay on throttle used while scrolling the page (advanced)\n\n      // Settings that can be overridden on per-element basis, by `data-aos-*` attributes:\n      offset: 120, // offset (in px) from the original trigger point\n      delay: 0, // values from 0 to 3000, with step 50ms\n      duration: 400, // values from 0 to 3000, with step 50ms\n      easing: 'ease', // default easing for AOS animations\n      once: true, // whether animation should happen only once - while scrolling down\n      mirror: false, // whether elements should animate out while scrolling past them\n      anchorPlacement: 'top-bottom' // defines which position of the element regarding to window should trigger the animation\n    });\n    AOS.refresh();\n  });\n  return (\n    <Box\n      pt={3}\n      display=\"flex\"\n      alignItems=\"flex-center\"\n      justifyContent=\"space-between\"\n      data-aos=\"fade-up\"\n      data-aos-delay=\"50\"\n      data-aos-duration=\"400\"\n      data-aos-easing=\"ease-in\"\n    >\n      <Link to={`/dashboards/${props.backLink}`}>\n        <Button\n          color=\"success\"\n          startIcon={<LeftArrow />}\n          variant=\"outlined\"\n          disabled={!props.preStep}\n          size=\"small\"\n        >\n          {props.backText}\n        </Button>\n      </Link>\n\n      {props.nextStep && (\n        <Link to={`/dashboards/${props.forLink}`}>\n          <Button color=\"error\" endIcon={<DoubleArrowIcon />} size=\"small\">\n            {props.forText}\n          </Button>\n        </Link>\n      )}\n    </Box>\n  );\n};\n\nexport default BottomNav;\n"],"names":["styled","Switch","theme","padding","borderRadius","content","position","top","transform","width","height","backgroundImage","encodeURIComponent","palette","getContrastText","primary","main","left","right","boxShadow","margin","display","color","opacity","backgroundColor","mode","transition","transitions","create","duration","boxSizing","IOSwitch","control","sx","m","defaultChecked","label","useState","foodList","setFoodList","Form","form","useTheme","open","setOpen","ErrAlert","Alert","MyAlert","MyDataGrid","DataGrid","columns","field","headerName","sortable","renderCell","params","flexDirection","onClick","e","stopPropagation","newUserSet1","api","getAllColumns","filter","c","forEach","user","id","row","ml","editable","handleCellEditCommit","React","value","productName","toString","updatedRows","map","category","price","description","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","in","bgcolor","border","p","severity","mt","direction","spacing","pt","maxWidth","pb","container","item","xs","md","variant","justifyContent","alignItems","pl","pr","name","wrapperCol","span","initialValues","remember","onFinish","values","valuesWithIdGenerator","length","resetFields","onFinishFailed","errorInfo","console","log","autoComplete","textAlign","rules","message","style","paddingTop","type","fullWidth","columnSpacing","sm","endAdornment","multiline","rows","offset","size","startIcon","pagination","dynamicBullets","modules","Pagination","className","foodItems","src","foodImage","alt","pageSize","rowsPerPageOptions","checkboxSelection","onCellEditCommit","nextStep","preStep","backLink","forLink","forText","backText","LeftArrow","DoubleArrowIcon","props","useEffect","AOS","disable","startEvent","initClassName","animatedClassName","useClassNames","disableMutationObserver","debounceDelay","throttleDelay","delay","easing","once","mirror","anchorPlacement","to","disabled","endIcon"],"sourceRoot":""}